{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allAsciidoc":{"edges":[{"node":{"id":"68bd2d61-d00d-5604-bb1c-7fb1f073268a","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#_may_2021\">2. May 2021</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_may_7_2021\">2.1. May 7, 2021</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>{https://site.fortytwobinary.com/[Site Homepage]</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\" height=\"32\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary technical issues journal for David L. Whitehurst\nThis document is subject to great change and will be maintained in a software\nrepository <a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This document was written using asciidoc markup and the HTML you see is\ngenerated by a tool driven using Python called asciidoctor. This\nIssues Journal is a powerful document that can be of great value in the\nevent of data loss, machine crashes, backups, maintenance, installations,\nand troubleshooting.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document contains my writings of technical issues that I am dealing with\nat work (names changed to protect the innocent) and/or issues I am dealing with\nat home on machines I own or my home network.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_may_2021\">2. May 2021</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>I&#8217;m currently very busy with MuleSoft work and with a knowledge management system\nbeing proposed to my employer. I&#8217;m learning lots of new things and trying to\nprepare for a CKAD or Certified Kubernetes Application Developer certification.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_may_7_2021\">2.1. May 7, 2021</h3>\n<div class=\"paragraph\">\n<p>I need to create a custom Mule component for Mule 4 that verifies a JSON payload\nspecifically for both decimal currency values and rounded or integer currency values. The validator needs to parse the payload and test load java&#8217;s BigDecimal\nand BigInteger to assure that we can convert and maintain these values as Strings.</p>\n</div>\n<div class=\"paragraph\">\n<p>MuleSoft documentation provides a high-level project creation for the initial\ngeneration of a working component. This document is found here: <a href=\"https://docs.mulesoft.com/mule-sdk/1.1/getting-started\" class=\"bare\">https://docs.mulesoft.com/mule-sdk/1.1/getting-started</a></p>\n</div>\n<div class=\"paragraph\">\n<p>I had great difficulty making the operations show up in AnypointStudio with my\nnamespaces for operations. I also needed the payload in the component&#8217;s operation\nmethod and this posting or KB from MuleSoft seems to have an answer. I need to\ntest this myself but it may be what I really need. <a href=\"https://help.mulesoft.com/s/article/How-To-Pass-Payload-In-Mule-4-SDK\" class=\"bare\">https://help.mulesoft.com/s/article/How-To-Pass-Payload-In-Mule-4-SDK</a></p>\n</div>\n<div class=\"paragraph\">\n<p>More to come &#8230;&#8203;</p>\n</div>\n</div>\n</div>\n</div>","document":{"title":"Technical Issues Journal"},"fields":{"slug":"/pages/issues/"}}},{"node":{"id":"2b32c715-1f46-5d40-8b02-266c9abee64b","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#_preliminaries\">2. Preliminaries</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_goals\">2.1. Goals</a></li>\n<li><a href=\"#_available_platforms\">2.2. Available Platforms</a></li>\n<li><a href=\"#_dependencies\">2.3. Dependencies</a></li>\n</ul>\n</li>\n<li><a href=\"#_installation_linux\">3. Installation Linux</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_installation_debian_9_stretch\">3.1. Installation Debian 9 Stretch</a></li>\n<li><a href=\"#_installation_debian_10_buster\">3.2. Installation Debian 10 Buster</a></li>\n<li><a href=\"#_installation_ubuntu_20_4_lts\">3.3. Installation Ubuntu 20.4 LTS</a></li>\n</ul>\n</li>\n<li><a href=\"#_mac_os_x\">4. Mac OS-X</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_install_docker_desktop\">4.1. Install Docker Desktop</a></li>\n</ul>\n</li>\n<li><a href=\"#_windows\">5. Windows</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_windows_10_installation\">5.1. Windows 10 Installation</a></li>\n</ul>\n</li>\n<li><a href=\"#_docker_basics\">6. Docker Basics</a></li>\n<li><a href=\"#_docker_run_and_stop\">7. Docker Run and Stop</a></li>\n<li><a href=\"#_docker_compose\">8. Docker Compose</a></li>\n<li><a href=\"#_docker_build\">9. Docker Build</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_dockercompose_build\">9.1. Dockercompose Build</a></li>\n<li><a href=\"#_dockerfile_build\">9.2. Dockerfile Build</a></li>\n</ul>\n</li>\n<li><a href=\"#_cheatsheet\">Appendix A: Cheatsheet</a></li>\n<li><a href=\"#_acronyms\">Appendix B: Acronyms</a></li>\n<li><a href=\"#_glossary\">Appendix C: Glossary</a></li>\n<li><a href=\"#_license\">Appendix D: License</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/docker.jpg\" alt=\"Docker\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://site.fortytwobinary.com/\">Site Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\" height=\"32\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary service documentation for Docker\non multiple platforms. This document is subject to great change and will\nbe maintained in a software repository <a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nThis technical reference was drafted and is maintained as a DevOps reference to the work that occurs on\nthe FortyTwoBinary network and infrastructure. The powerful command-line instructions found here,\nmay or may not be accurate or timely. This warning is given to let the DevOp be aware that commands\nmay not be idempotent and before root-level (sudo) actions are taken, to please think twice before\nhitting the Enter key.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This document was written using asciidoc markup and the HTML you see is generated by a tool driven\nusing Python called asciidoctor. This technical reference is a powerful document that can be of great value\nin the event of data loss, machine crashes, backups, maintenance, installations, and troubleshooting.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The instructions here provide directions for the installation of Docker on various platforms. Docker\nis currently installed on KM8-P hardware, Debian 9 (Stretch) linux/arm64 and Pi Model 3B and 4B,\nUbuntu 20.04 LTS, linux/arm64. Currently, I do not have Docker on my Windows 10 Professional server. I\ncatch myself wishing it was there time after time. This document will ultimately contain the\ninstructions needed to have Docker on all of my machines.</p>\n</div>\n<div class=\"paragraph\">\n<p>Once Docker is installed, Docker compose should be available as well. And, I&#8217;ve found that buildx\nwas needed for another task for the arm64 images. Documentation for all things Docker will be found\nhere. After installation documentation, administration and user texts will follow. Acronyms, a\nGlossary, and a Cheatsheet will be found in the appendices.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">My Mission</div>\n<div class=\"paragraph\">\n<p>Kubernetes has emerged as powerful way to serve web content and move\ndata over the internet at grand scale. This is very expensive even for\nwell-paid consultants to learn on their own. Small computers and virtual\nmachines are inexpensive and convenient to own. My mission is to learn\nmore about containers, hosting, and clustering all on my own time and\ndo this economically of course.</p>\n</div>\n<div class=\"paragraph\">\n<p>Turing Pi is now making a cluster board for multiple Raspberry Pi boards\nand the cluster capability for up to 28 cores or 7 Raspberry Pi computers.\nCanonical Ubuntu is also producing a software product called MicroK8s or\nwhat they call a no-more, no-less version of Kubernetes that will run on\na single server host. The FortyTwoBinary network (my home network) is\nslowly becoming a laboratory for learning.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_preliminaries\">2. Preliminaries</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_goals\">2.1. Goals</h3>\n<div class=\"paragraph\">\n<p>The goal here is to install and maintain a single instance of a running\nHashicorp Vault in production mode on a Raspberry Pi 4 Model B.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_available_platforms\">2.2. Available Platforms</h3>\n<div class=\"paragraph\">\n<p>As stated in the Goal section above, the platform for installation and\nservice is the Raspberry Pi 4 Model B. We recently procured 3 Labist\nstarter kits with the new Raspberry Pi 4 Model B machines. These boards\nhave 8GB of fixed RAM and Raspbian (Debian 10 Buster) OS for arm64 (arm7l)\ncame on a 128GB Sansdisk microSD card. Exceptionally easy startup and our\n3 machines are now online, running, and accessible via static IPs.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_dependencies\">2.3. Dependencies</h3>\n<div class=\"paragraph\">\n<p>Dependencies can be software packages, configurations, or even tools that\nneed to be available during the process of installation. In this case,\neverything was available. An ssh connection to the Raspberry Pi allowed\nfor a smooth installation of the Vault binary for this platform. VIM was\ninstalled but VI was present at initial boot.</p>\n</div>\n<div class=\"paragraph\">\n<p>We want to note that the initial binary did not work correctly. We\nalso tried a Docker version prior to a strict server install. It seems\nthat a 64bit edition for the ARM processor is yet to be available. We will\nperiodically check for this and upgrade when available.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_installation_linux\">3. Installation Linux</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text here &#8230;&#8203;</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nDownload the Vault binary for Raspberry Pi 4 Model B here: <a href=\"https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip\">https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip</a>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_installation_debian_9_stretch\">3.1. Installation Debian 9 Stretch</h3>\n<div class=\"paragraph\">\n<p>Text here &#8230;&#8203;</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_installation_debian_10_buster\">3.2. Installation Debian 10 Buster</h3>\n<div class=\"paragraph\">\n<p>Text here &#8230;&#8203;</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nDownload the Vault binary for Raspberry Pi 4 Model B here: <a href=\"https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip\">https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip</a>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_installation_ubuntu_20_4_lts\">3.3. Installation Ubuntu 20.4 LTS</h3>\n<div class=\"paragraph\">\n<p>Text here &#8230;&#8203;</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nDownload the Vault binary for Raspberry Pi 4 Model B here: <a href=\"https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip\">https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip</a>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nDo NOT download the ARM64 edition for Linux. It will NOT run on the Raspberry Pi 4 Model B using Raspbian (Debian 10 Buster) as of February 27, 2021. This message is HIGHLY subject to CHANGE.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Unzip the download somewhere and we moved the file <code>vault</code> to <code>&lt;user-home&gt;/bin</code> Then we added the following to our <code>.bashrc</code> and sourced it instead of logging out and back in.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-json\" data-lang=\"json\">{\n  \"backend\": {\n    \"file\": {\n      \"path\": \"vault/data\"\n    }\n  },\n  \"listener\": {\n    \"tcp\":{\n      \"address\": \"0.0.0.0:8200\",\n      \"tls_disable\": 1\n    }\n  },\n  \"ui\": true\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Take note that the path <code>vault/data</code> will be relative to where the vault\nexecutable is run. We will issue the command from the user&#8217;s home directory\nand where this configuration file currently resides. Also the <code>0.0.0.0</code> in\nthe listener section is a placeholder that defines a non-routable IP address. It has been explained to mean \"all addresses\". Learn more here:\n<a href=\"https://en.wikipedia.org/wiki/0.0.0.0\">https://en.wikipedia.org/wiki/0.0.0.0</a>. The 8200 port is the Hashicorp Vault default.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nPlease note that HTTPS is not being used. This is NOT good practice however, final software configuration may occur within the FortyTwoBinary\nnetwork (internal) or in the event all configuration is moved onto the\npublic Internet.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_mac_os_x\">4. Mac OS-X</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The full administration and use of Docker is yet to be discovered. For now\nwe&#8217;ll provide some cheatsheet commands and a few use cases.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_install_docker_desktop\">4.1. Install Docker Desktop</h3>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203; you are welcome lol &#8230;&#8203;</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ docker ps</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_windows\">5. Windows</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_windows_10_installation\">5.1. Windows 10 Installation</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_docker_basics\">6. Docker Basics</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_docker_run_and_stop\">7. Docker Run and Stop</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_docker_compose\">8. Docker Compose</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_docker_build\">9. Docker Build</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_dockercompose_build\">9.1. Dockercompose Build</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_dockerfile_build\">9.2. Dockerfile Build</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_cheatsheet\">Appendix A: Cheatsheet</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_acronyms\">Appendix B: Acronyms</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Here</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_glossary\">Appendix C: Glossary</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Here</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_license\">Appendix D: License</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document is licensed by the Apache License version 2.0. Currently,\nthe content in this document is being kept from the public however, in\nthe event the material contained here is willingly shared with\nothers, the license will remain unchanged and will convey with the\ntransference of the material.</p>\n</div>\n<div class=\"paragraph\">\n<p>Apache License\nVersion 2.0, January 2004\n<a href=\"http://www.apache.org/licenses/\" class=\"bare\">http://www.apache.org/licenses/</a></p>\n</div>\n<div class=\"paragraph\">\n<p>A copy has also been provided with this software repository.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2021 David L Whitehurst.</p>\n</div>\n</div>\n</div>","document":{"title":"Docker"},"fields":{"slug":"/pages/docker/"}}},{"node":{"id":"8b1fc636-7f71-5bdf-9ba8-f3118e015695","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#_preliminaries\">2. Preliminaries</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_goal\">2.1. Goal</a></li>\n<li><a href=\"#_platform\">2.2. Platform</a></li>\n<li><a href=\"#_dependencies\">2.3. Dependencies</a></li>\n</ul>\n</li>\n<li><a href=\"#_installation\">3. Installation</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_operating_system\">3.1. Operating System</a></li>\n<li><a href=\"#_update_and_upgrade\">3.2. Update and Upgrade</a></li>\n<li><a href=\"#_provisioning\">3.3. Provisioning</a></li>\n<li><a href=\"#_testing_and_health\">3.4. Testing and Health</a></li>\n</ul>\n</li>\n<li><a href=\"#_retrospective_and_notes\">4. Retrospective and Notes</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_overall_process\">4.1. Overall Process</a></li>\n<li><a href=\"#_education\">4.2. Education</a></li>\n<li><a href=\"#_automation\">4.3. Automation</a></li>\n</ul>\n</li>\n<li><a href=\"#_acronyms\">Acronyms</a></li>\n<li><a href=\"#_glossary\">Glossary</a></li>\n<li><a href=\"#_license\">Appendix A: License</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://site.fortytwobinary.com/\">Site Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary service documentation for our Kubernetes Tower, \"Frankie\" or\nor short for Frankenstein. The tower consists of two Raspberry Pi 3 Model B machines and 3 Raspberry Pi 4 Model B machines atop\na G-Technology 500GB <a href=\"#X1002\">NAS</a>. This document is subject to great change and will be maintained in a software repository <a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nThis installation reference was drafted and is maintained as a DevOps reference to the work that occurs on the FortyTwoBinary network and infrastructure. The\npowerful command-line instructions found here, may or may not be accurate\nor timely. This warning is given to let the DevOp be aware that commands\nmay not be idempotent and before root-level (sudo) actions are taken, to\nthink twice before hitting the Enter key.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This document was written using asciidoc markup and the HTML you see is\ngenerated by a tool driven using Python called asciidoctor. This\ninstallation reference is a powerful document that can be of great value in the event of data loss, machine crashes, backups, maintenance, installations, and troubleshooting.</p>\n</div>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/frankie.jpg\" alt=\"Frankie\"></span></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document will describe the creation of Frankie, my new Raspberry Pi\nKubernetes tower.</p>\n</div>\n<div class=\"paragraph\">\n<p>The tower began with 2 Raspberry Pi 3 Model B machines I had for mining alt-coins or CPU-mined\ncryptocurrency. The 3 Raspberry Pi 4 Model B machines were recently purchased from Labist. They\ncame with heavy metal heatsinks and fans, but the tower kit I later purchased\ncame with tiny quiet fans for each Pi.</p>\n</div>\n<div class=\"paragraph\">\n<p>The G-Technology drive beneath the tower was an external backup disk for my\nApple macbook pro at the time prior to 2008. It&#8217;s 500GB and hosts an ext4\nfilesystem now for the 5 machines to share as an <a href=\"#X1003\">NFS</a> mount.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Disclaimer</div>\n<div class=\"paragraph\">\n<p>Kubernetes has emerged as powerful way to serve web content and move\ndata over the internet at grand scale. This is very expensive even for\nwell-paid consultants to learn on their own. Small computers and virtual\nmachines are inexpensive and convenient to own. My mission here is to\ndescribe the creation of my machine tower and Kubernetes cluster.</p>\n</div>\n<div class=\"paragraph\">\n<p>The instructions described here worked for me however, each step was\nnot without issue because my steps were taken from various online tutorials\nand personal blog postings. Also, I would recommend a written plan before\nany machine configuration. Be sure to perform any step on all machines if\nyou decide not to finish the project in one session. My software versions\nfor Kubernetes are locked, but they also differ by patch versions.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_preliminaries\">2. Preliminaries</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_goal\">2.1. Goal</h3>\n<div class=\"paragraph\">\n<p>The goal here is to install and maintain a Kubernetes (K8s) cluster on a\ntower consisting of a control-plane (master) and 4 worker nodes.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_platform\">2.2. Platform</h3>\n<div class=\"paragraph\">\n<p>As stated in the Goal section above, the platform for installation and\nhosting consists of 5 newer Raspberry Pi machines with Ubuntu 20.04 LTS aarm64\nimages (operating system).</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_dependencies\">2.3. Dependencies</h3>\n<div class=\"paragraph\">\n<p>Dependencies can be machines, wires, hardware, software packages, configurations\nor even tools that need to be available during the process of installation.\nIn this case, the hardware was our foundation. This process requires 5 Raspberry\nPi machines, power, and ethernet cabling to a local network. We also required 5 -\n16GB microSD cards for flashing the operating system.</p>\n</div>\n<div class=\"paragraph\">\n<p>Download Ubuntu 20.04 LTS for aarm64 architecture at the following link: <a href=\"https://ubuntu.com/download/raspberry-pi\">https://ubuntu.com/download/raspberry-pi</a>. Please note that you must select the 64bit choice here.</p>\n</div>\n<div class=\"paragraph\">\n<p>Also, download Balena Etcher for your workstation. <a href=\"https://www.balena.io/etcher/\">https://www.balena.io/etcher/</a>. This application will be used to\nflash or write the boot images (Ubuntu) to your 5 new microSD cards.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_installation\">3. Installation</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The creation of a Kubernetes cluster required the installation of a lighter, Linux server operating system. The new machines came with Raspbian desktop,\na Debian-based distribution for ARM64 processors. We could have stripped or\nuninstalled the desktop but I found an online setup for Kubernetes on Raspberry\nPi by a guy that works for RedHat here in Raleigh NC. He recommended Ubuntu\n20.04 LTS. First, let&#8217;s flash 5 microSD cards with the downloaded Ubuntu image.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_operating_system\">3.1. Operating System</h3>\n<div class=\"paragraph\">\n<p>Place a new or recently erased microSD card in your workstation (working machine).\nOpen BalenaEtcher (was Etcher) and click \"Flash from file\". Select the Ubuntu image in your folder containing the image downloaded earlier.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/etcher.png\" alt=\"etcher\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Click select target and choose the 16GB storage media, then click Flash. Go get a glass of tea. When the flash is complete, repeat the process for the remaining 4\nmicroSD cards. When they are complete, install each card in the machines.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_update_and_upgrade\">3.2. Update and Upgrade</h3>\n<div class=\"paragraph\">\n<p>Let&#8217;s start our machines, update the OS, name our hosts, and shutdown. I&#8217;m going\nto describe this process for one machine. You can do these simultaneously or using\nPutty with multiple sessions if you prefer.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_initial_logon\">3.2.1. Initial Logon</h4>\n<div class=\"paragraph\">\n<p>When you start the new OS, sshd is built in and either you already know the IP or\nyou&#8217;ll need to use your router to determine the local IP. For most people, the IP\nis probably assigned (dynamic host control protocol (DHCP)) by your router. Please\nnote that if you start all of the machines at the same time and you don&#8217;t already\nhave fixed or static (known) IPs, you will not be able to identify machines. Each\nOS is assigned a hostname \"ubuntu\" and unless you know the IPs ahead of time, you\nwill see a list of attached devices on your router, all called \"ubuntu\".</p>\n</div>\n<div class=\"paragraph\">\n<p>When the machine comes online, it&#8217;s hostname is \"ubuntu\" and a sudo user \"ubuntu\"\nhas already been created. Connect to the machine using ssh like so:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$  ssh ubuntu@192.168.1.17</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Enter \"ubuntu\" as the password. The system will immediately prompt for a new\npassword. When the new password is accepted, the ssh session is terminated by the\nsystem. I&#8217;m not sure why, but I assume it&#8217;s a security thing.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_package_updates\">3.2.2. Package Updates</h4>\n<div class=\"paragraph\">\n<p>Log back into the machine and we&#8217;ll now update and upgrade the OS.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo apt-get update &amp;&amp; sudo apt-get upgrade</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Go get another glass of tea. When the upgrade is complete, we&#8217;ll change the\nhostname and shutdown.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_hostnames\">3.2.3. Hostnames</h4>\n<div class=\"paragraph\">\n<p>The new tower consists of a Kubernetes master and 4 workers. We&#8217;ll name master,\n\"kube-master\" and each worker <code>kube-worker-n</code> e.g. <code>kube-worker-3</code>. Open an ssh\nwith the machine you will call <code>kube-master</code>.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo vi /etc/hostname</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>There should be one line with <code>ubuntu</code> so replace it with the new hostname. In\nthe past we had to change <code>/etc/hosts</code> too this distribution of Linux does not\nrequire editing <code>/etc/hosts</code>. Change each hostname (all machines) and then reboot.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo shutdown -r now</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>When each machine comes back, it&#8217;s hostname will have changed. Update your Putty\nsessions if you are using saved sessions.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Note</div>\n<div class=\"paragraph\">\n<p>My machines already had static IPs that were reserved when they first came online.\nThese MAC addresses are known to the router and this made identification of the\nmachines easy. Also, I could do this work with all machines running on the new OS.\nI don&#8217;t think static local IPs are required for your eth0 interfaces since the\nnodes all have unique hostnames however, I have 2  <a href=\"#X999\">DNS</a> servers on the network and\nthese machines are managed as \"trusted servers\" with forward and reverse lookup\nentries.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_provisioning\">3.3. Provisioning</h3>\n<div class=\"paragraph\">\n<p>Now we are ready to configure and provision the machines with Kubernetes. During\nthe process of installing Kubernetes, we&#8217;ll also bring each of the cluster nodes\ninto operation. Starting with 5 quiet machines, let&#8217;s start kube-master, or our\ncontrol-plane and set that one up first. The host kube-master will act as a\ncontrol-plane and delegate to the 4 worker nodes.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_all_nodes\">3.3.1. All Nodes</h4>\n<div class=\"paragraph\">\n<p>Before we can install Kubernetes, we need to make a few changes to our machines.\nWe will install the Docker (container platform), change the <a href=\"https://www.kernel.org/doc/Documentation/cgroup-v1/cgroups.txt\">cgroups</a> driver, and optimize our systems for kernel, memory, and swap features.</p>\n</div>\n<div class=\"paragraph\">\n<p>Let&#8217;s install Docker.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo apt install -y docker.io</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Once the installation is complete, run &#8230;&#8203;</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo docker info</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Notice that the cgroups driver is cgroups and the warnings at the end of the output.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">...\nWARNING: No memory limit support\nWARNING: No swap limit support\nWARNING: No kernel memory limit support\nWARNING: No kernel memory TCP limit support\nWARNING: No oom kill disable support</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This shows us that Docker has no memory, swap, or kernel support. We can fix this\nby changing the cgroups driver to <code>systemd</code>. Systemd is recommended by Kubernetes\nand to ensure better system stability. Let&#8217;s tell our system with specification\nthat cgroups management will now be <code>systemd</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Create or edit this file and contents:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo cat &gt; /etc/docker/daemon.json &lt;&lt;EOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Now, let&#8217;s influence the kernel, on boot, to use cgroups to limit memory and swap.\nWe will append these options to the end of <code>cmdline.txt</code>. Since we want to add\nspecific text to the end of the file, we&#8217;ll use <code>sed</code> to do this.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Append the cgroups and swap options to the kernel command line\n# Note the space before \"cgroup_enable=cpuset\" and to add a space after the last existing item on the line\n$ sudo sed -i '$ s/$/ cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1/' /boot/firmware/cmdline.txt</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Reboot the machine and run the <code>sudo docker info</code> again. You will see the cgroups\ndriver is now <code>systemd</code> and the limit warnings are gone.</p>\n</div>\n<div class=\"paragraph\">\n<p>Kubernetes also recommends that iptables and iptables6 be set to see bridged-network traffic.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Activate this configuration with &#8230;&#8203;</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">sudo sysctl --system</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Now we need to set up the Kubernetes apt repository and then install the Kubernetes packages. Let&#8217;s first add the Google key and then add the Kubernetes\nrepo to our local list of repositories.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Add the packages.cloud.google.com apt key\n$ curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\n\n# Add the Kubernetes repo to our list of repositories\n$ cat &lt;&lt;EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list\ndeb https://apt.kubernetes.io/ kubernetes-xenial main\nEOF</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Now, we can install the Kubernetes packages to each of our cluster nodes.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo apt update &amp;&amp; sudo apt install -y kubelet kubeadm kubectl</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>We now need to disable any updates from the Kubernetes repo so our installs remain\nconsistent. And, we should handle version updates manually after our cluster is\nin place.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo apt-mark hold kubelet kubeadm kubectl</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Kubernetes is installed!</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_kube_master\">3.3.2. kube-master</h4>\n<div class=\"paragraph\">\n<p>Now that&#8217;s Kubernetes has been installed on all machines, it&#8217;s time to set up and\nconfigure our kube-master host and begin the creation of our Kubernetes cluster.</p>\n</div>\n<div class=\"paragraph\">\n<p>The first thing we are going to do is create a token for the cluster nodes to use\nwhen joining the cluster. We&#8217;ll use kube-master to create a token and then use this token when we initialize the control-plane.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ TOKEN=$(sudo kubeadm token generate)</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Run the following to determine the Kubernetes version.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ kubeadm version\nkubeadm version: &amp;version.Info{Major:\"1\", Minor:\"20\", GitVersion:\"v1.20.4\", GitCommit:\"e87da0bd6e03ec3fea7933c4b5263d151aafd07c\", GitTreeState:\"clean\", BuildDate:\"2021-02-18T16:09:38Z\", GoVersion:\"go1.15.8\", Compiler:\"gc\", Platform:\"linux/arm64\"}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>My version was 1.20.4 so I add that in the initialization command. Now use this token to initialize the control-plane server (kube-master).</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo kubeadm init --token=${TOKEN} --kubernetes-version=v1.20.5 --pod-network-cidr=10.244.0.0/16</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The CIDR was chosen as an example from other blog postings. More research is needed to understand the CIDR choice. I have no conflicting 10.x.x.x networks on\nour home network.</p>\n</div>\n<div class=\"paragraph\">\n<p>The initialization should be successful and the following output should be seen\nand you should copy this off for safekeeping.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">Your Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nAlternatively, if you are the root user, you can run:\n\n  export KUBECONFIG=/etc/kubernetes/admin.conf\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nsudo kubeadm join 192.168.1.12:6443 --ignore-preflight-errors=all --token lm8kpx.fs5six37dossytv6 \\\n    --discovery-token-ca-cert-hash sha256:5d43f3aa2fedfb5e6e4a895a8c160d3a917b1b4776d9cde4001477a53fa88008</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Your control-plane is now running successfully.</p>\n</div>\n<div class=\"paragraph\">\n<p>Make a note of two things. 1) The Kubernetes kubectl connection information has been written to /etc/kubernetes/admin.conf. 2) This kubernetes configuration file can be copied to ~/.kube/config, either for root or a normal user on the master node or to a remote machine. This will allow you to control the cluster with the kubectl command.</p>\n</div>\n<div class=\"paragraph\">\n<p>Use the <code>kubectl</code> utility now to verify that the master node is running.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ kubectl get nodes</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You should see the master node is up and running.</p>\n</div>\n<div class=\"paragraph\">\n<p>Before we join our worker nodes, we need to install a Container Network Interface (CNI) add-on\ncalled Flannel. This add-on provides networking management for our fixed and chosen CIDR. The\nFlannel add-on is easily installed via command-line using a YAML manifest. Apply the following\nmanifest in a file called <code>kube-flannel.yaml</code> like so. The file below is for Kubernetes v1.17+ and our install was 1.20.4.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-yaml\" data-lang=\"yaml\">curl -sSL https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml | kubectl apply -f -</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Now our worker joins should go without issue. See <a href=\"#_retrospective_and_notes\">Retrospective and Notes</a> below.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_kube_worker_n\">3.3.3. kube-worker-n</h4>\n<div class=\"paragraph\">\n<p>Each worker should now only need to join the cluster. The software and configuration was done\nprior to some specifics only for kube-master. Let&#8217;s send a join command from a worker to master\nand ask to join.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo kubeadm join 192.168.1.12:6443 --token lm8kpx.fs5six37dossytv6 \\\n    --discovery-token-ca-cert-hash sha256:5d43f3aa2fedfb5e6e4a895a8c160d3a917b1b4776d9cde4001477a53fa88008</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Repeat for each worker and then verify that everything is good.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ kubectl get nodes -o wide</code></pre>\n</div>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Note</div>\n<div class=\"paragraph\">\n<p>This did not originally work for me. There was some confusion around the installation of\nFlannel and how it was obtained. I have modified the installation of Flannel above to suit\nwhat I think is correct however, I will do this again in a more automated fashion and I will\ndiscuss my issues with all this in the Retrospective section below.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_testing_and_health\">3.4. Testing and Health</h3>\n<div class=\"paragraph\">\n<p>In a future edit of this document, I&#8217;ll add a really simple deployment to show that our cluster\nis in fact running and viable. For now, I&#8217;ll leave a couple commands I&#8217;ve learned to show the\nhealth and information about our new cluster.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ kubectl cluster-info\nKubernetes control plane is running at https://192.168.1.12:6443\nKubeDNS is running at https://192.168.1.12:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The next command shows critical components. Notice that Flannel and proxy ones are replicated\nfor each node.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">ubuntu@kube-master:~$ ^C\nubuntu@kube-master:~$ kubectl get pod -n kube-system\nNAME                                  READY   STATUS    RESTARTS   AGE\ncoredns-74ff55c5b-9nn7l               1/1     Running   0          42h\ncoredns-74ff55c5b-fcnl2               1/1     Running   0          42h\netcd-kube-master                      1/1     Running   0          42h\nkube-apiserver-kube-master            1/1     Running   0          42h\nkube-controller-manager-kube-master   1/1     Running   5          42h\nkube-flannel-ds-hvlbh                 1/1     Running   4          38h\nkube-flannel-ds-ltgpv                 1/1     Running   0          38h\nkube-flannel-ds-xdzss                 1/1     Running   0          38h\nkube-flannel-ds-zqgbf                 1/1     Running   0          38h\nkube-flannel-ds-zvssl                 1/1     Running   4          38h\nkube-proxy-8fzx5                      1/1     Running   0          39h\nkube-proxy-czrpw                      1/1     Running   4          38h\nkube-proxy-qm7kf                      1/1     Running   4          38h\nkube-proxy-sz5xz                      1/1     Running   0          39h\nkube-proxy-zxnnc                      1/1     Running   0          42h\nkube-scheduler-kube-master            1/1     Running   4          42h\nubuntu@kube-master:~$</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>And, our get nodes again in short format.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">ubuntu@kube-master:~$ kubectl get nodes\nNAME            STATUS   ROLES                  AGE   VERSION\nkube-master     Ready    control-plane,master   42h   v1.20.4\nkube-worker-1   Ready    &lt;none&gt;                 39h   v1.20.5\nkube-worker-2   Ready    &lt;none&gt;                 39h   v1.20.4\nkube-worker-3   Ready    &lt;none&gt;                 39h   v1.20.5\nkube-worker-4   Ready    &lt;none&gt;                 38h   v1.20.5\nubuntu@kube-master:~$</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_retrospective_and_notes\">4. Retrospective and Notes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The full administration and use of Vault is yet to be discovered. For now\nwe&#8217;ll provide some cheatsheet commands and a few use cases.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_overall_process\">4.1. Overall Process</h3>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203; you are welcome lol &#8230;&#8203;</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault status</code></pre>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_preparation\">4.1.1. Preparation</h4>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203;</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_planning\">4.1.2. Planning</h4>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203;</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_education\">4.2. Education</h3>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203;</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_automation\">4.3. Automation</h3>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203;</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_acronyms\">Acronyms</h2>\n<div class=\"sectionbody\">\n<div class=\"hdlist\">\n<table>\n<tr>\n<td class=\"hdlist1\">\n<a id=\"X999\"></a>DNS\n</td>\n<td class=\"hdlist2\">\n<p>Domain Naming System</p>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\n<a id=\"X1000\"></a>IP\n</td>\n<td class=\"hdlist2\">\n<p>Internet Protocol</p>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\n<a id=\"X1003\"></a>NFS\n</td>\n<td class=\"hdlist2\">\n<p>Network File System</p>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\n<a id=\"X1002\"></a>NAS\n</td>\n<td class=\"hdlist2\">\n<p>Network Attached Storage</p>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\nNAT\n</td>\n<td class=\"hdlist2\">\n<p>Network Address Translation</p>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\n<a id=\"X1001\"></a>SBC\n</td>\n<td class=\"hdlist2\">\n<p>Small board computer</p>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\nWAP\n</td>\n<td class=\"hdlist2\">\n<p>Wireless Access Point</p>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_glossary\">Glossary</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist glossary\">\n<dl>\n<dt><a id=\"X8\"></a> Block element</dt>\n<dd>\n<p>An AsciiDoc block element is a document entity composed of one or\nmore whole lines of text.</p>\n</dd>\n<dt><a id=\"X34\"></a> Inline element</dt>\n<dd>\n<p>AsciiDoc inline elements occur within block element textual\ncontent, they perform formatting and substitution tasks.</p>\n</dd>\n<dt>Formal element</dt>\n<dd>\n<p>An AsciiDoc block element that has a BlockTitle. Formal elements\nare normally listed in front or back matter, for example lists of\ntables, examples and figures.</p>\n</dd>\n<dt>Verbatim element</dt>\n<dd>\n<p>The word verbatim indicates that white space and line breaks in\nthe source document are to be preserved in the output document.</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_license\">Appendix A: License</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document is licensed by the Apache License version 2.0. Currently,\nthe content in this document is being kept from the public however, in\nthe event the material contained here is willingly shared with\nothers, the license will remain unchanged and will convey with the\ntransference of the material.</p>\n</div>\n<div class=\"paragraph\">\n<p>Apache License\nVersion 2.0, January 2004\n<a href=\"http://www.apache.org/licenses/\" class=\"bare\">http://www.apache.org/licenses/</a></p>\n</div>\n<div class=\"paragraph\">\n<p>A copy has also been provided with this software repository.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2021 David L Whitehurst.</p>\n</div>\n</div>\n</div>","document":{"title":"Kubernetes Tower"},"fields":{"slug":"/pages/kube-tower/"}}},{"node":{"id":"f50e329d-e2f7-5bec-8f35-7763398fa7d1","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#X6\">2. Machines</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_physical_machines\">2.1. Physical Machines</a></li>\n<li><a href=\"#X11\">2.2. Virtual</a></li>\n</ul>\n</li>\n<li><a href=\"#_network_and_components\">3. Network and Components</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_internet_service_provider\">3.1. Internet Service Provider</a></li>\n<li><a href=\"#_router_and_wap\">3.2. Router and WAP</a></li>\n<li><a href=\"#_network_attached_storage_nas\">3.3. Network Attached Storage (NAS)</a></li>\n<li><a href=\"#_switches\">3.4. Switches</a></li>\n<li><a href=\"#_private_network\">3.5. Private Network</a></li>\n<li><a href=\"#_domain_name_system_dns\">3.6. Domain Name System (DNS)</a></li>\n<li><a href=\"#_security\">3.7. Security</a></li>\n</ul>\n</li>\n<li><a href=\"#_process_and_change_management\">4. Process and Change Management</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_configuration_management\">4.1. Configuration Management</a></li>\n<li><a href=\"#_secrets_management\">4.2. Secrets Management</a></li>\n<li><a href=\"#_backups\">4.3. Backups</a></li>\n</ul>\n</li>\n<li><a href=\"#_acronyms\">5. Acronyms</a></li>\n<li><a href=\"#_glossary\">Glossary</a></li>\n<li><a href=\"#_license\">Appendix A: License</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://site.fortytwobinary.com/\">Site Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\" height=\"32\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary Network and Infrastructure Playbook. This\ndocument is subject to great change and will be maintained in a software\nrepository <a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nThis playbook was drafted and is maintained as a DevOps reference to the\nwork that occurs on the FortyTwoBinary network and infrastructure. The\npowerful command-line instructions found here, may or may not be accurate\nor timely. This warning is given to let the DevOp be aware that commands\nmay not be idempotent and before root-level (sudo) actions are taken, to\nthink twice before hitting the Enter key.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This is a large document, but it&#8217;s probably good to keep all of the\nmaterial contained here in one place. A playbook is a powerful reference\nthat can be of great value in the event of data loss, machine crashes,\nbackups, maintenance, installations, and troubleshooting.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The network and infrastructure playbook is a compilation of the notes,\nconfigurations, how-tos, general, and technical documentation that will\nfollow the evolution of the FortyTwoBinary network. This treatise will\noutline and describe the network, the configurations, the machines,\nand the software the operates over it.</p>\n</div>\n<div class=\"paragraph\">\n<p>The FortyTwoBinary network is an internal network behind a home ISP or\nInternet Service Provider and protected from the public internet via\na secure and highly configured network router.</p>\n</div>\n<div class=\"paragraph\">\n<p>FortyTwoBinary is a made up organization name for our home network and\nused in the event that other people join me in my learning and education.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">My Mission</div>\n<div class=\"paragraph\">\n<p>Kubernetes has emerged as powerful way to serve web content and move\ndata over the internet at grand scale. This is very expensive even for\nwell-paid consultants to learn on their own. Small computers and virtual\nmachines are inexpensive and convenient to own. My mission is to learn\nmore about containers, hosting, and clustering all on my own time and\ndo this economically of course.</p>\n</div>\n<div class=\"paragraph\">\n<p>Turing Pi is now making a cluster board for multiple Raspberry Pi boards\nand the cluster capability for up to 28 cores or 7 Raspberry Pi computers.\nCanonical Ubuntu is also producing a software product called MicroK8s or\nwhat they call a no-more, no-less version of Kubernetes that will run on\na single server host. The FortyTwoBinary network (my home network) is\nslowly becoming a laboratory for learning.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X6\">2. Machines</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_physical_machines\">2.1. Physical Machines</h3>\n<div class=\"paragraph\">\n<p>All of my physical machines are described here in the table below. IOT\ndevices are not listed. Only devices capable of providing computing cycles\nand that allow access are noted.</p>\n</div>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<caption class=\"title\">Table 1. Physical computing machines list</caption>\n<colgroup>\n<col style=\"width: 16.6666%;\">\n<col style=\"width: 83.3334%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Name</th>\n<th class=\"tableblock halign-left valign-top\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>Macbook Pro</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">My third macbook pro is a 2016, 15-Inch 2.7 GHz Quad-Core Intel Core\ni7 with 16GB of 2133MHz LPDDR3 RAM and a 500GB SSD. Serial Number\nCO2T336TH03Q, OS current version 11.2.1 macOS Big Sur</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>Intel NUC</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">This machine has replaced my macbook pro as my day-to-day workstation. Its hostname is <code>quiet-nuc</code>.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>T1-1 kube-worker-3</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Labist Raspberry Pi 4 Kit model B (192.168.1.19) 8GB RAM Ubuntu 20.04 LTS\non a 32GB microSD card.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>T1-2 kube-master (control-plane)</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Labist Raspberry Pi 4 Kit model B (192.168.1.12) 8GB RAM Ubuntu 20.04 LTS\non a 32GB microSD card.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>T1-3 kube-worker-4</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Labist Raspberry Pi 4 Kit model B (192.168.1.14) 8GBRAM Ubuntu 20.04 LTS\non a 32GB microSD card.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>T1-4 kube-worker-2</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Raspberry Pi 3 Model B (192.168.1.17) 1GB RAM Ubuntu 20.04 LTS\non a 32GB microSD card.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>T1-5 kube-worker-1</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Raspberry Pi 3 Model B (192.168.1.18) 1GB RAM Ubuntu 20.04 LTS\non a 32GB microSD card.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>T2-1 ns1</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Octa-core S912 arm64 (192.168.1.20) XGB RAM Armbian\non a XGB microSD card.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>T2-2 ns2</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Octa-core S912 arm64 (192.168.1.22) XGB RAM Armbian\non a XGB microSD card.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>T2-3 control-1</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Octa-core S912 arm64 (192.168.1.21) XGB RAM Armbian\non a XGB microSD card.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>vault</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Octa-core S912 arm64 (192.168.1.??) XGB RAM Armbian\non a XGB microSD card. This machine hosts Hashicorp Vault</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X11\">2.2. Virtual</h3>\n<div class=\"paragraph\">\n<p>This section describes the virtual machines that participate in the FortyTwoBinary lab\nexperiments. These virtual machines perform some service or function in\nthe overall scheme of getting work done.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>None at this time</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_network_and_components\">3. Network and Components</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>There are various components public and private at play on the network that\nsupport and manage data on the fortytwobinary.lab domain proper. These pieces will\nbe described within this section.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_internet_service_provider\">3.1. Internet Service Provider</h3>\n<div class=\"paragraph\">\n<p>Spectrum is our internet service provider (ISP). They provide entry to\nthe world-wide web (WWW) at a public IP address. This\nIP is NOT static. It does however, remain the same for long periods of\ntime but it is not guaranteed to be fixed.</p>\n</div>\n<div class=\"paragraph\">\n<p>Our service enters our house via coaxial cable from the street and\nenters a cable modem before sending ethernet into a Netgear router\nwith network address translation (NAT) from public IP to\n192.168.1.1, All port-forwarding is handled via configuration within\nthe wireless access point (WAP) and router combination.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_router_and_wap\">3.2. Router and WAP</h3>\n<div class=\"paragraph\">\n<p>Our router and wireless access point is a Netgear &#8230;&#8203; later</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_network_attached_storage_nas\">3.3. Network Attached Storage (NAS)</h3>\n<div class=\"paragraph\">\n<p>A G-Technology 500GB external drive is attached to the Kubernetes tower on kube-master for\nshared storage via network file storage or NFS.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_switches\">3.4. Switches</h3>\n<div class=\"paragraph\">\n<p>We currently maintain 2 Netgear unmanaged switches for ethernet propagation, one 5-port GS105\nand an 8-port GS-308.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_private_network\">3.5. Private Network</h3>\n<div class=\"paragraph\">\n<p>The FortyTwoBinary.lab network is private. This local area network (LAN) begins with a 192.168.1 subnet with 192.168.1.1 being the gateway (through our router) to the public internet (WAN). We (FortyTwoBinary) own the domain fortytwobinary.com and are currently hosting static web sites at <a href=\"https://site.fortytwobinary.com\" class=\"bare\">https://site.fortytwobinary.com</a> and <a href=\"https://apache.fortytwobinary.com\" class=\"bare\">https://apache.fortytwobinary.com</a> . A wiki is also hosted at <a href=\"https://wikijs.fortytwobinary.com\" class=\"bare\">https://wikijs.fortytwobinary.com</a> .</p>\n</div>\n<div class=\"paragraph\">\n<p>A single DNS (Bind9) server hosts forwarding and reverse lookups for the trusted servers configured for use with the fortytwobinary.lab private network.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_domain_name_system_dns\">3.6. Domain Name System (DNS)</h3>\n<div class=\"paragraph\">\n<p>The domain name system or DNS is managed using 2 Android TV computers (8-Core) that are part\nof another SBC tower. Aptly named, ns1 and ns2.fortytwobinary.lab, these servers host and\nmaintain (redundant) a Bind9 DNS service to the network.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_security\">3.7. Security</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_process_and_change_management\">4. Process and Change Management</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_configuration_management\">4.1. Configuration Management</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_secrets_management\">4.2. Secrets Management</h3>\n<div class=\"paragraph\">\n<p>Secrets management for the FortyTwoBinary lab will be handled using Hashicorp Vault. This service is currently running on an unidentified (here) server. Backups are being performed (see below) daily with a Jenkins job. Failure in the system would require the restoration of the vault server (binary) and population on the filesystem with a daily backup tar.</p>\n</div>\n<div class=\"paragraph\">\n<p>Reliability is good because the Vault server is running on a single network server as the only hosted service. The server is dedicated. The unseal keys and root token do not reside on the machine.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_backups\">4.3. Backups</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_acronyms\">5. Acronyms</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">NAT</dt>\n<dd>\n<p>Network Address Translation</p>\n</dd>\n<dt class=\"hdlist1\">SBC</dt>\n<dd>\n<p>Small board computer</p>\n</dd>\n<dt class=\"hdlist1\">WAP</dt>\n<dd>\n<p>Wireless Access Point</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_glossary\">Glossary</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist glossary\">\n<dl>\n<dt><a id=\"X8\"></a> Block element</dt>\n<dd>\n<p>An AsciiDoc block element is a document entity composed of one or\nmore whole lines of text.</p>\n</dd>\n<dt><a id=\"X34\"></a> Inline element</dt>\n<dd>\n<p>AsciiDoc inline elements occur within block element textual\ncontent, they perform formatting and substitution tasks.</p>\n</dd>\n<dt>Formal element</dt>\n<dd>\n<p>An AsciiDoc block element that has a BlockTitle. Formal elements\nare normally listed in front or back matter, for example lists of\ntables, examples and figures.</p>\n</dd>\n<dt>Verbatim element</dt>\n<dd>\n<p>The word verbatim indicates that white space and line breaks in\nthe source document are to be preserved in the output document.</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_license\">Appendix A: License</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document is licensed by the Apache License version 2.0. Currently,\nthe content in this document is being kept from the public however, in\nthe event the material contained here is willingly shared with\nothers, the license will remain unchanged and will convey with the\ntransference of the material.</p>\n</div>\n<div class=\"paragraph\">\n<p>Apache License\nVersion 2.0, January 2004\n<a href=\"http://www.apache.org/licenses/\" class=\"bare\">http://www.apache.org/licenses/</a></p>\n</div>\n<div class=\"paragraph\">\n<p>A copy has also been provided with this software repository.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2021 David L Whitehurst.</p>\n</div>\n</div>\n</div>","document":{"title":"Network and Infrastructure Playbook"},"fields":{"slug":"/pages/playbook/"}}},{"node":{"id":"f811429b-39e6-5c4c-bc01-5536100cd36a","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#_may_2021\">2. May 2021</a></li>\n<li><a href=\"#_apr_2021\">Apr 2021</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_apr_20_2021\">.1. Apr 20, 2021</a></li>\n<li><a href=\"#_apr_21_2021\">.2. Apr 21, 2021</a></li>\n<li><a href=\"#_apr_22_2021\">.3. Apr 22, 2021</a></li>\n<li><a href=\"#_apr_23_2021\">.4. Apr 23, 2021</a></li>\n<li><a href=\"#_apr_24_2021\">.5. Apr 24, 2021</a></li>\n<li><a href=\"#_mar_2021\">6. Mar 2021</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_mar_13_2021\">6.1. Mar 13, 2021</a></li>\n<li><a href=\"#_mar_14_2021\">6.2. Mar 14, 2021</a></li>\n<li><a href=\"#_mar_18_2021\">6.3. Mar 18, 2021</a></li>\n<li><a href=\"#_mar_19_2021\">6.4. Mar 19, 2021</a></li>\n</ul>\n</li>\n<li><a href=\"#_license\">Appendix A: License</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>{https://site.fortytwobinary.com/[Site Homepage]</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\" height=\"32\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary service journal of infrastructure changes\non multiple platforms across our home network. This document is subject\nto great change and will be maintained in a software repository\n<a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This document was written using asciidoc markup and the HTML you see is\ngenerated by a tool driven using Python called asciidoctor. This\nInfrastructure Change Journal is a powerful document that can be of great value in the\nevent of data loss, machine crashes, backups, maintenance, installations,\nand troubleshooting.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document contains my writings on the build-out of a network fortytwobinary.lab\nand the infrastructure to support a Kubernetes environment using 3 Raspberry\nPi small board computers (SBC) to start.</p>\n</div>\n<div class=\"paragraph\">\n<p>The network will host a Gitlab instance as a central repository for source, configuration,\ndocumentation, and reference.</p>\n</div>\n<div class=\"paragraph\">\n<p>The fortytwobinary.lab network is strictly for experimentation and education.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_may_2021\">2. May 2021</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This is a test again</p>\n</div>\n</div>\n</div>\n<h1 id=\"_apr_2021\" class=\"sect0\">Apr 2021</h1>\n<div class=\"paragraph\">\n<p>I&#8217;ve decided to add entries for each month over the previous month however, specific entries for\nthe month will be in reverse (newest first) order.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_apr_20_2021\">.1. Apr 20, 2021</h3>\n<div class=\"paragraph\">\n<p>I&#8217;ve recently moved the Wiki.js database under K8s management. And, I&#8217;ve also hosted an instance of\nWordpress and it&#8217;s database on K8s too. I wrote backups for the <code>tools</code> repo but while the shell scripts\nrun from kube-master manually, they only simulate success in Jenkins jobs. The backup jobs in Jenkins use SSH\nkube-master (192.168.1.12) but the complex context switching is logging errors as if the script does run\nas ubuntu on the right machine but files needed in the script are not available on that host. The backup\nprocess begins with a simple <code>mysqldump</code> however the entire process is quite complex due to the single\ndatabase pod. In a true production situation, the database would be hosted differently and I would have an\nentirely new set of problems.</p>\n</div>\n<div class=\"paragraph\">\n<p>Please note that both Wordpress and Wiki.js backups are failing even though Jenkins is reporting success and\nalso sending this success to Slack.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_apr_21_2021\">.2. Apr 21, 2021</h3>\n<div class=\"paragraph\">\n<p>I realized tonight that only one of the backups on Jenkins was actually broken. The wordpress shell script needed the entire path to the two files that were being copied to the Kubernetes pod. Both wordpress and wikijs backups did need the tty option removed from the <code>kubectl exec</code> commands. These things were fixed and the scripts pushed to Github. Also, the backups were set to run at 8:35 and 8:40PM (0:35 and 0:40 UTC).</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_apr_22_2021\">.3. Apr 22, 2021</h3>\n<div class=\"paragraph\">\n<p>I built an arm64 docker image of Nexus3 and was successful deploying it to my Kubernetes. I was able to visit <a href=\"https://nexus.fortytwobinary.com\" class=\"bare\">https://nexus.fortytwobinary.com</a> and login as admin. I was not however, able to docker login to the docker registry private on port 5000 using internal IP or external DNS. I plan to revise the service and ingress. I&#8217;ll try the docker login again sometime tonight.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_apr_23_2021\">.4. Apr 23, 2021</h3>\n<div class=\"paragraph\">\n<p>Last night I fixed Nexus3 to serve two endpoints, <a href=\"https://nexus.fortytwobinary.com\" class=\"bare\">https://nexus.fortytwobinary.com</a> and <a href=\"https://docker.fortytwobinary.com\" class=\"bare\">https://docker.fortytwobinary.com</a>. The nexus endpoint provides access using basic authentication into a web portal of Nexus3 overall. The docker endpoint provides access into a Docker registry, ssl-terminated, but ultimately HTTP into a docker service on a container&#8217;s port 5000 (docker-only). I was able to create a Docker registry in Nexus and also login to the new Docker registry via command-line. I pushed two images, one for Jenkins (arm64) and one for Nexus3 (arm64). This was a huge success.</p>\n</div>\n<div class=\"paragraph\">\n<p>The issues that remain for me are:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>/mnt/ext/nexus3 remains file permissions 777</p>\n</li>\n<li>\n<p>Could not host service using YAML. This was accomplished with <code>kubectl expose</code>.</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_apr_24_2021\">.5. Apr 24, 2021</h3>\n<div class=\"paragraph\">\n<p>Last night I worked on shell scripts and command-line tools. I cleaned\nup my repositories. This morning I just renamed the site Jenkins build to\nlabddocs-deploy and added an Embedded Build plugin so that any Jenkins\ngit build status can be added to READMEs.</p>\n</div>\n<div class=\"paragraph\">\n<p>Today, I am installing Prometheus on my cluster\nand lens on my macbook pro. Lens is available here <a href=\"https://k8slens.dev/\" class=\"bare\">https://k8slens.dev/</a> and I&#8217;ll discuss the Prometheus install a little later.</p>\n</div>\n<div class=\"paragraph\">\n<p>The prometheus install was done from manifests from someone&#8217;s Git repo.\nI cloned the repo and then created a new folder under my k8s-configs repo\nand copied their files. I did absolutely no tweaking of the manifests. I\napplied the deployment and the service verbatim. I did however, notice\nthat my persistent volumes did not show up just after deployment. But\nlater I saw that they were there.</p>\n</div>\n<div class=\"paragraph\">\n<p>The Lens tool is very nice because it organizes all the K8s objects into\none UI and the pods have pop-up menu selections for shells and logs.</p>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_mar_2021\">6. Mar 2021</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>I&#8217;ll start my journal here with a picture of the devices currently on the\nFortyTwoBinary home (internal) network. Here&#8217;s a snip from the router admin\nshowing the wired and wireless devices currently enabled. I&#8217;ll dive into more\ndetail below.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/mar-13-2021-attached.PNG\" alt=\"Network attached\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>The two wired machines prefixed with <code>kube-</code> are the two machines at the bottom\nof my Raspberry Pi tower. These two machines are Pi 3 Model Bs. They are currently\nrunning Raspbian-lite (buster 10) on 16GB micro SD cards. The machines above them\nare newer Pi 4 Model B devices.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/tower.jpg\" alt=\"Tower\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Yes, it&#8217;s a mess but, it&#8217;s a start. Currently, the middle, 192.168.1.7\nor third from the bottom is the first 4B I&#8217;ve purchased. It&#8217;s currently hosting\nGitlab on port 80 and these pages on 8081. This journal page is hosted by an\nApache2 docker image on that middle machine. The machine is currently named\nangry-apache and is connected to the network via wireless adapter.</p>\n</div>\n<div class=\"paragraph\">\n<p>The very top machine, 192.168.1.16 hosts a Bind9 service for the fortytwobinary.int or\nFortyTwoBinary internal (home) network. It is also a Raspberry Pi 4B and connected\nto the network via wireless. His name is uptight-genius because he&#8217;s the anal\nname guy.</p>\n</div>\n<div class=\"paragraph\">\n<p>The second from the top machine 192.168.1.15 or oily-weasel is currently just\nrunning. As part of this Kubernetes on Pi initiative, he&#8217;s just a new Pi 4B\nvolunteer that&#8217;s offered his assistance as a kube-worker.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_mar_13_2021\">6.1. Mar 13, 2021</h3>\n<div class=\"paragraph\">\n<p>Last night I put the tower together, but the newer computers were already hosting\nBind9, Apache, Vault, and Gitlab. I flashed two new micro SD cards with Raspbian\nLite for the two older machines on the bottom of my new tower. These older machines\nwere named today (see playbook) but hostnames and DNS have not been set up due to\nKubernetes changes coming.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_mar_14_2021\">6.2. Mar 14, 2021</h3>\n<div class=\"paragraph\">\n<p>Here are the decisions I&#8217;ve made today. I have two groups of SBCs, 5 raspberry pi\ncomputers (tower) and 3 KM8Ps (octa-core arm64). I currently host Gitlab and Apache\non one of the Pi machines. And another Pi Model 4B is idle. These two will NOT host\nKubernetes. The third Pi Model 4B will be the Kubernetes master and the two Pi Model\n3B machines will be Kubernetes workers.</p>\n</div>\n<div class=\"paragraph\">\n<p>DNS, currently on one of the Pi machines will be moved to one of the KM8P devices\nand a secondary nameserver will be created on another KM8P. I suspect the third KM8P\nwill handle all cron activity and maybe even host NFS storage (for backups). The\nKubernetes initiative will support a shared NFS as well but I think that a 128GB\nmicro SD would be a prime choice for an NFS mount to store backups.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_mar_18_2021\">6.3. Mar 18, 2021</h3>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/images/kube-tower.jpg\" alt=\"Kube-Tower\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Last night, I flashed three new micro SD cards with Ubuntu 20.04 LTS for aarm64,\nupdated, upgraded, installed docker, configured kernel parameters for cgroups,\nconfigured iptables for bridged networking, and then installed Kubernetes on all 3.\nThat was quite an accomplishment. I also initialize kube-master and show a Ready status.</p>\n</div>\n<div class=\"paragraph\">\n<p>I ran across some things that require some further education. These are listed below:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>before initialization I should have found the kubeadm version before making the initialization\ncommand. (TODO)</p>\n</li>\n<li>\n<p>I picked or just copied a CIDR choice and I have no clue how this is used or why it was chosen. (TODO)</p>\n</li>\n<li>\n<p>After initialization, it seemed as though kube-master was running as a control-plane node however, <code>kubectl get nodes</code> showed status as Not Ready. I fixed this by creating a kube-flannel.yaml manifest but I never thought that just copying off the Github site would have worked. It did! And, now `kubectl get nodes' shows status Ready.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_mar_19_2021\">6.4. Mar 19, 2021</h3>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/images/frankie.jpg\" alt=\"Frankie\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Last night, I added a NAS or Network Attached Storage to the tower which I&#8217;ve aptly named Frankie, short for Frankenstein. I also created flashed two more 16GB micro-SD cards with Ubuntu 20.04 and re-imaged tower-1 and tower-2. Tower-1 was the apache web server and my Gitlab instance. I moved the repos to public Github. I don&#8217;t really have anything to hide and I like having my code on Github and well-protected.</p>\n</div>\n<div class=\"paragraph\">\n<p>The NFS went well for kube-master and workers 1 and 2. Hosting and client operations all were successful however, new workers 3 and 4 won&#8217;t auto-mount. Something is NOT calling the <code>/etc/fstab</code> file so the mount is not created at /mnt/ext.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_license\">Appendix A: License</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document is licensed by the Apache License version 2.0. Currently,\nthe content in this document is being kept from the public however, in\nthe event the material contained here is willingly shared with\nothers, the license will remain unchanged and will convey with the\ntransference of the material.</p>\n</div>\n<div class=\"paragraph\">\n<p>Apache License\nVersion 2.0, January 2004\n<a href=\"http://www.apache.org/licenses/\" class=\"bare\">http://www.apache.org/licenses/</a></p>\n</div>\n<div class=\"paragraph\">\n<p>A copy has also been provided with this software repository.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2021 David L Whitehurst.</p>\n</div>\n</div>\n</div>","document":{"title":"Infrastructure Journal"},"fields":{"slug":"/pages/journal/"}}},{"node":{"id":"87e1a0b5-632e-51ef-8086-6c6795addcce","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph lead\">\n<p>This is a demonstration of Asciidoctor. And this is the preamble of this document.</p>\n</div>\n<div id=\"purpose\" class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Purpose</div>\n<div class=\"paragraph\">\n<p>This document exercises many of the features of AsciiDoc to test the Asciidoctor implementation.</p>\n</div>\n</div>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nIf you want the output to look familiar, copy (or link) the AsciiDoc stylesheet, asciidoc.css, to the output directory.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nItems marked with TODO are either not yet supported or a work in progress.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"first\">First Steps with <a href=\"http://asciidoc.org\">AsciiDoc</a></h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<div class=\"title\">Inline markup</div>\n<ul>\n<li>\n<p>single quotes around a phrase place 'emphasis'</p>\n</li>\n<li>\n<p>asterisk around a phrase make the text <strong>bold</strong></p>\n</li>\n<li>\n<p>double asterisk around one or more <strong>l</strong>etters in a word make those letters bold</p>\n</li>\n<li>\n<p>double underscore around a <em>sub</em>string in a word emphasize that substring</p>\n</li>\n<li>\n<p>use carrots around characters to make them <sup>super</sup>script</p>\n</li>\n<li>\n<p>use tildes around characters to make them <sub>sub</sub>script</p>\n</li>\n<li>\n<p>to pass through <u>HTML</u> directly, surround the text with triple plus</p>\n</li>\n</ul>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>characters can be escaped using a \\</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>for instance, you can escape a quote inside emphasized text like 'Here's Johnny!'</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>you can safely use reserved XML characters like &lt;, &gt; and &amp;, which are escaped when rendering</p>\n</li>\n<li>\n<p>force a space between inline elements using the {sp} attribute</p>\n</li>\n<li>\n<p>hold text together with an intrinsic non-breaking&#160;space attribute, {nbsp}</p>\n</li>\n<li>\n<p>handle words with unicode characters like in the name Gregory Romé</p>\n</li>\n<li>\n<p>claim your copyright &#169;, registered trademark &#174; or trademark &#8482;</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>You can write text <a href=\"http://example.com\">with inline links</a>, optionally using an explicit <a href=\"http://example.com\">link prefix</a>. In either case, the link can have a <a href=\"http://example.com?foo=bar&amp;lang=en\">query string</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you want to break a line<br>\njust end it in a &#43; sign<br>\nand continue typing on the next line.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"lists_upon_lists\">Lists Upon Lists</h3>\n<div class=\"ulist\">\n<div class=\"title\">Adjacent lists</div>\n<ul>\n<li>\n<p>this list</p>\n</li>\n<li>\n<p>should join</p>\n</li>\n<li>\n<p>to have</p>\n</li>\n<li>\n<p>four items</p>\n</li>\n</ul>\n</div>\n<div id=\"numbered\" class=\"olist arabic\">\n<div class=\"title\">Numbered lists</div>\n<ol class=\"arabic\">\n<li>\n<p>These items</p>\n</li>\n<li>\n<p>will be auto-numbered</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>and can be nested</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>A numbered list can nest</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>unordered</p>\n</li>\n<li>\n<p>list</p>\n</li>\n<li>\n<p>items</p>\n</li>\n</ul>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<div class=\"title\">Statement</div>\n<p>I swear I left it in 'Guy's' car. Let's go look for it.</p>\n</div>\n<div id=\"defs\" class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">term</dt>\n<dd>\n<p>  definition\nline two</p>\n</dd>\n<dt class=\"hdlist1\"><a id=\"another_term\"></a>another term</dt>\n<dd>\n<p>another definition, which can be literal (indented) or regular paragraph</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>This should be a standalone paragraph, not grabbed by the definition list.</p>\n</div>\n<div id=\"nested\" class=\"ulist\">\n<ul>\n<li>\n<p>first level\nwritten on two lines</p>\n</li>\n<li>\n<p>first level</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>with this literal text</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>second level</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>third level</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>fourth level</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>back to<br>\nfirst level</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Let&#8217;s make a horizontal rule&#8230;&#8203;</p>\n</div>\n<hr>\n<div class=\"paragraph\">\n<p>then take a break.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"were_back\">We&#8217;re back!</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Want to see a <span class=\"image\"><img src=\"/images/tiger.png\" alt=\"Tiger\"></span>?</p>\n</div>\n<div class=\"paragraph\">\n<p>Do you feel safer with the tiger in a box?</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/tiger.png\" alt=\"tiger\">\n</div>\n<div class=\"title\">Figure 1. Tiger in a box</div>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"include.asciidoc.txt\" class=\"bare\">include.asciidoc.txt</a></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Asciidoctor usage example, should contain 3 lines</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">doc = Asciidoctor::Document.new(\"*This* is it!\", :header_footer =&gt; false)\n\nputs doc.render</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Here&#8217;s what it outputs (using the built-in templates):</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>&lt;div class=\"paragraph\"&gt;\n  &lt;p&gt;&lt;strong&gt;This&lt;/strong&gt; is it!&lt;/p&gt;\n&lt;/div&gt;</pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"quotes\">``Quotes''</h3>\n<div class=\"quoteblock\">\n<blockquote>\n<div class=\"paragraph\">\n<p>AsciiDoc is 'so' <strong>powerful</strong>!</p>\n</div>\n</blockquote>\n</div>\n<div class=\"paragraph\">\n<p>This verse comes to mind.</p>\n</div>\n<div class=\"verseblock\">\n<pre class=\"content\">La la la</pre>\n</div>\n<div class=\"paragraph\">\n<p>Here&#8217;s another quote:</p>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\n<div class=\"paragraph\">\n<p>When you have eliminated all which is impossible, then whatever remains, however improbable, must be the truth.</p>\n</div>\n</blockquote>\n<div class=\"attribution\">\n&#8212; Sir Arthur Conan Doyle<br>\n<cite>The Adventures of Sherlock Holmes</cite>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"literally\">Getting Literal</h2>\n<div class=\"sectionbody\">\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Want to get literal? Just prefix a line with a space (just one will do).</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>I'll join that party, too.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>We forgot to mention in <a href=\"#numbered\">Numbered lists</a> that you can change the numbering style.</p>\n</div>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>first item (yeah!)</p>\n</li>\n<li>\n<p>second item, looking <code>so mono</code></p>\n</li>\n<li>\n<p>third item, mono it is!</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"wrapup\">Wrap-up</h2>\n<div class=\"sectionbody\">\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nAsciiDoc is quite cool, you should try it!\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\n<div class=\"title\">Info</div>\n<div class=\"paragraph\">\n<p>Go to this URL to learn more about it:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"http://asciidoc.org\" class=\"bare\">http://asciidoc.org</a></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Or you could return to the <a href=\"#first\">First Steps</a> or <a href=\"#purpose\">Purpose</a>.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Here&#8217;s a reference to the definition of <a href=\"#another_term\">another term</a>, in case you forgot it.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nOne more thing. Happy documenting!\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p><a id=\"google\"></a>When all else fails, head over to <a href=\"http://google.com\" class=\"bare\">http://google.com</a>.</p>\n</div>\n</div>\n</div>","document":{"title":"Asciidoctor Demo"},"fields":{"slug":"/pages/test/"}}},{"node":{"id":"8755e7d9-b410-5ed0-88fa-74c61aa443bc","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>An introduction to <a href=\"http://asciidoc.org\">AsciiDoc</a>.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_first_section\">First Section</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>item 1</p>\n</li>\n<li>\n<p>item 2</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">puts \"Hello, World!\"</code></pre>\n</div>\n</div>\n</div>\n</div>","document":{"title":"Hello, AsciiDoc!"},"fields":{"slug":"/pages/hello-world/"}}},{"node":{"id":"bb377916-5c51-54c6-b963-6cb44bbdf8f7","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#_preliminaries\">2. Preliminaries</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_goal\">2.1. Goal</a></li>\n<li><a href=\"#_platforms\">2.2. Platforms</a></li>\n<li><a href=\"#_dependencies\">2.3. Dependencies</a></li>\n</ul>\n</li>\n<li><a href=\"#_nfs_server_installation\">3. NFS Server Installation</a></li>\n<li><a href=\"#_nfs_client_installation\">4. NFS Client Installation</a></li>\n<li><a href=\"#_bibliography\">5. Bibliography</a></li>\n<li><a href=\"#_license\">Appendix A: License</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/files.jpg\" alt=\"Files\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://site.fortytwobinary.com/\">Site Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\" height=\"32\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary service documentation for the Network File System (NFS) on multiple platforms. This document is subject to great change and will\nbe maintained in a software repository <a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nThis installation reference was drafted and is maintained as a DevOps reference to the work that occurs on the FortyTwoBinary network and infrastructure. The\npowerful command-line instructions found here, may or may not be accurate\nor timely. This warning is given to let the DevOp be aware that commands\nmay not be idempotent and before root-level (sudo) actions are taken, to\nplease think twice before hitting the Enter key.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This document was written using asciidoc markup and the HTML you see is\ngenerated by a tool driven using Python called asciidoctor. This\ninstallation reference is a powerful document that can be of great value in the event of data loss, machine crashes, backups, maintenance, installations, and troubleshooting.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Network File System (NFS) is a distributed file system protocol originally developed by Sun Microsystems (Sun) in 1984 <a href=\"#sandberg-goldberg-kleiman-walsh-lyon\">[sandberg-goldberg-kleiman-walsh-lyon]</a> NFS allows the actual file system to reside on a single machine and then share the file system path across multiple machines.</p>\n</div>\n<div class=\"paragraph\">\n<p>The master node of the Pi tower \"Frankie\" hosts a 500 GB USB external G-Technology drive at <code>/mnt/ext</code>. This\nfilesystem is then exported to the other nodes as NFS clients.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">My Goal for NFS</div>\n<div class=\"paragraph\">\n<p>Since each of the Kubernetes nodes form a cluster of similar computers,\neach node needs a similar filesystem storage path (shared). The NFS mount\nwill be used for Persistent Volumes and Claims for K8s hostings. Any\nmachine will be able to send data to the Persistent Volume and subsequently\nthe filesystem path (shared) regardless of the worker sending the data.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_preliminaries\">2. Preliminaries</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_goal\">2.1. Goal</h3>\n<div class=\"paragraph\">\n<p>The goal here is to install and maintain an NFS mount (server) on our Kubernetes\ncluster master node and share that mount (clients) on all worker nodes.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_platforms\">2.2. Platforms</h3>\n<div class=\"paragraph\">\n<p>NFS server and client software will be installed on arm64 Ubuntu 20.04 LTS.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_dependencies\">2.3. Dependencies</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Server with arm64 Ubuntu 20.04 LTS and physical volume</p>\n</li>\n<li>\n<p>Client hosts with arm64 Ubuntu 20.04</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_nfs_server_installation\">3. NFS Server Installation</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The server installation is done with the apt utility as sudo. On the master node and the node with the physical mount, install the NFS server package(s).</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo apt-get update\n$ sudo apt-get install -y nfs-kernel-server</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>NFS uses a file in <code>/etc</code> called <code>exports</code> to let everyone know about the new physical mount. Add this to the file <code>/etc/exports</code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">/mnt/ext *(rw,no_root_squash,insecure,async,no_subtree_check,anonuid=1000,anongid=1000)</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Now, let all of our system NFS clients know about the new mount.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo exportfs -ra</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>We&#8217;re done here. Now let&#8217;s move on to the NFS clients.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_nfs_client_installation\">4. NFS Client Installation</h2>\n<div class=\"sectionbody\">\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nRemember that the client installation here needs to be done on all nodes. I&#8217;m only describing the process once.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>The client installation is also done with the apt utility as sudo. Let&#8217;s install the client package(s).</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo apt-get update\n$ sudo apt-get install -y nfs-common</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Now, create a file system mount with the same path as kube-master (master node).</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ sudo mkdir /mnt/ext\n$ sudo chown -R ubuntu:ubuntu /mnt/ext/</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Ask ourselves, \"what do we know at this point?\" We have installed the NFS client software. We created a\nmapped file system path back to the master node&#8217;s physical mount. And, we&#8217;ve set ownership for the file system\nso that our user <code>ubuntu</code> can use it when it&#8217;s working.</p>\n</div>\n<div class=\"paragraph\">\n<p>Now, we&#8217;re going to add the actual NFS mount to our file system tabulation in <code>/etc/fstab</code>. Open <code>/etc/fstab</code>\nand add the following.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>192.168.1.12:/mnt/ext /mnt/ext nfs rw 0 0</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Reboot the NFS client host, open a terminal and navigate to the mount. You should see this.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>ubuntu@kube-worker-1:/mnt/ext$ ls\nlost+found</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If you don&#8217;t see <code>lost+found</code> then the system did not mount the new NFS filesystem. If you do see it, we&#8217;re done.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nDo not just assume that a system reboot will mount <code>/mnt/ext</code> by the system just \"knowing\" to somehow call\n<code>mount /mnt/ext</code>. Two of my workers would not mount on reboot and I fixed this with adding a new service to\nsystemd. I&#8217;ll not discuss that here but did want to mention this.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_bibliography\">5. Bibliography</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist bibliography\">\n<ul class=\"bibliography\">\n<li>\n<p><a id=\"sandberg-goldberg-kleiman-walsh-lyon\"></a>[sandberg-goldberg-kleiman-walsh-lyon] Russel Sandberg; David Goldberg; Steve Kleiman; Dan Walsh; Bob Lyon (1985). 'Design and Implementation of the Sun Network Filesystem'. USENIX. CiteSeerX 10.1.1.14.473.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_license\">Appendix A: License</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document is licensed by the Apache License version 2.0. Currently,\nthe content in this document is being kept from the public however, in\nthe event the material contained here is willingly shared with\nothers, the license will remain unchanged and will convey with the\ntransference of the material.</p>\n</div>\n<div class=\"paragraph\">\n<p>Apache License\nVersion 2.0, January 2004\n<a href=\"http://www.apache.org/licenses/\" class=\"bare\">http://www.apache.org/licenses/</a></p>\n</div>\n<div class=\"paragraph\">\n<p>A copy has also been provided with this software repository.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2021 David L Whitehurst.</p>\n</div>\n</div>\n</div>","document":{"title":"Network File System"},"fields":{"slug":"/pages/nfs/"}}},{"node":{"id":"57bf26e4-f65f-5abb-9eb9-9afdda5d06eb","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#_preliminaries\">2. Preliminaries</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_goal\">2.1. Goal</a></li>\n<li><a href=\"#_platform\">2.2. Platform</a></li>\n<li><a href=\"#_dependencies\">2.3. Dependencies</a></li>\n</ul>\n</li>\n<li><a href=\"#_installation\">3. Installation</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_configuration\">3.1. Configuration</a></li>\n<li><a href=\"#_startup\">3.2. Startup</a></li>\n<li><a href=\"#_initial_opening\">3.3. Initial Opening</a></li>\n<li><a href=\"#_unseal\">3.4. Unseal</a></li>\n</ul>\n</li>\n<li><a href=\"#_backup_and_restore\">4. Backup and Restore</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_scripted\">4.1. Scripted</a></li>\n<li><a href=\"#_security\">4.2. Security</a></li>\n<li><a href=\"#_scheduled_and_automated\">4.3. Scheduled and Automated</a></li>\n</ul>\n</li>\n<li><a href=\"#_administration\">5. Administration</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_command_line\">5.1. Command-line</a></li>\n<li><a href=\"#_web_administration\">5.2. Web Administration</a></li>\n</ul>\n</li>\n<li><a href=\"#_cheatsheet\">Appendix A: Cheatsheet</a></li>\n<li><a href=\"#_acronyms\">Appendix B: Acronyms</a></li>\n<li><a href=\"#_glossary\">Appendix C: Glossary</a></li>\n<li><a href=\"#_license\">Appendix D: License</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://site.fortytwobinary.com/\">Site Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\" height=\"32\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary service documentation for Hashicorp Vault\non Raspberry Pi 4 Model B. This document is subject to great change and will be maintained in a software repository <a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nThis installation reference was drafted and is maintained as a DevOps reference to the work that occurs on the FortyTwoBinary network and infrastructure. The\npowerful command-line instructions found here, may or may not be accurate\nor timely. This warning is given to let the DevOp be aware that commands\nmay not be idempotent and before root-level (sudo) actions are taken, to\nthink twice before hitting the Enter key.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This document was written using asciidoc markup and the HTML you see is\ngenerated by a tool driven using Python called asciidoctor. This\ninstallation reference is a powerful document that can be of great value in the event of data loss, machine crashes, backups, maintenance, installations, and troubleshooting.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The network and infrastructure playbook is a compilation of the notes,\nconfigurations, how-tos, general, and technical documentation that will\nfollow the evolution of the FortyTwoBinary network. This treatise will\noutline and describe the network, the configurations, the machines,\nand the software the operates over it.</p>\n</div>\n<div class=\"paragraph\">\n<p>The FortyTwoBinary network is an internal network behind a home ISP or\nInternet Service Provider and protected from the public internet via\na secure and highly configured network router.</p>\n</div>\n<div class=\"paragraph\">\n<p>FortyTwoBinary is a made up organization name for our home network and\nused in the event that other people join me in my learning and education.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">My Mission</div>\n<div class=\"paragraph\">\n<p>Kubernetes has emerged as powerful way to serve web content and move\ndata over the internet at grand scale. This is very expensive even for\nwell-paid consultants to learn on their own. Small computers and virtual\nmachines are inexpensive and convenient to own. My mission is to learn\nmore about containers, hosting, and clustering all on my own time and\ndo this economically of course.</p>\n</div>\n<div class=\"paragraph\">\n<p>Turing Pi is now making a cluster board for multiple Raspberry Pi boards\nand the cluster capability for up to 28 cores or 7 Raspberry Pi computers.\nCanonical Ubuntu is also producing a software product called MicroK8s or\nwhat they call a no-more, no-less version of Kubernetes that will run on\na single server host. The FortyTwoBinary network (my home network) is\nslowly becoming a laboratory for learning.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_preliminaries\">2. Preliminaries</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_goal\">2.1. Goal</h3>\n<div class=\"paragraph\">\n<p>The goal here is to install and maintain a single instance of a running\nHashicorp Vault in production mode on a Raspberry Pi 4 Model B.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_platform\">2.2. Platform</h3>\n<div class=\"paragraph\">\n<p>As stated in the Goal section above, the platform for installation and\nservice is the Raspberry Pi 4 Model B. We recently procured 3 Labist\nstarter kits with the new Raspberry Pi 4 Model B machines. These boards\nhave 8GB of fixed RAM and Raspbian (Debian 10 Buster) OS for arm64 (arm7l)\ncame on a 128GB Sansdisk microSD card. Exceptionally easy startup and our\n3 machines are now online, running, and accessible via static IPs.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_dependencies\">2.3. Dependencies</h3>\n<div class=\"paragraph\">\n<p>Dependencies can be software packages, configurations, or even tools that\nneed to be available during the process of installation. In this case,\neverything was available. An ssh connection to the Raspberry Pi allowed\nfor a smooth installation of the Vault binary for this platform. VIM was\ninstalled but VI was present at initial boot.</p>\n</div>\n<div class=\"paragraph\">\n<p>We want to note that the initial binary did not work correctly. We\nalso tried a Docker version prior to a strict server install. It seems\nthat a 64bit edition for the ARM processor is yet to be available. We will\nperiodically check for this and upgrade when available.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_installation\">3. Installation</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Installation of the Hashicorp Vault consists of placement of the vault\nbinary (executable) in a quiet location on the machine that is available\non the administrator&#8217;s <code>$PATH</code>. Currently, the binary is run as a background process and will ultimately be set up with a control script and probably called in <code>rc.local</code>.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nDownload the Vault binary for Raspberry Pi 4 Model B here: <a href=\"https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip\">https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip</a>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nDo NOT download the ARM64 edition for Linux. It will NOT run on the Raspberry Pi 4 Model B using Raspbian (Debian 10 Buster) as of February 27, 2021. This message is HIGHLY subject to CHANGE.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Unzip the download somewhere and we moved the file <code>vault</code> to <code>&lt;user-home&gt;/bin</code> Then we added the following to our <code>.bashrc</code> and sourced it instead of logging out and back in.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">export PATH=/home/pi/bin:$PATH</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Now our user (pi) can execute the vault program from anywhere. The only\ncaveat is that with the command, a configuration is needed. Let&#8217;s create\nthe configuration for Vault in the user&#8217;s home directory. We&#8217;ll then run\nthe executable and discuss optimum configuration in the\nsection below.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_configuration\">3.1. Configuration</h3>\n<div class=\"paragraph\">\n<p>Hashicorp Vault can be configured using JSON or <a href=\"#X900\">HCL</a>. We chose to use\nJSON only for familiarity. Create a file called <code>vault-config.json</code> in the\nuser&#8217;s home directory and add this content:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-json\" data-lang=\"json\">{\n  \"backend\": {\n    \"file\": {\n      \"path\": \"vault/data\"\n    }\n  },\n  \"listener\": {\n    \"tcp\":{\n      \"address\": \"0.0.0.0:8200\",\n      \"tls_disable\": 1\n    }\n  },\n  \"ui\": true\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Take note that the path <code>vault/data</code> will be relative to where the vault\nexecutable is run. We will issue the command from the user&#8217;s home directory\nand where this configuration file currently resides. Also the <code>0.0.0.0</code> in\nthe listener section is a placeholder that defines a non-routable IP address. It has been explained to mean \"all addresses\". Learn more here:\n<a href=\"https://en.wikipedia.org/wiki/0.0.0.0\">https://en.wikipedia.org/wiki/0.0.0.0</a>. The 8200 port is the Hashicorp Vault default.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nPlease note that HTTPS is not being used. This is NOT good practice however, final software configuration may occur within the FortyTwoBinary\nnetwork (internal) or in the event all configuration is moved onto the\npublic Internet.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_startup\">3.2. Startup</h3>\n<div class=\"paragraph\">\n<p>Run the following command from your user&#8217;s home directory:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$  vault server -config=vault-config.json &amp;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You may need to hit enter after the server output on the screen. Obtain\nthe prompt by hitting the return key once. Then let&#8217;s do a process\nstatus and look for the running vault.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ ps -ef | grep vault</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You should see something like this:</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vault-process.png\" alt=\"vault-process\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>We&#8217;ll leave the <code>kill -9</code> business to you sys-Admin types and for later.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_initial_opening\">3.3. Initial Opening</h3>\n<div class=\"paragraph\">\n<p>Before the Hashicorp Vault can be opened, you must initialize Vault.\nEvery initialized vault starts in the sealed state. We&#8217;ll first initialize\nthe vault and then unseal it step by step.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault operator init</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This will initialize the system and create a series of unseal keys and an\nencrypted root token. You will use 3 of the 5 keys given (your choice) to\nunseal the vault and then the root token to login. The operator init\ncommand has options, but for now we&#8217;re do things the easy way. Again, do\nremember that this documentation is ALWAYS subject to change.</p>\n</div>\n<div class=\"paragraph\">\n<p>When vault is initialized you should see output similar to this:\n<span class=\"image\"><img src=\"/images/vault-init.png\" alt=\"vault-init\" height=\"100\"></span></p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nYou must capture the unseal keys and the root initial token. If you lose\nthis information you might as well start over.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_unseal\">3.4. Unseal</h3>\n<div class=\"paragraph\">\n<p>Now we will unseal the vault using the keys provided. You will now call\nfor Vault to unseal 3 times using the following command.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault operator unseal</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Provide the keys one by one and you will see <code>vault status</code> output each\ntime. On the third time you will notice that the sealed attribute is false.\nThe unsealing operation was a success. Now login.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault login</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This time you enter the root token. Remember not to lose the info from the\ninitialization. We generally do this:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault operator init &gt; keeper</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_backup_and_restore\">4. Backup and Restore</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_scripted\">4.1. Scripted</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_security\">4.2. Security</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_scheduled_and_automated\">4.3. Scheduled and Automated</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_administration\">5. Administration</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The full administration and use of Vault is yet to be discovered. For now\nwe&#8217;ll provide some cheatsheet commands and a few use cases.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_command_line\">5.1. Command-line</h3>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203; you are welcome lol &#8230;&#8203;</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_web_administration\">5.2. Web Administration</h3>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203;</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_cheatsheet\">Appendix A: Cheatsheet</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_acronyms\">Appendix B: Acronyms</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><a id=\"X900\"></a>HCL</dt>\n<dd>\n<p>Hashicorp Control Language. Read more here: <a href=\"https://github.com/hashicorp/hcl\">https://github.com/hashicorp/hcl</a></p>\n</dd>\n<dt class=\"hdlist1\">NAT</dt>\n<dd>\n<p>Network Address Translation</p>\n</dd>\n<dt class=\"hdlist1\">SBC</dt>\n<dd>\n<p>Small board computer</p>\n</dd>\n<dt class=\"hdlist1\">WAP</dt>\n<dd>\n<p>Wireless Access Point</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_glossary\">Appendix C: Glossary</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist glossary\">\n<dl>\n<dt><a id=\"X8\"></a> Block element</dt>\n<dd>\n<p>An AsciiDoc block element is a document entity composed of one or\nmore whole lines of text.</p>\n</dd>\n<dt><a id=\"X34\"></a> Inline element</dt>\n<dd>\n<p>AsciiDoc inline elements occur within block element textual\ncontent, they perform formatting and substitution tasks.</p>\n</dd>\n<dt>Formal element</dt>\n<dd>\n<p>An AsciiDoc block element that has a BlockTitle. Formal elements\nare normally listed in front or back matter, for example lists of\ntables, examples and figures.</p>\n</dd>\n<dt>Verbatim element</dt>\n<dd>\n<p>The word verbatim indicates that white space and line breaks in\nthe source document are to be preserved in the output document.</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_license\">Appendix D: License</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document is licensed by the Apache License version 2.0. Currently,\nthe content in this document is being kept from the public however, in\nthe event the material contained here is willingly shared with\nothers, the license will remain unchanged and will convey with the\ntransference of the material.</p>\n</div>\n<div class=\"paragraph\">\n<p>Apache License\nVersion 2.0, January 2004\n<a href=\"http://www.apache.org/licenses/\" class=\"bare\">http://www.apache.org/licenses/</a></p>\n</div>\n<div class=\"paragraph\">\n<p>A copy has also been provided with this software repository.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2021 David L Whitehurst.</p>\n</div>\n</div>\n</div>","document":{"title":"Hashicorp Vault"},"fields":{"slug":"/pages/vault/"}}},{"node":{"id":"4729113a-635a-5f83-82c4-69015a74dfa2","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#_environment\">2. Environment</a></li>\n<li><a href=\"#_links\">3. Links</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/ethernet.jpg\" alt=\"Ethernet\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://site.fortytwobinary.com/\">Site Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\" height=\"32\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary lab documentation. These documents are subject\nto great change and will be maintained in a software repository <a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nThis Welcome Page was drafted and is maintained as a DevOps reference to the work that occurs on the FortyTwoBinary network and infrastructure. The powerful command-line instructions found here, may or may\nnot be accurate or timely. This warning is given to let the DevOp be aware that commands may not be\nidempotent and before root-level (sudo) actions are taken, to please think twice before hitting the Enter\nkey.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This document was written using asciidoc markup and the HTML you see is\ngenerated by a tool driven using Python called asciidoctor. This\nWelcome Page is a powerful document that can be of great value in the\nevent of data loss, machine crashes, backups, maintenance, installations,\nand troubleshooting.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>I am a software professional and with the popularity of Kubernetes, I now write software\nthat runs on a Kubernetes platform. Most developers tinker with new technology at home, at\nnight. And, employers can&#8217;t afford to train their staff or allow consultants to just learn\non the job. For my situation, Kubernetes is expensive to host in the cloud for personal\nand training reasons. I&#8217;ve recently arrived at a better solution and that&#8217;s my own K8s\ncluster using recently available Model 4b Raspberry Pi machines.</p>\n</div>\n<div class=\"paragraph\">\n<p>My cluster consists of 3 model 4b and 2 model 3b Raspberry Pi small board computers (SBC).</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_environment\">2. Environment</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The FortyTwoBinary lab environment is simply a home network, 8 SBCs (arm64),\nan 8-port switch, a 5-port switch, a wireless router, and a public ISP. I currently host a\nfew services publicly and all communications are protected with PKI certificates.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_links\">3. Links</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The following hyperlinks provide navigation to the lab documentation content. Links are given\nhere because the documents are not organized and it&#8217;s more convenient to just list them here.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>{endpoint-url}/kube-tower.html[kube-tower]</p>\n</li>\n<li>\n<p>{endpoint-url}/playbook.html[playbook]</p>\n</li>\n<li>\n<p>{endpoint-url}/docker.html[docker]</p>\n</li>\n<li>\n<p>{endpoint-url}/nfs.html[nfs]</p>\n</li>\n<li>\n<p>{endpoint-url}/vault.html[vault]</p>\n</li>\n<li>\n<p>{endpoint-url}/journal.html[journal]</p>\n</li>\n<li>\n<p>{endpoint-url}/issues.html[issues]</p>\n</li>\n<li>\n<p>{endpoint-url}/asciidoc.html[asciidoc]</p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Welcome"},"fields":{"slug":"/pages/welcome/"}}},{"node":{"id":"26247f14-ebc6-524d-bacc-6e11191dd5b9","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_first_level_heading\">First level heading</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_second_level_heading\">Second level heading</a></li>\n</ul>\n</li>\n<li><a href=\"#_first_level_heading_2\">First level heading</a></li>\n<li><a href=\"#_first_level_heading_3\">First level heading</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Content entered directly below the header but before the first section heading is called the preamble.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_first_level_heading\">First level heading</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This is a paragraph with a <strong>bold</strong> word and an <em>italicized</em> word.</p>\n</div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"https://avatars3.githubusercontent.com/u/71047?s=100&v=4\" alt=\"Kyle Mathews\">\n</div>\n<div class=\"title\">Figure 1. Image caption</div>\n</div>\n<div class=\"paragraph\">\n<p>This is another paragraph.<sup class=\"footnote\">[<a id=\"_footnoteref_1\" class=\"footnote\" href=\"#_footnotedef_1\" title=\"View footnote.\">1</a>]</sup></p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_second_level_heading\">Second level heading</h3>\n<div class=\"ulist\">\n<div class=\"title\">Unordered list title</div>\n<ul>\n<li>\n<p>list item 1</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>nested list item</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>nested nested list item 1</p>\n</li>\n<li>\n<p>nested nested list item 2</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>list item 2</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>This is a paragraph.</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. Example block title</div>\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>Content in an example block is subject to normal substitutions.</p>\n</div>\n</div>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Sidebar title</div>\n<div class=\"paragraph\">\n<p>Sidebars contain aside text and are subject to normal substitutions.</p>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_third_level_heading\">Third level heading</h4>\n<div id=\"id-for-listing-block\" class=\"listingblock\">\n<div class=\"title\">Listing block title</div>\n<div class=\"content\">\n<pre>Content in a listing block is subject to verbatim substitutions.\nListing block content is commonly used to preserve code input.</pre>\n</div>\n</div>\n<div class=\"sect4\">\n<h5 id=\"_fourth_level_heading\">Fourth level heading</h5>\n<table class=\"tableblock frame-all grid-all stretch\">\n<caption class=\"title\">Table 1. Table title</caption>\n<colgroup>\n<col style=\"width: 50%;\">\n<col style=\"width: 50%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Column heading 1</th>\n<th class=\"tableblock halign-left valign-top\">Column heading 2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Column 1, row 1</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Column 2, row 1</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Column 1, row 2</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Column 2, row 2</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"sect5\">\n<h6 id=\"_fifth_level_heading\">Fifth level heading</h6>\n<div class=\"quoteblock\">\n<blockquote>\n<div class=\"paragraph\">\n<p>I am a block quote or a prose excerpt.\nI am subject to normal substitutions.</p>\n</div>\n</blockquote>\n<div class=\"attribution\">\n&#8212; firstname lastname<br>\n<cite>movie title</cite>\n</div>\n</div>\n<div class=\"verseblock\">\n<pre class=\"content\">I am a verse block.\n  Indents and endlines are preserved in verse blocks.</pre>\n<div class=\"attribution\">\n&#8212; firstname lastname<br>\n<cite>poem title and more</cite>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_first_level_heading_2\">First level heading</h2>\n<div class=\"sectionbody\">\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nThere are five admonition labels: Tip, Note, Important, Caution and Warning.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>ordered list item</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>nested ordered list item</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>ordered list item</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>The text at the end of this sentence is cross referenced to <a href=\"#_third_level_heading\">the third level heading</a></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_first_level_heading_3\">First level heading</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This is a link to the <a href=\"http://asciidoctor.org/docs/user-manual/\">Asciidoctor User Manual</a>.\nThis is an attribute reference <a href=\"http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/\">which links this text to the Asciidoctor Quick Reference Guide</a>.</p>\n</div>\n</div>\n</div>\n<div id=\"footnotes\">\n<hr>\n<div class=\"footnote\" id=\"_footnotedef_1\">\n<a href=\"#_footnoteref_1\">1</a>. I am footnote text and will be rendered at the bottom of the article.\n</div>\n</div>","document":{"title":"AsciiDoc Article Title"},"fields":{"slug":"/pages/lots-of-text/"}}},{"node":{"id":"11b477a9-befb-5c8e-b787-d979aa3a4d5a","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#X6\">2. Getting Started</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_installing_asciidoc\">2.1. Installing AsciiDoc</a></li>\n<li><a href=\"#X11\">2.2. Example AsciiDoc Documents</a></li>\n</ul>\n</li>\n<li><a href=\"#_asciidoc_document_types\">3. AsciiDoc Document Types</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_article\">3.1. article</a></li>\n<li><a href=\"#_book\">3.2. book</a></li>\n<li><a href=\"#_manpage\">3.3. manpage</a></li>\n</ul>\n</li>\n<li><a href=\"#X5\">4. AsciiDoc Backends</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_backend_aliases\">4.1. Backend Aliases</a></li>\n<li><a href=\"#X100\">4.2. Backend Plugins</a></li>\n</ul>\n</li>\n<li><a href=\"#_docbook\">5. DocBook</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#X12\">5.1. Converting DocBook to other file formats</a></li>\n<li><a href=\"#X43\">5.2. a2x Toolchain Wrapper</a></li>\n<li><a href=\"#_html_generation\">5.3. HTML generation</a></li>\n<li><a href=\"#_pdf_generation\">5.4. PDF generation</a></li>\n<li><a href=\"#_html_help_generation\">5.5. HTML Help generation</a></li>\n<li><a href=\"#_toolchain_components_summary\">5.6. Toolchain components summary</a></li>\n<li><a href=\"#_asciidoc_dblatex_configuration_files\">5.7. AsciiDoc dblatex configuration files</a></li>\n<li><a href=\"#_asciidoc_docbook_xsl_stylesheets_drivers\">5.8. AsciiDoc DocBook XSL Stylesheets drivers</a></li>\n</ul>\n</li>\n<li><a href=\"#_generating_plain_text_files\">6. Generating Plain Text Files</a></li>\n<li><a href=\"#X35\">7. HTML5 and XHTML 1.1</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#X99\">7.1. Themes</a></li>\n</ul>\n</li>\n<li><a href=\"#_document_structure\">8. Document Structure</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_block_elements\">8.1. Block Elements</a></li>\n<li><a href=\"#X95\">8.2. Header</a></li>\n<li><a href=\"#X86\">8.3. Preamble</a></li>\n<li><a href=\"#_sections\">8.4. Sections</a></li>\n<li><a href=\"#_inline_elements\">8.5. Inline Elements</a></li>\n</ul>\n</li>\n<li><a href=\"#_document_processing\">9. Document Processing</a></li>\n<li><a href=\"#_text_formatting\">10. Text Formatting</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#X51\">10.1. Quoted Text</a></li>\n<li><a href=\"#_superscripts_and_subscripts\">10.2. Superscripts and Subscripts</a></li>\n<li><a href=\"#_line_breaks\">10.3. Line Breaks</a></li>\n<li><a href=\"#_page_breaks\">10.4. Page Breaks</a></li>\n<li><a href=\"#_rulers\">10.5. Rulers</a></li>\n<li><a href=\"#_tabs\">10.6. Tabs</a></li>\n<li><a href=\"#_replacements\">10.7. Replacements</a></li>\n<li><a href=\"#_special_words\">10.8. Special Words</a></li>\n</ul>\n</li>\n<li><a href=\"#X17\">11. Titles</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_two_line_titles\">11.1. Two line titles</a></li>\n<li><a href=\"#X46\">11.2. One line titles</a></li>\n<li><a href=\"#_floating_titles\">11.3. Floating titles</a></li>\n</ul>\n</li>\n<li><a href=\"#X42\">12. Block Titles</a></li>\n<li><a href=\"#X41\">13. BlockId Element</a></li>\n<li><a href=\"#X79\">14. AttributeList Element</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_attribute_value_substitution\">14.1. Attribute value substitution</a></li>\n<li><a href=\"#_common_attributes\">14.2. Common attributes</a></li>\n</ul>\n</li>\n<li><a href=\"#_paragraphs\">15. Paragraphs</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_normal_paragraph_syntax\">15.1. normal paragraph syntax</a></li>\n<li><a href=\"#X85\">15.2. literal paragraph syntax</a></li>\n<li><a href=\"#X94\">15.3. quote and verse paragraph styles</a></li>\n<li><a href=\"#X28\">15.4. Admonition Paragraphs</a></li>\n</ul>\n</li>\n<li><a href=\"#X104\">16. Delimited Blocks</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_predefined_delimited_blocks\">16.1. Predefined Delimited Blocks</a></li>\n<li><a href=\"#_listing_blocks\">16.2. Listing Blocks</a></li>\n<li><a href=\"#X65\">16.3. Literal Blocks</a></li>\n<li><a href=\"#_sidebar_blocks\">16.4. Sidebar Blocks</a></li>\n<li><a href=\"#X26\">16.5. Comment Blocks</a></li>\n<li><a href=\"#X76\">16.6. Passthrough Blocks</a></li>\n<li><a href=\"#_quote_blocks\">16.7. Quote Blocks</a></li>\n<li><a href=\"#X48\">16.8. Example Blocks</a></li>\n<li><a href=\"#X22\">16.9. Admonition Blocks</a></li>\n<li><a href=\"#X29\">16.10. Open Blocks</a></li>\n</ul>\n</li>\n<li><a href=\"#X64\">17. Lists</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_bulleted_lists\">17.1. Bulleted Lists</a></li>\n<li><a href=\"#_numbered_lists\">17.2. Numbered Lists</a></li>\n<li><a href=\"#_labeled_lists\">17.3. Labeled Lists</a></li>\n<li><a href=\"#_question_and_answer_lists\">17.4. Question and Answer Lists</a></li>\n<li><a href=\"#_glossary_lists\">17.5. Glossary Lists</a></li>\n<li><a href=\"#_bibliography_lists\">17.6. Bibliography Lists</a></li>\n<li><a href=\"#X15\">17.7. List Item Continuation</a></li>\n</ul>\n</li>\n<li><a href=\"#X92\">18. Footnotes</a></li>\n<li><a href=\"#_indexes\">19. Indexes</a></li>\n<li><a href=\"#X105\">20. Callouts</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_implementation_notes\">20.1. Implementation Notes</a></li>\n<li><a href=\"#_including_callouts_in_included_code\">20.2. Including callouts in included code</a></li>\n</ul>\n</li>\n<li><a href=\"#_macros\">21. Macros</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_inline_macros\">21.1. Inline Macros</a></li>\n<li><a href=\"#_block_macros\">21.2. Block Macros</a></li>\n<li><a href=\"#_system_macros\">21.3. System Macros</a></li>\n<li><a href=\"#X77\">21.4. Passthrough macros</a></li>\n<li><a href=\"#_macro_definitions\">21.5. Macro Definitions</a></li>\n</ul>\n</li>\n<li><a href=\"#X98\">22. HTML 5 audio and video block macros</a></li>\n<li><a href=\"#_tables\">23. Tables</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_example_tables\">23.1. Example tables</a></li>\n<li><a href=\"#X68\">23.2. Table input data formats</a></li>\n<li><a href=\"#X69\">23.3. Table attributes</a></li>\n<li><a href=\"#X70\">23.4. Column Specifiers</a></li>\n<li><a href=\"#X84\">23.5. Cell Specifiers</a></li>\n<li><a href=\"#X71\">23.6. Table styles</a></li>\n<li><a href=\"#X72\">23.7. Markup attributes</a></li>\n<li><a href=\"#_nested_tables\">23.8. Nested tables</a></li>\n<li><a href=\"#X83\">23.9. DocBook table limitations</a></li>\n</ul>\n</li>\n<li><a href=\"#X1\">24. Manpage Documents</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_document_header\">24.1. Document Header</a></li>\n<li><a href=\"#_the_name_section\">24.2. The NAME Section</a></li>\n<li><a href=\"#_the_synopsis_section\">24.3. The SYNOPSIS Section</a></li>\n<li><a href=\"#_refmiscinfo_attributes\">24.4. refmiscinfo attributes</a></li>\n</ul>\n</li>\n<li><a href=\"#X78\">25. Mathematical Formulas</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_latex_math\">25.1. LaTeX Math</a></li>\n<li><a href=\"#_mathjax\">25.2. MathJax</a></li>\n<li><a href=\"#_latexmathml\">25.3. LaTeXMathML</a></li>\n<li><a href=\"#_mathml\">25.4. MathML</a></li>\n</ul>\n</li>\n<li><a href=\"#X7\">26. Configuration Files</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_configuration_file_format\">26.1. Configuration File Format</a></li>\n<li><a href=\"#_miscellaneous_section\">26.2. Miscellaneous section</a></li>\n<li><a href=\"#_titles_section\">26.3. Titles section</a></li>\n<li><a href=\"#_tags_section\">26.4. Tags section</a></li>\n<li><a href=\"#_attributes_section\">26.5. Attributes section</a></li>\n<li><a href=\"#_special_characters_section\">26.6. Special Characters section</a></li>\n<li><a href=\"#_quoted_text_section\">26.7. Quoted Text section</a></li>\n<li><a href=\"#_special_words_section\">26.8. Special Words section</a></li>\n<li><a href=\"#X10\">26.9. Replacements section</a></li>\n<li><a href=\"#_markup_template_sections\">26.10. Markup Template Sections</a></li>\n<li><a href=\"#X27\">26.11. Configuration file names, precedence and locations</a></li>\n</ul>\n</li>\n<li><a href=\"#_document_attributes\">27. Document Attributes</a></li>\n<li><a href=\"#X18\">28. Attribute Entries</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_setting_configuration_entries\">28.1. Setting configuration entries</a></li>\n</ul>\n</li>\n<li><a href=\"#X21\">29. Attribute Lists</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#X75\">29.1. Options attribute</a></li>\n<li><a href=\"#_macro_attribute_lists\">29.2. Macro Attribute lists</a></li>\n</ul>\n</li>\n<li><a href=\"#_attribute_references\">30. Attribute References</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_simple_attributes_references\">30.1. Simple Attributes References</a></li>\n<li><a href=\"#_conditional_attribute_references\">30.2. Conditional Attribute References</a></li>\n<li><a href=\"#X24\">30.3. System Attribute References</a></li>\n</ul>\n</li>\n<li><a href=\"#X60\">31. Intrinsic Attributes</a></li>\n<li><a href=\"#X73\">32. Block Element Definitions</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#X23\">32.1. Styles</a></li>\n<li><a href=\"#_paragraphs_2\">32.2. Paragraphs</a></li>\n<li><a href=\"#_delimited_blocks\">32.3. Delimited Blocks</a></li>\n<li><a href=\"#_lists\">32.4. Lists</a></li>\n<li><a href=\"#_tables_2\">32.5. Tables</a></li>\n</ul>\n</li>\n<li><a href=\"#X59\">33. Filters</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_filter_search_paths\">33.1. Filter Search Paths</a></li>\n<li><a href=\"#_filter_configuration_files\">33.2. Filter Configuration Files</a></li>\n<li><a href=\"#X56\">33.3. Example Filter</a></li>\n<li><a href=\"#_built_in_filters\">33.4. Built-in filters</a></li>\n<li><a href=\"#X58\">33.5. Filter plugins</a></li>\n</ul>\n</li>\n<li><a href=\"#X101\">34. Plugins</a></li>\n<li><a href=\"#X36\">35. Help Commands</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_customizing_help\">35.1. Customizing Help</a></li>\n</ul>\n</li>\n<li><a href=\"#_tips_and_tricks\">36. Tips and Tricks</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_know_your_editor\">36.1. Know Your Editor</a></li>\n<li><a href=\"#X20\">36.2. Vim Commands for Formatting AsciiDoc</a></li>\n<li><a href=\"#_troubleshooting\">36.3. Troubleshooting</a></li>\n<li><a href=\"#_gotchas\">36.4. Gotchas</a></li>\n<li><a href=\"#X90\">36.5. Combining separate documents</a></li>\n<li><a href=\"#_processing_document_sections_separately\">36.6. Processing document sections separately</a></li>\n<li><a href=\"#_processing_document_snippets\">36.7. Processing document snippets</a></li>\n<li><a href=\"#_badges_in_html_page_footers\">36.8. Badges in HTML page footers</a></li>\n<li><a href=\"#_pretty_printing_asciidoc_output\">36.9. Pretty printing AsciiDoc output</a></li>\n<li><a href=\"#_supporting_minor_docbook_dtd_variations\">36.10. Supporting minor DocBook DTD variations</a></li>\n<li><a href=\"#_creating_stand_alone_html_documents\">36.11. Creating stand-alone HTML documents</a></li>\n<li><a href=\"#_shipping_stand_alone_asciidoc_source\">36.12. Shipping stand-alone AsciiDoc source</a></li>\n<li><a href=\"#_inserting_blank_space\">36.13. Inserting blank space</a></li>\n<li><a href=\"#_closing_open_sections\">36.14. Closing open sections</a></li>\n<li><a href=\"#_validating_output_files\">36.15. Validating output files</a></li>\n</ul>\n</li>\n<li><a href=\"#_glossary\">Glossary</a></li>\n<li><a href=\"#_migration_notes\">Appendix A: Migration Notes</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#X53\">Version 7 to version 8</a></li>\n</ul>\n</li>\n<li><a href=\"#X38\">Appendix B: Packager Notes</a></li>\n<li><a href=\"#X39\">Appendix C: AsciiDoc Safe Mode</a></li>\n<li><a href=\"#_using_asciidoc_with_non_english_languages\">Appendix D: Using AsciiDoc with non-English Languages</a></li>\n<li><a href=\"#_vim_syntax_highlighter\">Appendix E: Vim Syntax Highlighter</a></li>\n<li><a href=\"#X74\">Appendix F: Attribute Options</a></li>\n<li><a href=\"#X82\">Appendix G: Diagnostics</a></li>\n<li><a href=\"#X88\">Appendix H: Backend Attributes</a></li>\n<li><a href=\"#_license\">Appendix I: License</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://asciidoc.org/\">Site Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc is a text document format for writing notes, documentation,\narticles, books, ebooks, slideshows, web pages, blogs and UNIX man\npages.  AsciiDoc files can be translated to many formats including\nHTML, PDF, EPUB, man page.  AsciiDoc is highly configurable: both the\nAsciiDoc source file syntax and the backend output markups (which can\nbe almost any type of SGML/XML markup) can be customized and extended\nby the user.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nThis user guide is for AsciiDoc.py, which is a legacy processor for\nthis syntax, handling an older rendition of AsciiDoc. As such, this\nwill not properly handle the\n<a href=\"https://projects.eclipse.org/projects/technology.asciidoc\">current AsciiDoc specification</a>.\nIt is suggested that unless you specifically require the AsciiDoc.py\ntoolchain, you should find a processor that handles the modern\nAsciiDoc syntax.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This is an overly large document, it probably needs to be refactored\ninto a Tutorial, Quick Reference and Formal Reference.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you&#8217;re new to AsciiDoc read this section and the <a href=\"#X6\">Getting\nStarted</a> section and take a look at the example AsciiDoc (<code>*.txt</code>)\nsource files in the distribution <code>doc</code> directory.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc is a plain text human readable/writable document format that\ncan be translated to DocBook or HTML using the asciidoc(1) command.\nYou can then either use asciidoc(1) generated HTML directly or run\nasciidoc(1) DocBook output through your favorite DocBook toolchain or\nuse the AsciiDoc a2x(1) toolchain wrapper to produce PDF, EPUB, DVI,\nLaTeX, PostScript, man page, HTML and text formats.</p>\n</div>\n<div class=\"paragraph\">\n<p>The AsciiDoc format is a useful presentation format in its own right:\nAsciiDoc markup is simple, intuitive and as such is easily proofed and\nedited.</p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc is light weight: it consists of a single Python script and a\nbunch of configuration files. Apart from asciidoc(1) and a Python\ninterpreter, no other programs are required to convert AsciiDoc text\nfiles to DocBook or HTML. See <a href=\"#X11\">Example AsciiDoc Documents</a>\nbelow.</p>\n</div>\n<div class=\"paragraph\">\n<p>Text markup conventions tend to be a matter of (often strong) personal\npreference: if the default syntax is not to your liking you can define\nyour own by editing the text based asciidoc(1) configuration files.\nYou can also create configuration files to translate AsciiDoc\ndocuments to almost any SGML/XML markup.</p>\n</div>\n<div class=\"paragraph\">\n<p>asciidoc(1) comes with a set of configuration files to translate\nAsciiDoc articles, books and man pages to HTML or DocBook backend\nformats.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">My AsciiDoc Itch</div>\n<div class=\"paragraph\">\n<p>DocBook has emerged as the de facto standard Open Source documentation\nformat. But DocBook is a complex language, the markup is difficult to\nread and even more difficult to write directly&#8201;&#8212;&#8201;I found I was\nspending more time typing markup tags, consulting reference manuals\nand fixing syntax errors, than I was writing the documentation.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X6\">2. Getting Started</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_installing_asciidoc\">2.1. Installing AsciiDoc</h3>\n<div class=\"paragraph\">\n<p>See the <code>README</code> and <code>INSTALL</code> files for install prerequisites and\nprocedures. Packagers take a look at <a href=\"#X38\">Packager Notes</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X11\">2.2. Example AsciiDoc Documents</h3>\n<div class=\"paragraph\">\n<p>The best way to quickly get a feel for AsciiDoc is to view the\nAsciiDoc web site and/or distributed examples:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Take a look at the linked examples on the AsciiDoc web site home\npage <a href=\"https://asciidoc.org/\" class=\"bare\">https://asciidoc.org/</a>.  Press the <em>Page Source</em> sidebar menu item to view\ncorresponding AsciiDoc source.</p>\n</li>\n<li>\n<p>Read the <code>*.txt</code> source files in the distribution <code>./doc</code> directory\nalong with the corresponding HTML and DocBook XML files.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_asciidoc_document_types\">3. AsciiDoc Document Types</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>There are three types of AsciiDoc documents: article, book and\nmanpage. All document types share the same AsciiDoc format with some\nminor variations. If you are familiar with DocBook you will have\nnoticed that AsciiDoc document types correspond to the same-named\nDocBook document types.</p>\n</div>\n<div class=\"paragraph\">\n<p>Use the asciidoc(1) <code>-d</code> (<code>--doctype</code>) option to specify the AsciiDoc\ndocument type&#8201;&#8212;&#8201;the default document type is <em>article</em>.</p>\n</div>\n<div class=\"paragraph\">\n<p>By convention the <code>.txt</code> file extension is used for AsciiDoc document\nsource files.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_article\">3.1. article</h3>\n<div class=\"paragraph\">\n<p>Used for short documents, articles and general documentation.  See the\nAsciiDoc distribution <code>./doc/article.txt</code> example.</p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc defines standard DocBook article frontmatter and backmatter\n<a href=\"#X93\">section markup templates</a> (appendix, abstract, bibliography,\nglossary, index).</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_book\">3.2. book</h3>\n<div class=\"paragraph\">\n<p>Books share the same format as articles, with the following\ndifferences:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The part titles in multi-part books are <a href=\"#X17\">top level titles</a>\n(same level as book title).</p>\n</li>\n<li>\n<p>Some sections are book specific e.g. preface and colophon.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Book documents will normally be used to produce DocBook output since\nDocBook processors can automatically generate footnotes, table of\ncontents, list of tables, list of figures, list of examples and\nindexes.</p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc defines standard DocBook book frontmatter and backmatter\n<a href=\"#X93\">section markup templates</a> (appendix, dedication, preface,\nbibliography, glossary, index, colophon).</p>\n</div>\n<div class=\"dlist\">\n<div class=\"title\">Example book documents</div>\n<dl>\n<dt class=\"hdlist1\">Book</dt>\n<dd>\n<p>The <code>./doc/book.txt</code> file in the AsciiDoc distribution.</p>\n</dd>\n<dt class=\"hdlist1\">Multi-part book</dt>\n<dd>\n<p>The <code>./doc/book-multi.txt</code> file in the AsciiDoc distribution.</p>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_manpage\">3.3. manpage</h3>\n<div class=\"paragraph\">\n<p>Used to generate roff format UNIX manual pages.  AsciiDoc manpage\ndocuments observe special header title and section naming conventions&#8201;&#8212;&#8201;see the <a href=\"#X1\">Manpage Documents</a> section for details.</p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc defines the <em>synopsis</em> <a href=\"#X93\">section markup template</a> to\ngenerate the DocBook <code>refsynopsisdiv</code> section.</p>\n</div>\n<div class=\"paragraph\">\n<p>See also the asciidoc(1) man page source (<code>./doc/asciidoc.1.txt</code>) from\nthe AsciiDoc distribution.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X5\">4. AsciiDoc Backends</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The asciidoc(1) command translates an AsciiDoc formatted file to the\nbackend format specified by the <code>-b</code> (<code>--backend</code>) command-line\noption. asciidoc(1) itself has little intrinsic knowledge of backend\nformats, all translation rules are contained in customizable cascading\nconfiguration files. Backend specific attributes are listed in the\n<a href=\"#X88\">Backend Attributes</a> section.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">docbook45</dt>\n<dd>\n<p>Outputs DocBook XML 4.5 markup.</p>\n</dd>\n<dt class=\"hdlist1\">docbook5</dt>\n<dd>\n<p>Outputs DocBook XML 5.0 markup.</p>\n</dd>\n<dt class=\"hdlist1\">html4</dt>\n<dd>\n<p>This backend generates plain HTML 4.01 Transitional markup.</p>\n</dd>\n<dt class=\"hdlist1\">xhtml11</dt>\n<dd>\n<p>This backend generates XHTML 1.1 markup styled with CSS2. Output\nfiles have an <code>.html</code> extension.</p>\n</dd>\n<dt class=\"hdlist1\">html5</dt>\n<dd>\n<p>This backend generates HTML 5 markup, apart from the inclusion of\n<a href=\"#X98\">audio and video block macros</a> it is functionally identical to\nthe <em>xhtml11</em> backend.</p>\n</dd>\n<dt class=\"hdlist1\">slidy</dt>\n<dd>\n<p>Use this backend to generate self-contained\n<a href=\"https://www.w3.org/Talks/Tools/Slidy2\">Slidy</a> HTML slideshows for\nyour web browser from AsciiDoc documents. The Slidy backend is\ndocumented in the distribution <code>doc/slidy.txt</code> file and\n<a href=\"https://asciidoc.org/slidy.html\">online</a>.</p>\n</dd>\n<dt class=\"hdlist1\">wordpress</dt>\n<dd>\n<p>A minor variant of the <em>html4</em> backend to support\n<a href=\"https://srackham.wordpress.com/blogpost1/\">blogpost</a>.</p>\n</dd>\n<dt class=\"hdlist1\">latex</dt>\n<dd>\n<p>Experimental LaTeX backend.</p>\n</dd>\n</dl>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_backend_aliases\">4.1. Backend Aliases</h3>\n<div class=\"paragraph\">\n<p>Backend aliases are alternative names for AsciiDoc backends.  AsciiDoc\ncomes with two backend aliases: <em>html</em> (aliased to <em>xhtml11</em>) and\n<em>docbook</em> (aliased to <em>docbook45</em>).</p>\n</div>\n<div class=\"paragraph\">\n<p>You can assign (or reassign) backend aliases by setting an AsciiDoc\nattribute named like <code>backend-alias-&lt;alias&gt;</code> to an AsciiDoc backend\nname. For example, the following backend alias attribute definitions\nappear in the <code>[attributes]</code> section of the global <code>asciidoc.conf</code>\nconfiguration file:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>backend-alias-html=xhtml11\nbackend-alias-docbook=docbook45</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X100\">4.2. Backend Plugins</h3>\n<div class=\"paragraph\">\n<p>The asciidoc(1) <code>--backend</code> option is also used to install and manage\nbackend <a href=\"#X101\">plugins</a>.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>A backend plugin is used just like the built-in backends.</p>\n</li>\n<li>\n<p>Backend plugins <a href=\"#X27\">take precedence</a> over built-in backends with\nthe same name.</p>\n</li>\n<li>\n<p>You can use the <code>{asciidoc-confdir}</code> <a href=\"#X60\">intrinsic attribute</a> to\nrefer to the built-in backend configuration file location from\nbackend plugin configuration files.</p>\n</li>\n<li>\n<p>You can use the <code>{backend-confdir}</code> <a href=\"#X60\">intrinsic attribute</a> to\nrefer to the backend plugin configuration file location.</p>\n</li>\n<li>\n<p>By default backends plugins are installed in\n<code>$HOME/.asciidoc/backends/&lt;backend&gt;</code> where <code>&lt;backend&gt;</code> is the\nbackend name.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_docbook\">5. DocBook</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc generates <em>article</em>, <em>book</em> and <em>refentry</em>\n<a href=\"https://docbook.org/\">DocBook</a> documents (corresponding to the\nAsciiDoc <em>article</em>, <em>book</em> and <em>manpage</em> document types).</p>\n</div>\n<div class=\"paragraph\">\n<p>Most Linux distributions come with conversion tools (collectively\ncalled a toolchain) for <a href=\"#X12\">converting DocBook files</a> to\npresentation formats such as Postscript, HTML, PDF, EPUB, DVI,\nPostScript, LaTeX, roff (the native man page format), HTMLHelp,\nJavaHelp and text.  There are also programs that allow you to view\nDocBook files directly, for example\n<a href=\"https://wiki.gnome.org/action/show/Apps/Yelp\">Yelp</a> (the GNOME help\nviewer).</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X12\">5.1. Converting DocBook to other file formats</h3>\n<div class=\"paragraph\">\n<p>DocBook files are validated, parsed and translated various\npresentation file formats using a combination of applications\ncollectively called a DocBook <em>tool chain</em>. The function of a tool\nchain is to read the DocBook markup (produced by AsciiDoc) and\ntransform it to a presentation format (for example HTML, PDF, HTML\nHelp, EPUB, DVI, PostScript, LaTeX).</p>\n</div>\n<div class=\"paragraph\">\n<p>A wide range of user output format requirements coupled with a choice\nof available tools and stylesheets results in many valid tool chain\ncombinations.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X43\">5.2. a2x Toolchain Wrapper</h3>\n<div class=\"paragraph\">\n<p>One of the biggest hurdles for new users is installing, configuring\nand using a DocBook XML toolchain. <code>a2x(1)</code> can help&#8201;&#8212;&#8201;it&#8217;s a\ntoolchain wrapper command that will generate XHTML (chunked and\nunchunked), PDF, EPUB, DVI, PS, LaTeX, man page, HTML Help and text\nfile outputs from an AsciiDoc text file.  <code>a2x(1)</code> does all the grunt\nwork associated with generating and sequencing the toolchain commands\nand managing intermediate and output files.  <code>a2x(1)</code> also optionally\ndeploys admonition and navigation icons and a CSS stylesheet. See the\n<code>a2x(1)</code> man page for more details. In addition to <code>asciidoc(1)</code> you\nalso need <a href=\"#X40\">xsltproc(1)</a>, <a href=\"#X13\">DocBook XSL Stylesheets</a> and\noptionally: <a href=\"#X31\">dblatex</a> or <a href=\"#X14\">FOP</a> (to generate PDF);\n<code>w3m(1)</code> or <code>lynx(1)</code> (to generate text).</p>\n</div>\n<div class=\"paragraph\">\n<p>The following examples generate <code>doc/source-highlight-filter.pdf</code> from\nthe AsciiDoc <code>doc/source-highlight-filter.txt</code> source file. The first\nexample uses <code>dblatex(1)</code> (the default PDF generator) the second\nexample forces FOP to be used:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ a2x -f pdf doc/source-highlight-filter.txt\n$ a2x -f pdf --fop doc/source-highlight-filter.txt</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>See the <code>a2x(1)</code> man page for details.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nUse the <code>--verbose</code> command-line option to view executed\ntoolchain commands.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_html_generation\">5.3. HTML generation</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc produces nicely styled HTML directly without requiring a\nDocBook toolchain but there are also advantages in going the DocBook\nroute:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>HTML from DocBook can optionally include automatically generated\nindexes, tables of contents, footnotes, lists of figures and tables.</p>\n</li>\n<li>\n<p>DocBook toolchains can also (optionally) generate separate (chunked)\nlinked HTML pages for each document section.</p>\n</li>\n<li>\n<p>Toolchain processing performs link and document validity checks.</p>\n</li>\n<li>\n<p>If the DocBook <em>lang</em> attribute is set then things like table of\ncontents, figure and table captions and admonition captions will be\noutput in the specified language (setting the AsciiDoc <em>lang</em>\nattribute sets the DocBook <em>lang</em> attribute).</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>On the other hand, HTML output directly from AsciiDoc is much faster,\nis easily customized and can be used in situations where there is no\nsuitable DocBook toolchain (for example, see the <a href=\"https://asciidoc.org/\">AsciiDoc\nwebsite</a>).</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_pdf_generation\">5.4. PDF generation</h3>\n<div class=\"paragraph\">\n<p>There are two commonly used tools to generate PDFs from DocBook,\n<a href=\"#X31\">dblatex</a> and <a href=\"#X14\">FOP</a>.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">dblatex or FOP?</div>\n<ul>\n<li>\n<p><em>dblatex</em> is easier to install, there&#8217;s zero configuration\nrequired and no Java VM to install&#8201;&#8212;&#8201;it just works out of the box.</p>\n</li>\n<li>\n<p><em>dblatex</em> source code highlighting and numbering is superb.</p>\n</li>\n<li>\n<p><em>dblatex</em> is easier to use as it converts DocBook directly to PDF\nwhereas before using <em>FOP</em> you have to convert DocBook to XML-FO\nusing <a href=\"#X13\">DocBook XSL Stylesheets</a>.</p>\n</li>\n<li>\n<p><em>FOP</em> is more feature complete (for example, callouts are processed\ninside literal layouts) and arguably produces nicer looking output.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_html_help_generation\">5.5. HTML Help generation</h3>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Convert DocBook XML documents to HTML Help compiler source files\nusing <a href=\"#X13\">DocBook XSL Stylesheets</a> and <a href=\"#X40\">xsltproc(1)</a>.</p>\n</li>\n<li>\n<p>Convert the HTML Help source (<code>.hhp</code> and <code>.html</code>) files to HTML Help\n(<code>.chm</code>) files using the <a href=\"#X67\">Microsoft HTML Help Compiler</a>.</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_toolchain_components_summary\">5.6. Toolchain components summary</h3>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">AsciiDoc</dt>\n<dd>\n<p>Converts AsciiDoc (<code>.txt</code>) files to DocBook XML (<code>.xml</code>) files.</p>\n</dd>\n<dt class=\"hdlist1\"><a id=\"X13\"></a><a href=\"https://github.com/docbook/xslt10-stylesheets\">DocBook XSLT Stylesheets</a></dt>\n<dd>\n<p>These are a set of XSL stylesheets containing rules for converting\nDocBook XML documents to HTML, XSL-FO, manpage and HTML Help files.\nThe stylesheets are used in conjunction with an XML parser such as\n<a href=\"#X40\">xsltproc(1)</a>.</p>\n</dd>\n<dt class=\"hdlist1\"><a id=\"X40\"></a><a href=\"http://www.xmlsoft.org\">xsltproc</a></dt>\n<dd>\n<p>An XML parser for applying XSLT stylesheets (in our case the\n<a href=\"#X13\">DocBook XSL Stylesheets</a>) to XML documents.</p>\n</dd>\n<dt class=\"hdlist1\"><a id=\"X31\"></a><a href=\"http://dblatex.sourceforge.net/\">dblatex</a></dt>\n<dd>\n<p>Generates PDF, DVI, PostScript and LaTeX formats directly from\nDocBook source via the intermediate LaTeX typesetting language&#8201;&#8212;&#8201;uses <a href=\"#X13\">DocBook XSL Stylesheets</a>, <a href=\"#X40\">xsltproc(1)</a> and\n<code>latex(1)</code>.</p>\n</dd>\n<dt class=\"hdlist1\"><a id=\"X14\"></a><a href=\"https://xmlgraphics.apache.org/fop/\">FOP</a></dt>\n<dd>\n<p>The Apache Formatting Objects Processor converts XSL-FO (<code>.fo</code>)\nfiles to PDF files.  The XSL-FO files are generated from DocBook\nsource files using <a href=\"#X13\">DocBook XSL Stylesheets</a> and\n<a href=\"#X40\">xsltproc(1)</a>.</p>\n</dd>\n<dt class=\"hdlist1\"><a id=\"X67\"></a>Microsoft Help Compiler</dt>\n<dd>\n<p>The Microsoft HTML Help Compiler (<code>hhc.exe</code>) is a command-line tool\nthat converts HTML Help source files to a single HTML Help (<code>.chm</code>)\nfile. It runs on MS Windows platforms and can be downloaded from\n<a href=\"https://www.microsoft.com/\" class=\"bare\">https://www.microsoft.com/</a>.</p>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_asciidoc_dblatex_configuration_files\">5.7. AsciiDoc dblatex configuration files</h3>\n<div class=\"paragraph\">\n<p>The AsciiDoc distribution <code>./dblatex</code> directory contains\n<code>asciidoc-dblatex.xsl</code> (customized XSL parameter settings) and\n<code>asciidoc-dblatex.sty</code> (customized LaTeX settings). These are examples\nof optional <a href=\"#X31\">dblatex</a> output customization and are used by\n<a href=\"#X43\">a2x(1)</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_asciidoc_docbook_xsl_stylesheets_drivers\">5.8. AsciiDoc DocBook XSL Stylesheets drivers</h3>\n<div class=\"paragraph\">\n<p>You will have noticed that the distributed HTML and HTML Help\ndocumentation files (for example <code>./doc/asciidoc.html</code>) are not the\nplain outputs produced using the default <em>DocBook XSL Stylesheets</em>\nconfiguration.  This is because they have been processed using\ncustomized DocBook XSL Stylesheets along with (in the case of HTML\noutputs) the custom <code>./stylesheets/docbook-xsl.css</code> CSS stylesheet.</p>\n</div>\n<div class=\"paragraph\">\n<p>You&#8217;ll find the customized DocBook XSL drivers along with additional\ndocumentation in the distribution <code>./docbook-xsl</code> directory. The\nexamples that follow are executed from the distribution documentation\n(<code>./doc</code>) directory. These drivers are also used by <a href=\"#X43\">a2x(1)</a>.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><code>common.xsl</code></dt>\n<dd>\n<p>Shared driver parameters.  This file is not used directly but is\nincluded in all the following drivers.</p>\n</dd>\n<dt class=\"hdlist1\"><code>chunked.xsl</code></dt>\n<dd>\n<p>Generate chunked XHTML (separate HTML pages for each document\nsection) in the <code>./doc/chunked</code> directory. For example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ python ../asciidoc.py -b docbook asciidoc.txt\n$ xsltproc --nonet ../docbook-xsl/chunked.xsl asciidoc.xml</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\"><code>epub.xsl</code></dt>\n<dd>\n<p>Used by <a href=\"#X43\">a2x(1)</a> to generate EPUB formatted documents.</p>\n</dd>\n<dt class=\"hdlist1\"><code>fo.xsl</code></dt>\n<dd>\n<p>Generate XSL Formatting Object (<code>.fo</code>) files for subsequent PDF\nfile generation using FOP. For example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ python ../asciidoc.py -b docbook article.txt\n$ xsltproc --nonet ../docbook-xsl/fo.xsl article.xml &gt; article.fo\n$ fop article.fo article.pdf</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\"><code>htmlhelp.xsl</code></dt>\n<dd>\n<p>Generate Microsoft HTML Help source files for the MS HTML Help\nCompiler in the <code>./doc/htmlhelp</code> directory. This example is run on\nMS Windows from a Cygwin shell prompt:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ python ../asciidoc.py -b docbook asciidoc.txt\n$ xsltproc --nonet ../docbook-xsl/htmlhelp.xsl asciidoc.xml\n$ c:/Program\\ Files/HTML\\ Help\\ Workshop/hhc.exe htmlhelp.hhp</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\"><code>manpage.xsl</code></dt>\n<dd>\n<p>Generate a <code>roff(1)</code> format UNIX man page from a DocBook XML\n<em>refentry</em> document. This example generates an <code>asciidoc.1</code> man\npage file:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ python ../asciidoc.py -d manpage -b docbook asciidoc.1.txt\n$ xsltproc --nonet ../docbook-xsl/manpage.xsl asciidoc.1.xml</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\"><code>xhtml.xsl</code></dt>\n<dd>\n<p>Convert a DocBook XML file to a single XHTML file. For example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ python ../asciidoc.py -b docbook asciidoc.txt\n$ xsltproc --nonet ../docbook-xsl/xhtml.xsl asciidoc.xml &gt; asciidoc.html</pre>\n</div>\n</div>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>If you want to see how the complete documentation set is processed\ntake a look at the A-A-P script <code>./doc/main.aap</code>.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_generating_plain_text_files\">6. Generating Plain Text Files</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc does not have a text backend (for most purposes AsciiDoc\nsource text is fine), however you can convert AsciiDoc text files to\nformatted text using the AsciiDoc <a href=\"#X43\">a2x(1)</a> toolchain wrapper\nutility.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X35\">7. HTML5 and XHTML 1.1</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The <em>xhtml11</em> and <em>html5</em> backends embed or link CSS and JavaScript\nfiles in their outputs, there is also a <a href=\"#X99\">themes</a> plugin\nframework.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>If the AsciiDoc <em>linkcss</em> attribute is defined then CSS and\nJavaScript files are linked to the output document, otherwise they\nare embedded (the default behavior).</p>\n</li>\n<li>\n<p>The default locations for CSS and JavaScript files can be changed by\nsetting the AsciiDoc <em>stylesdir</em> and <em>scriptsdir</em> attributes\nrespectively.</p>\n</li>\n<li>\n<p>The default locations for embedded and linked files differ and are\ncalculated at different times&#8201;&#8212;&#8201;embedded files are loaded when\nasciidoc(1) generates the output document, linked files are loaded\nby the browser when the user views the output document.</p>\n</li>\n<li>\n<p>Embedded files are automatically inserted in the output files but\nyou need to manually copy linked CSS and Javascript files from\nAsciiDoc <a href=\"#X27\">configuration directories</a> to the correct location\nrelative to the output document.</p>\n</li>\n</ul>\n</div>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<caption class=\"title\">Table 1. Stylesheet file locations</caption>\n<colgroup>\n<col style=\"width: 33.3333%;\">\n<col style=\"width: 33.3333%;\">\n<col style=\"width: 33.3334%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\"><em>stylesdir</em> attribute</th>\n<th class=\"tableblock halign-left valign-top\">Linked location (<em>linkcss</em> attribute defined)</th>\n<th class=\"tableblock halign-left valign-top\">Embedded location (<em>linkcss</em> attribute undefined)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Undefined (default).</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Same directory as the output document.</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><code>stylesheets</code> subdirectory in the AsciiDoc configuration directory\n(the directory containing the backend conf file).</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Absolute or relative directory name.</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Absolute or relative to the output document.</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Absolute or relative to the AsciiDoc configuration directory (the\ndirectory containing the backend conf file).</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<caption class=\"title\">Table 2. JavaScript file locations</caption>\n<colgroup>\n<col style=\"width: 33.3333%;\">\n<col style=\"width: 33.3333%;\">\n<col style=\"width: 33.3334%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\"><em>scriptsdir</em> attribute</th>\n<th class=\"tableblock halign-left valign-top\">Linked location (<em>linkcss</em> attribute defined)</th>\n<th class=\"tableblock halign-left valign-top\">Embedded location (<em>linkcss</em> attribute undefined)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Undefined (default).</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Same directory as the output document.</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><code>javascripts</code> subdirectory in the AsciiDoc configuration directory\n(the directory containing the backend conf file).</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Absolute or relative directory name.</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Absolute or relative to the output document.</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Absolute or relative to the AsciiDoc configuration directory (the\ndirectory containing the backend conf file).</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"sect2\">\n<h3 id=\"X99\">7.1. Themes</h3>\n<div class=\"paragraph\">\n<p>The AsciiDoc <em>theme</em> attribute is used to select an alternative CSS\nstylesheet and to optionally include additional JavaScript code.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Theme files reside in an AsciiDoc <a href=\"#X27\">configuration directory</a>\nnamed <code>themes/&lt;theme&gt;/</code> (where <code>&lt;theme&gt;</code> is the the theme name set\nby the <em>theme</em> attribute). asciidoc(1) sets the <em>themedir</em> attribute\nto the theme directory path name.</p>\n</li>\n<li>\n<p>The <em>theme</em> attribute can also be set using the asciidoc(1)\n<code>--theme</code> option, the <code>--theme</code> option can also be used to manage\ntheme <a href=\"#X101\">plugins</a>.</p>\n</li>\n<li>\n<p>AsciiDoc ships with two themes: <em>flask</em> and <em>volnitsky</em>.</p>\n</li>\n<li>\n<p>The <code>&lt;theme&gt;.css</code> file replaces the default <code>asciidoc.css</code> CSS file.</p>\n</li>\n<li>\n<p>The <code>&lt;theme&gt;.js</code> file is included in addition to the default\n<code>asciidoc.js</code> JavaScript file.</p>\n</li>\n<li>\n<p>If the <a href=\"#X66\">data-uri</a> attribute is defined then icons are loaded\nfrom the theme <code>icons</code> sub-directory if it exists (i.e.  the\n<em>iconsdir</em> attribute is set to theme <code>icons</code> sub-directory path).</p>\n</li>\n<li>\n<p>Embedded theme files are automatically inserted in the output files\nbut you need to manually copy linked CSS and Javascript files to the\nlocation of the output documents.</p>\n</li>\n<li>\n<p>Linked CSS and JavaScript theme files are linked to the same linked\nlocations as <a href=\"#X35\">other CSS and JavaScript files</a>.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>For example, the command-line option <code>--theme foo</code> (or <code>--attribute\ntheme=foo</code>) will cause asciidoc(1) to search <a href=\"#X27\">configuration\nfile locations 1, 2 and 3</a> for a sub-directory called <code>themes/foo</code>\ncontaining the stylesheet <code>foo.css</code> and optionally a JavaScript file\nname <code>foo.js</code>.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_document_structure\">8. Document Structure</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>An AsciiDoc document consists of a series of <a href=\"#X8\">block elements</a>\nstarting with an optional document Header, followed by an optional\nPreamble, followed by zero or more document Sections.</p>\n</div>\n<div class=\"paragraph\">\n<p>Almost any combination of zero or more elements constitutes a valid\nAsciiDoc document: documents can range from a single sentence to a\nmulti-part book.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_block_elements\">8.1. Block Elements</h3>\n<div class=\"paragraph\">\n<p>Block elements consist of one or more lines of text and may contain\nother block elements.</p>\n</div>\n<div class=\"paragraph\">\n<p>The AsciiDoc block structure can be informally summarized as follows\n<sup class=\"footnote\">[<a id=\"_footnoteref_1\" class=\"footnote\" href=\"#_footnotedef_1\" title=\"View footnote.\">1</a>]</sup>:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Document      ::= (Header?,Preamble?,Section*)\nHeader        ::= (Title,(AuthorInfo,RevisionInfo?)?)\nAuthorInfo    ::= (FirstName,(MiddleName?,LastName)?,EmailAddress?)\nRevisionInfo  ::= (RevisionNumber?,RevisionDate,RevisionRemark?)\nPreamble      ::= (SectionBody)\nSection       ::= (Title,SectionBody?,(Section)*)\nSectionBody   ::= ((BlockTitle?,Block)|BlockMacro)+\nBlock         ::= (Paragraph|DelimitedBlock|List|Table)\nList          ::= (BulletedList|NumberedList|LabeledList|CalloutList)\nBulletedList  ::= (ListItem)+\nNumberedList  ::= (ListItem)+\nCalloutList   ::= (ListItem)+\nLabeledList   ::= (ListEntry)+\nListEntry     ::= (ListLabel,ListItem)\nListLabel     ::= (ListTerm+)\nListItem      ::= (ItemText,(List|ListParagraph|ListContinuation)*)</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Where:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><em>?</em> implies zero or one occurrence, <em>+</em> implies one or more\noccurrences, <em>*</em> implies zero or more occurrences.</p>\n</li>\n<li>\n<p>All block elements are separated by line boundaries.</p>\n</li>\n<li>\n<p><code>BlockId</code>, <code>AttributeEntry</code> and <code>AttributeList</code> block elements (not\nshown) can occur almost anywhere.</p>\n</li>\n<li>\n<p>There are a number of document type and backend specific\nrestrictions imposed on the block syntax.</p>\n</li>\n<li>\n<p>The following elements cannot contain blank lines: Header, Title,\nParagraph, ItemText.</p>\n</li>\n<li>\n<p>A ListParagraph is a Paragraph with its <em>listelement</em> option set.</p>\n</li>\n<li>\n<p>A ListContinuation is a <a href=\"#X15\">list continuation element</a>.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X95\">8.2. Header</h3>\n<div class=\"paragraph\">\n<p>The Header contains document meta-data, typically title plus optional\nauthorship and revision information:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The Header is optional, but if it is used it must start with a\ndocument <a href=\"#X17\">title</a>.</p>\n</li>\n<li>\n<p>Optional Author and Revision information immediately follows the\nheader title.</p>\n</li>\n<li>\n<p>The document header must be separated from the remainder of the\ndocument by one or more blank lines and cannot contain blank lines.</p>\n</li>\n<li>\n<p>The header can include comments.</p>\n</li>\n<li>\n<p>The header can include <a href=\"#X18\">attribute entries</a>, typically\n<em>doctype</em>, <em>lang</em>, <em>encoding</em>, <em>icons</em>, <em>data-uri</em>, <em>toc</em>,\n<em>numbered</em>.</p>\n</li>\n<li>\n<p>Header attributes are overridden by command-line attributes.</p>\n</li>\n<li>\n<p>If the header contains non-UTF-8 characters then the <em>encoding</em> must\nprecede the header (either in the document or on the command-line).</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Here&#8217;s an example AsciiDoc document header:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Writing Documentation using AsciiDoc\n====================================\nJoe Bloggs &lt;jbloggs@mymail.com&gt;\nv2.0, February 2003:\nRewritten for version 2 release.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The author information line contains the author&#8217;s name optionally\nfollowed by the author&#8217;s email address. The author&#8217;s name is formatted\nlike:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>firstname[ [middlename ]lastname][ &lt;email&gt;]]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>i.e. a first name followed by optional middle and last names followed\nby an email address in that order.  Multi-word first, middle and last\nnames can be entered using the underscore as a word separator.  The\nemail address comes last and must be enclosed in angle &lt;&gt; brackets.\nHere a some examples of author information lines:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Joe Bloggs &lt;jbloggs@mymail.com&gt;\nJoe Bloggs\nVincent Willem van_Gogh</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If the author line does not match the above specification then the\nentire author line is treated as the first name.</p>\n</div>\n<div class=\"paragraph\">\n<p>The optional revision information line follows the author information\nline. The revision information can be one of two formats:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>An optional document revision number followed by an optional\nrevision date followed by an optional revision remark:</p>\n<div class=\"openblock\">\n<div class=\"content\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>If the revision number is specified it must be followed by a\ncomma.</p>\n</li>\n<li>\n<p>The revision number must contain at least one numeric character.</p>\n</li>\n<li>\n<p>Any non-numeric characters preceding the first numeric character\nwill be dropped.</p>\n</li>\n<li>\n<p>If a revision remark is specified it must be preceded by a colon.\nThe revision remark extends from the colon up to the next blank\nline, attribute entry or comment and is subject to normal text\nsubstitutions.</p>\n</li>\n<li>\n<p>If a revision number or remark has been set but the revision date\nhas not been set then the revision date is set to the value of the\n<em>docdate</em> attribute.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>v2.0, February 2003\nFebruary 2003\nv2.0,\nv2.0, February 2003: Rewritten for version 2 release.\nFebruary 2003: Rewritten for version 2 release.\nv2.0,: Rewritten for version 2 release.\n:Rewritten for version 2 release.</pre>\n</div>\n</div>\n</div>\n</div>\n</li>\n<li>\n<p>The revision information line can also be an RCS/CVS/SVN $Id$\nmarker:</p>\n<div class=\"openblock\">\n<div class=\"content\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>AsciiDoc extracts the <em>revnumber</em>, <em>revdate</em>, and <em>author</em>\nattributes from the $Id$ revision marker and displays them in the\ndocument header.</p>\n</li>\n<li>\n<p>If an $Id$ revision marker is used the header author line can be\nomitted.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$Id: mydoc.txt,v 1.5 2009/05/17 17:58:44 jbloggs Exp $</pre>\n</div>\n</div>\n</div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>You can override or set header parameters by passing <em>revnumber</em>,\n<em>revremark</em>, <em>revdate</em>, <em>email</em>, <em>author</em>, <em>authorinitials</em>,\n<em>firstname</em> and <em>lastname</em> attributes using the asciidoc(1) <code>-a</code>\n(<code>--attribute</code>) command-line option. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a revdate=2004/07/27 article.txt</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Attribute entries can also be added to the header for substitution in\nthe header template with <a href=\"#X18\">Attribute Entry</a> elements.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <em>title</em> element in HTML outputs is set to the AsciiDoc document\ntitle, you can set it to a different value by including a <em>title</em>\nattribute entry in the document header.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X87\">8.2.1. Additional document header information</h4>\n<div class=\"paragraph\">\n<p>AsciiDoc has two mechanisms for optionally including additional\nmeta-data in the header of the output document:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><em>docinfo</em> configuration file sections</dt>\n<dd>\n<p>If a <a href=\"#X7\">configuration file</a> section named <em>docinfo</em> has been loaded\nthen it will be included in the document header. Typically the\n<em>docinfo</em> section name will be prefixed with a <em>+</em> character so that it\nis appended to (rather than replace) other <em>docinfo</em> sections.</p>\n</dd>\n<dt class=\"hdlist1\"><em>docinfo</em> files</dt>\n<dd>\n<p>Two docinfo files are recognized: one named <code>docinfo</code> and a second\nnamed like the AsciiDoc source file with a <code>-docinfo</code> suffix.  For\nexample, if the source document is called <code>mydoc.txt</code> then the\ndocument information files would be <code>docinfo.xml</code> and\n<code>mydoc-docinfo.xml</code> (for DocBook outputs) and <code>docinfo.html</code> and\n<code>mydoc-docinfo.html</code> (for HTML outputs).  The <a href=\"#X97\">docinfo, docinfo1\nand docinfo2</a> attributes control which docinfo files are included in\nthe output files.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>The contents docinfo templates and files is dependent on the type of\noutput:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">HTML</dt>\n<dd>\n<p>Valid <em>head</em> child elements. Typically <em>style</em> and <em>script</em> elements\nfor CSS and JavaScript inclusion.</p>\n</dd>\n<dt class=\"hdlist1\">DocBook</dt>\n<dd>\n<p>Valid <em>articleinfo</em> or <em>bookinfo</em> child elements.  DocBook defines\nnumerous elements for document meta-data, for example: copyrights,\ndocument history and authorship information.  See the DocBook\n<code>./doc/article-docinfo.xml</code> example that comes with the AsciiDoc\ndistribution.  The rendering of meta-data elements (or not) is\nDocBook processor dependent.</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X86\">8.3. Preamble</h3>\n<div class=\"paragraph\">\n<p>The Preamble is an optional untitled section body between the document\nHeader and the first Section title.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_sections\">8.4. Sections</h3>\n<div class=\"paragraph\">\n<p>In addition to the document title (level 0), AsciiDoc supports four\nsection levels: 1 (top) to 4 (bottom).  Section levels are delimited\nby section <a href=\"#X17\">titles</a>.  Sections are translated using\nconfiguration file <a href=\"#X93\">section markup templates</a>. AsciiDoc\ngenerates the following <a href=\"#X60\">intrinsic attributes</a> specifically for\nuse in section markup templates:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">level</dt>\n<dd>\n<p>The <code>level</code> attribute is the section level number, it is normally just\nthe <a href=\"#X17\">title</a> level number (1..4). However, if the <code>leveloffset</code>\nattribute is defined it will be added to the <code>level</code> attribute. The\n<code>leveloffset</code> attribute is useful for <a href=\"#X90\">combining documents</a>.</p>\n</dd>\n<dt class=\"hdlist1\">sectnum</dt>\n<dd>\n<p>The <code>-n</code> (<code>--section-numbers</code>) command-line option generates the\n<code>sectnum</code> (section number) attribute.  The <code>sectnum</code> attribute is used\nfor section numbers in HTML outputs (DocBook section numbering are\nhandled automatically by the DocBook toolchain commands).</p>\n</dd>\n</dl>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X93\">8.4.1. Section markup templates</h4>\n<div class=\"paragraph\">\n<p>Section markup templates specify output markup and are defined in\nAsciiDoc configuration files.  Section markup template names are\nderived as follows (in order of precedence):</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>From the title&#8217;s first positional attribute or <em>template</em>\nattribute. For example, the following three section titles are\nfunctionally equivalent:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[[terms]]\n[glossary]\nList of Terms\n-------------\n\n[\"glossary\",id=\"terms\"]\nList of Terms\n-------------\n\n[template=\"glossary\",id=\"terms\"]\nList of Terms\n-------------</pre>\n</div>\n</div>\n</li>\n<li>\n<p>When the title text matches a configuration file\n<a href=\"#X16\"><code>[specialsections]</code></a> entry.</p>\n</li>\n<li>\n<p>If neither of the above the default <code>sect&lt;level&gt;</code> template is used\n(where <code>&lt;level&gt;</code> is a number from 1 to 4).</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>In addition to the normal section template names (<em>sect1</em>, <em>sect2</em>,\n<em>sect3</em>, <em>sect4</em>) AsciiDoc has the following templates for\nfrontmatter, backmatter and other special sections: <em>abstract</em>,\n<em>preface</em>, <em>colophon</em>, <em>dedication</em>, <em>glossary</em>, <em>bibliography</em>,\n<em>synopsis</em>, <em>appendix</em>, <em>index</em>.  These special section templates\ngenerate the corresponding Docbook elements; for HTML outputs they\ndefault to the <em>sect1</em> section template.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_section_ids\">8.4.2. Section IDs</h4>\n<div class=\"paragraph\">\n<p>If no explicit section ID is specified an ID will be synthesised from\nthe section title.  The primary purpose of this feature is to ensure\npersistence of table of contents links (permalinks): the missing\nsection IDs are generated dynamically by the JavaScript TOC generator\n<strong>after</strong> the page is loaded. If you link to a dynamically generated TOC\naddress the page will load but the browser will ignore the (as yet\nungenerated) section ID.</p>\n</div>\n<div class=\"paragraph\">\n<p>The IDs are generated by the following algorithm:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Replace all non-alphanumeric title characters with underscores.</p>\n</li>\n<li>\n<p>Strip leading or trailing underscores.</p>\n</li>\n<li>\n<p>Convert to lowercase.</p>\n</li>\n<li>\n<p>Prepend the <code>idprefix</code> attribute (so there&#8217;s no possibility of name\nclashes with existing document IDs). Prepend an underscore if the\n<code>idprefix</code> attribute is not defined.</p>\n</li>\n<li>\n<p>A numbered suffix (<code>_2</code>, <code>_3</code> &#8230;&#8203;) is added if a same named\nauto-generated section ID exists.</p>\n</li>\n<li>\n<p>If the <code>ascii-ids</code> attribute is defined then non-ASCII characters\nare replaced with ASCII equivalents. This attribute should be\n<strong>should be avoided</strong> if possible as its sole purpose is to accommodate\ndeficient downstream applications that cannot process non-ASCII ID\nattributes. If available, it will use the\n<a href=\"https://pypi.org/project/trans/\">trans python module</a>, otherwise it\nwill fallback to using NFKD algorithm, which cannot handle all\nunicode characters. For example, <em>Wstęp żółtej łąki</em> will be\ntranslated to <em>Wstep zoltej laki</em> under trans and <em>Wstep zotej aki</em>\nunder NFKD.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Example: the title <em>Jim&#8217;s House</em> would generate the ID <code>_jim_s_house</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Section ID synthesis can be disabled by undefining the <code>sectids</code>\nattribute.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X16\">8.4.3. Special Section Titles</h4>\n<div class=\"paragraph\">\n<p>AsciiDoc has a mechanism for mapping predefined section titles\nauto-magically to specific markup templates. For example a title\n<em>Appendix A: Code Reference</em> will automatically use the <em>appendix</em>\n<a href=\"#X93\">section markup template</a>. The mappings from title to template\nname are specified in <code>[specialsections]</code> sections in the Asciidoc\nlanguage configuration files (<code>lang-*.conf</code>).  Section entries are\nformatted like:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>&lt;title&gt;=&lt;template&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><code>&lt;title&gt;</code> is a Python regular expression and <code>&lt;template&gt;</code> is the name\nof a configuration file markup template section. If the <code>&lt;title&gt;</code>\nmatches an AsciiDoc document section title then the backend output is\nmarked up using the <code>&lt;template&gt;</code> markup template (instead of the\ndefault <code>sect&lt;level&gt;</code> section template). The <code>{title}</code> attribute value\nis set to the value of the matched regular expression group named\n<em>title</em>, if there is no <em>title</em> group <code>{title}</code> defaults to the whole\nof the AsciiDoc section title. If <code>&lt;template&gt;</code> is blank then any\nexisting entry with the same <code>&lt;title&gt;</code> will be deleted.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Special section titles vs. explicit template names</div>\n<div class=\"paragraph\">\n<p>AsciiDoc has two mechanisms for specifying non-default section markup\ntemplates: you can specify the template name explicitly (using the\n<em>template</em> attribute) or indirectly (using <em>special section titles</em>).\nSpecifying a <a href=\"#X93\">section template</a> attribute explicitly is\npreferred.  Auto-magical <em>special section titles</em> have the following\ndrawbacks:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>They are non-obvious, you have to know the exact matching\ntitle for each special section on a language by language basis.</p>\n</li>\n<li>\n<p>Section titles are predefined and can only be customised with a\nconfiguration change.</p>\n</li>\n<li>\n<p>The implementation is complicated by multiple languages: every\nspecial section title has to be defined for each language (in each\nof the <code>lang-*.conf</code> files).</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Specifying special section template names explicitly does add more\nnoise to the source document (the <em>template</em> attribute declaration),\nbut the intention is obvious and the syntax is consistent with other\nAsciiDoc elements c.f.  bibliographic, Q&amp;A and glossary lists.</p>\n</div>\n<div class=\"paragraph\">\n<p>Special section titles have been deprecated but are retained for\nbackward compatibility.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_inline_elements\">8.5. Inline Elements</h3>\n<div class=\"paragraph\">\n<p><a href=\"#X34\">Inline document elements</a> are used to format text and to\nperform various types of text substitution. Inline elements and inline\nelement syntax is defined in the asciidoc(1) configuration files.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here is a list of AsciiDoc inline elements in the (default) order in\nwhich they are processed:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Special characters</dt>\n<dd>\n<p>These character sequences escape special characters used by\nthe backend markup (typically <code>&lt;</code>, <code>&gt;</code>, and <code>&amp;</code> characters).\nSee <code>[specialcharacters]</code> configuration file sections.</p>\n</dd>\n<dt class=\"hdlist1\">Quotes</dt>\n<dd>\n<p>Elements that markup words and phrases; usually for character\nformatting. See <code>[quotes]</code> configuration file sections.</p>\n</dd>\n<dt class=\"hdlist1\">Special Words</dt>\n<dd>\n<p>Word or word phrase patterns singled out for markup without\nthe need for further annotation.  See <code>[specialwords]</code>\nconfiguration file sections.</p>\n</dd>\n<dt class=\"hdlist1\">Replacements</dt>\n<dd>\n<p>Each replacement defines a word or word phrase pattern to\nsearch for along with corresponding replacement text. See\n<code>[replacements]</code> configuration file sections.</p>\n</dd>\n<dt class=\"hdlist1\">Attribute references</dt>\n<dd>\n<p>Document attribute names enclosed in braces are replaced by\nthe corresponding attribute value.</p>\n</dd>\n<dt class=\"hdlist1\">Inline Macros</dt>\n<dd>\n<p>Inline macros are replaced by the contents of parametrized\nconfiguration file sections.</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_document_processing\">9. Document Processing</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The AsciiDoc source document is read and processed as follows:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>The document <em>Header</em> is parsed, header parameter values are\nsubstituted into the configuration file <code>[header]</code> template section\nwhich is then written to the output file.</p>\n</li>\n<li>\n<p>Each document <em>Section</em> is processed and its constituent elements\ntranslated to the output file.</p>\n</li>\n<li>\n<p>The configuration file <code>[footer]</code> template section is substituted\nand written to the output file.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>When a block element is encountered asciidoc(1) determines the type of\nblock by checking in the following order (first to last): (section)\nTitles, BlockMacros, Lists, DelimitedBlocks, Tables, AttributeEntrys,\nAttributeLists, BlockTitles, Paragraphs.</p>\n</div>\n<div class=\"paragraph\">\n<p>The default paragraph definition <code>[paradef-default]</code> is last element\nto be checked.</p>\n</div>\n<div class=\"paragraph\">\n<p>Knowing the parsing order will help you devise unambiguous macro, list\nand block syntax rules.</p>\n</div>\n<div class=\"paragraph\">\n<p>Inline substitutions within block elements are performed in the\nfollowing default order:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Special characters</p>\n</li>\n<li>\n<p>Quotes</p>\n</li>\n<li>\n<p>Special words</p>\n</li>\n<li>\n<p>Replacements</p>\n</li>\n<li>\n<p>Attributes</p>\n</li>\n<li>\n<p>Inline Macros</p>\n</li>\n<li>\n<p>Replacements2</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>The substitutions and substitution order performed on\nTitle, Paragraph and DelimitedBlock elements is determined by\nconfiguration file parameters.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_text_formatting\">10. Text Formatting</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"X51\">10.1. Quoted Text</h3>\n<div class=\"paragraph\">\n<p>Words and phrases can be formatted by enclosing inline text with\nquote characters:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><em>Emphasized text</em></dt>\n<dd>\n<p>Word phrases 'enclosed in single quote characters' (acute\naccents) or _underline characters_ are emphasized.</p>\n</dd>\n<dt class=\"hdlist1\"><strong>Strong text</strong></dt>\n<dd>\n<p>Word phrases *enclosed in asterisk characters* are rendered\nin a strong font (usually bold).</p>\n</dd>\n<dt class=\"hdlist1\"><a id=\"X81\"></a><code>Monospaced text</code></dt>\n<dd>\n<p>Word phrases +enclosed in plus characters+ are rendered in a\nmonospaced font. Word phrases `enclosed in backtick\ncharacters` (grave accents) are also rendered in a monospaced\nfont but in this case the enclosed text is rendered literally\nand is not subject to further expansion (see <a href=\"#X80\">inline\nliteral passthrough</a>).</p>\n</dd>\n<dt class=\"hdlist1\">&#8216;Single quoted text&#8217;</dt>\n<dd>\n<p>Phrases enclosed with a `single grave accent to the left and\na single acute accent to the right' are rendered in single\nquotation marks.</p>\n</dd>\n<dt class=\"hdlist1\">&#8220;Double quoted text&#8221;</dt>\n<dd>\n<p>Phrases enclosed with ``two grave accents to the left and\ntwo acute accents to the right'' are rendered in quotation\nmarks.</p>\n</dd>\n<dt class=\"hdlist1\"><mark>Unquoted text</mark></dt>\n<dd>\n<p>Placing #hashes around text# does nothing, it is a mechanism\nto allow inline attributes to be applied to otherwise\nunformatted text.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>New quote types can be defined by editing asciidoc(1) configuration\nfiles. See the <a href=\"#X7\">Configuration Files</a> section for details.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Quoted text behavior</div>\n<ul>\n<li>\n<p>Quoting cannot be overlapped.</p>\n</li>\n<li>\n<p>Different quoting types can be nested.</p>\n</li>\n<li>\n<p>To suppress quoted text formatting place a backslash character\nimmediately in front of the leading quote character(s). In the case\nof ambiguity between escaped and non-escaped text you will need to\nescape both leading and trailing quotes, in the case of\nmulti-character quotes you may even need to escape individual\ncharacters.</p>\n</li>\n</ul>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X96\">10.1.1. Quoted text attributes</h4>\n<div class=\"paragraph\">\n<p>Quoted text can be prefixed with an <a href=\"#X21\">attribute list</a>.  The first\npositional attribute (<em>role</em> attribute) is translated by AsciiDoc to\nan HTML <em>span</em> element <em>class</em> attribute or a DocBook <em>phrase</em> element\n<em>role</em> attribute.</p>\n</div>\n<div class=\"paragraph\">\n<p>DocBook XSL Stylesheets translate DocBook <em>phrase</em> elements with\n<em>role</em> attributes to corresponding HTML <em>span</em> elements with the same\n<em>class</em> attributes; CSS can then be used\n<a href=\"http://www.sagehill.net/docbookxsl/UsingCSS.html\">to style the\ngenerated HTML</a>.  Thus CSS styling can be applied to both DocBook and\nAsciiDoc generated HTML outputs.  You can also specify multiple class\nnames separated by spaces.</p>\n</div>\n<div class=\"paragraph\">\n<p>CSS rules for text color, text background color, text size and text\ndecorators are included in the distributed AsciiDoc CSS files and are\nused in conjunction with AsciiDoc <em>xhtml11</em>, <em>html5</em> and <em>docbook</em>\noutputs. The CSS class names are:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><em>&lt;color&gt;</em> (text foreground color).</p>\n</li>\n<li>\n<p><em>&lt;color&gt;-background</em> (text background color).</p>\n</li>\n<li>\n<p><em>big</em> and <em>small</em> (text size).</p>\n</li>\n<li>\n<p><em>underline</em>, <em>overline</em> and <em>line-through</em> (strike through) text\ndecorators.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Where <em>&lt;color&gt;</em> can be any of the\n<a href=\"https://en.wikipedia.org/wiki/Web_colors#HTML_color_names\">sixteen HTML\ncolor names</a>.  Examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[red]#Obvious# and [big red yellow-background]*very obvious*.</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[underline]#Underline text#, [overline]#overline text# and\n[blue line-through]*bold blue and line-through*.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>is rendered as:</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"red\">Obvious</span> and <strong class=\"big red yellow-background\">very obvious</strong>.</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"underline\">Underline text</span>, <span class=\"overline\">overline text</span> and\n<strong class=\"bold blue line-through\">bold blue and line-through</strong>.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nColor and text decorator attributes are rendered for XHTML and\nHTML 5 outputs using CSS stylesheets.  The mechanism to implement\ncolor and text decorator attributes is provided for DocBook toolchains\nvia the DocBook <em>phrase</em> element <em>role</em> attribute, but the actual\nrendering is toolchain specific and is not part of the AsciiDoc\ndistribution.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X52\">10.1.2. Constrained and Unconstrained Quotes</h4>\n<div class=\"paragraph\">\n<p>There are actually two types of quotes:</p>\n</div>\n<div class=\"sect4\">\n<h5 id=\"_constrained_quotes\">Constrained quotes</h5>\n<div class=\"paragraph\">\n<p>Quoted must be bounded by white space or commonly adjoining\npunctuation characters. These are the most commonly used type of\nquote.</p>\n</div>\n</div>\n<div class=\"sect4\">\n<h5 id=\"_unconstrained_quotes\">Unconstrained quotes</h5>\n<div class=\"paragraph\">\n<p>Unconstrained quotes have no boundary constraints and can be placed\nanywhere within inline text. For consistency and to make them easier\nto remember unconstrained quotes are double-ups of the <code>_</code>, <code>*</code>, <code>+</code>\nand <code>#</code> constrained quotes:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>__unconstrained emphasized text__\n**unconstrained strong text**\n++unconstrained monospaced text++\n##unconstrained unquoted text##</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The following example emboldens the letter F:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>**F**ile Open...</pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_superscripts_and_subscripts\">10.2. Superscripts and Subscripts</h3>\n<div class=\"paragraph\">\n<p>Put \\^carets on either^ side of the text to be superscripted, put\n\\~tildes on either side~ of text to be subscripted.  For example, the\nfollowing line:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>e^&amp;#960;i^+1 = 0. H~2~O and x^10^. Some ^super text^\nand ~some sub text~</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Is rendered like:</p>\n</div>\n<div class=\"paragraph\">\n<p>e<sup>&#960;i</sup>+1 = 0. H<sub>2</sub>O and x<sup>10</sup>. Some ^super text^\nand ~some sub text~</p>\n</div>\n<div class=\"paragraph\">\n<p>Superscripts and subscripts are implemented as <a href=\"#X52\">unconstrained\nquotes</a> and they can be escaped with a leading backslash and prefixed\nwith with an attribute list.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_line_breaks\">10.3. Line Breaks</h3>\n<div class=\"paragraph\">\n<p>A plus character preceded by at least one space character at the end\nof a non-blank line forces a line break. It generates a line break\n(<code>br</code>) tag for HTML outputs and a custom XML <code>asciidoc-br</code> processing\ninstruction for DocBook outputs. The <code>asciidoc-br</code> processing\ninstruction is handled by <a href=\"#X43\">a2x(1)</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_page_breaks\">10.4. Page Breaks</h3>\n<div class=\"paragraph\">\n<p>A line of three or more less-than (<code>&lt;&lt;&lt;</code>) characters will generate a\nhard page break in DocBook and printed HTML outputs.  It uses the CSS\n<code>page-break-after</code> property for HTML outputs and a custom XML\n<code>asciidoc-pagebreak</code> processing instruction for DocBook outputs. The\n<code>asciidoc-pagebreak</code> processing instruction is handled by\n<a href=\"#X43\">a2x(1)</a>. Hard page breaks are sometimes handy but as a general\nrule you should let your page processor generate page breaks for you.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_rulers\">10.5. Rulers</h3>\n<div class=\"paragraph\">\n<p>A line of three or more apostrophe characters will generate a ruler\nline.  It generates a ruler (<code>hr</code>) tag for HTML outputs and a custom\nXML <code>asciidoc-hr</code> processing instruction for DocBook outputs. The\n<code>asciidoc-hr</code> processing instruction is handled by <a href=\"#X43\">a2x(1)</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_tabs\">10.6. Tabs</h3>\n<div class=\"paragraph\">\n<p>By default tab characters input files will translated to 8 spaces. Tab\nexpansion is set with the <em>tabsize</em> entry in the configuration file\n<code>[miscellaneous]</code> section and can be overridden in included files by\nsetting a <em>tabsize</em> attribute in the <code>include</code> macro&#8217;s attribute list.\nFor example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>include::addendum.txt[tabsize=2]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The tab size can also be set using the attribute command-line option,\nfor example <code>--attribute tabsize=4</code></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_replacements\">10.7. Replacements</h3>\n<div class=\"paragraph\">\n<p>The following replacements are defined in the default AsciiDoc\nconfiguration:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>(C) copyright, (TM) trademark, (R) registered trademark,\n-- em dash, ... ellipsis, -&gt; right arrow, &lt;- left arrow, =&gt; right\ndouble arrow, &lt;= left double arrow.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which are rendered as:</p>\n</div>\n<div class=\"paragraph\">\n<p>&#169; copyright, &#8482; trademark, &#174; registered trademark,&#8201;&#8212;&#8201;em dash, &#8230;&#8203; ellipsis, &#8594; right arrow, &#8592; left arrow, &#8658; right\ndouble arrow, &#8656; left double arrow.</p>\n</div>\n<div class=\"paragraph\">\n<p>You can also include arbitrary entity references in the AsciiDoc\nsource. Examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>&amp;#x278a; &amp;#182;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>renders:</p>\n</div>\n<div class=\"paragraph\">\n<p>&#x278a; &#182;</p>\n</div>\n<div class=\"paragraph\">\n<p>To render a replacement literally escape it with a leading back-slash.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <a href=\"#X7\">Configuration Files</a> section explains how to configure your\nown replacements.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_special_words\">10.8. Special Words</h3>\n<div class=\"paragraph\">\n<p>Words defined in <code>[specialwords]</code> configuration file sections are\nautomatically marked up without having to be explicitly notated.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <a href=\"#X7\">Configuration Files</a> section explains how to add and replace\nspecial words.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X17\">11. Titles</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Document and section titles can be in either of two formats:</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_two_line_titles\">11.1. Two line titles</h3>\n<div class=\"paragraph\">\n<p>A two line title consists of a title line, starting hard against the\nleft margin, and an underline. Section underlines consist a repeated\ncharacter pairs spanning the width of the preceding title (give or\ntake up to two characters):</p>\n</div>\n<div class=\"paragraph\">\n<p>The default title underlines for each of the document levels are:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Level 0 (top level):     ======================\nLevel 1:                 ----------------------\nLevel 2:                 ~~~~~~~~~~~~~~~~~~~~~~\nLevel 3:                 ^^^^^^^^^^^^^^^^^^^^^^\nLevel 4 (bottom level):  ++++++++++++++++++++++</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Level One Section Title\n-----------------------</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Level 2 Subsection Title\n~~~~~~~~~~~~~~~~~~~~~~~~</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X46\">11.2. One line titles</h3>\n<div class=\"paragraph\">\n<p>One line titles consist of a single line delimited on either side by\none or more equals characters (the number of equals characters\ncorresponds to the section level minus one).  Here are some examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>= Document Title (level 0) =\n== Section title (level 1) ==\n=== Section title (level 2) ===\n==== Section title (level 3) ====\n===== Section title (level 4) =====</pre>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>One or more spaces must fall between the title and the delimiters.</p>\n</li>\n<li>\n<p>The trailing title delimiter is optional.</p>\n</li>\n<li>\n<p>The one-line title syntax can be changed by editing the\nconfiguration file <code>[titles]</code> section <code>sect0</code>&#8230;&#8203;<code>sect4</code> entries.</p>\n</li>\n</ul>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_floating_titles\">11.3. Floating titles</h3>\n<div class=\"paragraph\">\n<p>Setting the title&#8217;s first positional attribute or <em>style</em> attribute to\n<em>float</em> generates a free-floating title. A free-floating title is\nrendered just like a normal section title but is not formally\nassociated with a text body and is not part of the regular section\nhierarchy so the normal ordering rules do not apply. Floating titles\ncan also be used in contexts where section titles are illegal: for\nexample sidebar and admonition blocks.  Example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[float]\nThe second day\n~~~~~~~~~~~~~~</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Floating titles do not appear in a document&#8217;s table of contents.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X42\">12. Block Titles</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>A <em>BlockTitle</em> element is a single line beginning with a period\nfollowed by the title text. A BlockTitle is applied to the immediately\nfollowing Paragraph, DelimitedBlock, List, Table or BlockMacro. For\nexample:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>.Notes\n- Note 1.\n- Note 2.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>is rendered as:</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Notes</div>\n<ul>\n<li>\n<p>Note 1.</p>\n</li>\n<li>\n<p>Note 2.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X41\">13. BlockId Element</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>A <em>BlockId</em> is a single line block element containing a unique\nidentifier enclosed in double square brackets. It is used to assign an\nidentifier to the ensuing block element. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[[chapter-titles]]\nChapter titles can be ...</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The preceding example identifies the ensuing paragraph so it can be\nreferenced from other locations, for example with\n<code>&lt;&lt;chapter-titles,chapter titles&gt;&gt;</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p><em>BlockId</em> elements can be applied to Title, Paragraph, List,\nDelimitedBlock, Table and BlockMacro elements.  The BlockId element\nsets the <code>{id}</code> attribute for substitution in the subsequent block&#8217;s\nmarkup template. If a second positional argument is supplied it sets\nthe <code>{reftext}</code> attribute which is used to set the DocBook <code>xreflabel</code>\nattribute.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <em>BlockId</em> element has the same syntax and serves the same function\nto the <a href=\"#X30\">anchor inline macro</a>.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X79\">14. AttributeList Element</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>An <em>AttributeList</em> block element is an <a href=\"#X21\">attribute list</a> on a\nline by itself:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><em>AttributeList</em> attributes are only applied to the immediately\nfollowing block element&#8201;&#8212;&#8201;the attributes are made available to the\nblock&#8217;s markup template.</p>\n</li>\n<li>\n<p>Multiple contiguous <em>AttributeList</em> elements are additively combined\nin the order they appear.</p>\n</li>\n<li>\n<p>The first positional attribute in the list is often used to specify\nthe ensuing element&#8217;s <a href=\"#X23\">style</a>.</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_attribute_value_substitution\">14.1. Attribute value substitution</h3>\n<div class=\"paragraph\">\n<p>By default, only substitutions that take place inside attribute list\nvalues are attribute references, this is because not all attributes\nare destined to be marked up and rendered as text (for example the\ntable <em>cols</em> attribute). To perform normal inline text substitutions\n(special characters, quotes, macros, replacements) on an attribute\nvalue you need to enclose it in single quotes. In the following quote\nblock the second attribute value in the AttributeList is quoted to\nensure the <em>http</em> macro is expanded to a hyperlink.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[quote,'https://en.wikipedia.org/wiki/Samuel_Johnson[Samuel Johnson]']\n_____________________________________________________________________\nSir, a woman's preaching is like a dog's walking on his hind legs. It\nis not done well; but you are surprised to find it done at all.\n_____________________________________________________________________</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_common_attributes\">14.2. Common attributes</h3>\n<div class=\"paragraph\">\n<p>Most block elements support the following attributes:</p>\n</div>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<colgroup>\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 71.4286%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Name</th>\n<th class=\"tableblock halign-left valign-top\">Backends</th>\n<th class=\"tableblock halign-left valign-top\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>id</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4, html5, xhtml11, docbook</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Unique identifier typically serve as link targets.\nCan also be set by the <em>BlockId</em> element.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>role</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4, html5, xhtml11, docbook</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Role contains a string used to classify or subclassify an element and\ncan be applied to AsciiDoc block elements.  The AsciiDoc <em>role</em>\nattribute is translated to the <em>role</em> attribute in DocBook outputs and\nis included in the <em>class</em> attribute in HTML outputs, in this respect\nit behaves like the <a href=\"#X96\">quoted text role attribute</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>DocBook XSL Stylesheets translate DocBook <em>role</em> attributes to HTML\n<em>class</em> attributes; CSS can then be used\n<a href=\"http://www.sagehill.net/docbookxsl/UsingCSS.html\">to style the\ngenerated HTML</a>.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>reftext</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p><em>reftext</em> is used to set the DocBook <em>xreflabel</em> attribute.\nThe <em>reftext</em> attribute can an also be set by the <em>BlockId</em> element.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>floatstyle</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p><em>floatstyle</em> is used to specify the floatstyle attribute for the\ntitled table, example, image and equation blocks. This is useful when\nused in conjuction with the dblatex toolchain. A typical example\nwould be to specify the value as <em>floatstyle=\"[htbp]\"</em>.</p>\n</div></div></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_paragraphs\">15. Paragraphs</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Paragraphs are blocks of text terminated by a blank line, the end of\nfile, or the start of a delimited block or a list.  There are three\nparagraph syntaxes: normal, indented (literal) and admonition which\nare rendered, by default, with the corresponding paragraph style.</p>\n</div>\n<div class=\"paragraph\">\n<p>Each syntax has a default style, but you can explicitly apply any\nparagraph style to any paragraph syntax. You can also apply\n<a href=\"#X104\">delimited block</a> styles to single paragraphs.</p>\n</div>\n<div class=\"paragraph\">\n<p>The built-in paragraph styles are: <em>normal</em>, <em>literal</em>, <em>verse</em>,\n<em>quote</em>, <em>listing</em>, <em>TIP</em>, <em>NOTE</em>, <em>IMPORTANT</em>, <em>WARNING</em>, <em>CAUTION</em>,\n<em>abstract</em>, <em>partintro</em>, <em>comment</em>, <em>example</em>, <em>sidebar</em>, <em>source</em>,\n<em>music</em>, <em>latex</em>, <em>graphviz</em>.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_normal_paragraph_syntax\">15.1. normal paragraph syntax</h3>\n<div class=\"paragraph\">\n<p>Normal paragraph syntax consists of one or more non-blank lines of\ntext. The first line must start hard against the left margin (no\nintervening white space). The default processing expectation is that\nof a normal paragraph of text.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X85\">15.2. literal paragraph syntax</h3>\n<div class=\"paragraph\">\n<p>Literal paragraphs are rendered verbatim in a monospaced font without\nany distinguishing background or border.  By default there is no text\nformatting or substitutions within Literal paragraphs apart from\nSpecial Characters and Callouts.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <em>literal</em> style is applied implicitly to indented paragraphs i.e.\nwhere the first line of the paragraph is indented by one or more space\nor tab characters.  For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>  Consul *necessitatibus* per id,\n  consetetur, eu pro everti postulant\n  homero verear ea mea, qui.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Consul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.</pre>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nBecause <a href=\"#X64\">lists</a> can be indented it&#8217;s possible for your\nindented paragraph to be misinterpreted as a list&#8201;&#8212;&#8201;in situations\nlike this apply the <em>literal</em> style to a normal paragraph.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Instead of using a paragraph indent you could apply the <em>literal</em>\nstyle explicitly, for example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[literal]\nConsul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Consul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X94\">15.3. quote and verse paragraph styles</h3>\n<div class=\"paragraph\">\n<p>The optional <em>attribution</em> and <em>citetitle</em> attributes (positional\nattributes 2 and 3) specify the author and source respectively.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <em>verse</em> style retains the line breaks, for example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[verse, William Blake, from Auguries of Innocence]\nTo see a world in a grain of sand,\nAnd a heaven in a wild flower,\nHold infinity in the palm of your hand,\nAnd eternity in an hour.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which is rendered as:</p>\n</div>\n<div class=\"verseblock\">\n<pre class=\"content\">To see a world in a grain of sand,\nAnd a heaven in a wild flower,\nHold infinity in the palm of your hand,\nAnd eternity in an hour.</pre>\n<div class=\"attribution\">\n&#8212; William Blake<br>\n<cite>from Auguries of Innocence</cite>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <em>quote</em> style flows the text at left and right margins, for\nexample:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[quote, Bertrand Russell, The World of Mathematics (1956)]\nA good notation has subtlety and suggestiveness which at times makes\nit almost seem like a live teacher.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which is rendered as:</p>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\nA good notation has subtlety and suggestiveness which at times makes\nit almost seem like a live teacher.\n</blockquote>\n<div class=\"attribution\">\n&#8212; Bertrand Russell<br>\n<cite>The World of Mathematics (1956)</cite>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X28\">15.4. Admonition Paragraphs</h3>\n<div class=\"paragraph\">\n<p><em>TIP</em>, <em>NOTE</em>, <em>IMPORTANT</em>, <em>WARNING</em> and <em>CAUTION</em> admonishment\nparagraph styles are generated by placing <code>NOTE:</code>, <code>TIP:</code>,\n<code>IMPORTANT:</code>, <code>WARNING:</code> or <code>CAUTION:</code> as the first word of the\nparagraph. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>NOTE: This is an example note.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Alternatively, you can specify the paragraph admonition style\nexplicitly using an <a href=\"#X79\">AttributeList element</a>. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[NOTE]\nThis is an example note.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nThis is an example note.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nIf your admonition requires more than a single paragraph use an\n<a href=\"#X22\">admonition block</a> instead.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X47\">15.4.1. Admonition Icons and Captions</h4>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nAdmonition customization with <code>icons</code>, <code>iconsdir</code>, <code>icon</code> and\n<code>caption</code> attributes does not apply when generating DocBook output. If\nyou are going the DocBook route then the <a href=\"#X43\">a2x(1)</a> <code>--no-icons</code>\nand <code>--icons-dir</code> options can be used to set the appropriate XSL\nStylesheets parameters.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>By default the asciidoc(1) HTML backends generate text captions\ninstead of admonition icon image links. To generate links to icon\nimages define the <a href=\"#X45\"><code>icons</code></a> attribute, for example using the <code>-a\nicons</code> command-line option.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <a href=\"#X44\"><code>iconsdir</code></a> attribute sets the location of linked icon\nimages.</p>\n</div>\n<div class=\"paragraph\">\n<p>You can override the default icon image using the <code>icon</code> attribute to\nspecify the path of the linked image. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[icon=\"./icons/wink.png\"]\nNOTE: What lovely war.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Use the <code>caption</code> attribute to customize the admonition captions (not\napplicable to <code>docbook</code> backend). The following example suppresses the\nicon image and customizes the caption of a <em>NOTE</em> admonition\n(undefining the <code>icons</code> attribute with <code>icons=None</code> is only necessary\nif <a href=\"#X45\">admonition icons</a> have been enabled):</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[icons=None, caption=\"My Special Note\"]\nNOTE: This is my special note.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This subsection also applies to <a href=\"#X22\">Admonition Blocks</a>.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X104\">16. Delimited Blocks</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Delimited blocks are blocks of text enveloped by leading and trailing\ndelimiter lines (normally a series of four or more repeated\ncharacters). The behavior of Delimited Blocks is specified by entries\nin configuration file <code>[blockdef-*]</code> sections.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_predefined_delimited_blocks\">16.1. Predefined Delimited Blocks</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc ships with a number of predefined DelimitedBlocks (see the\n<code>asciidoc.conf</code> configuration file in the asciidoc(1) program\ndirectory):</p>\n</div>\n<div class=\"paragraph\">\n<p>Predefined delimited block underlines:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>CommentBlock:     //////////////////////////\nPassthroughBlock: ++++++++++++++++++++++++++\nListingBlock:     --------------------------\nLiteralBlock:     ..........................\nSidebarBlock:     **************************\nQuoteBlock:       __________________________\nExampleBlock:     ==========================\nOpenBlock:        --</pre>\n</div>\n</div>\n<table class=\"tableblock frame-ends grid-all fit-content\">\n<caption class=\"title\">Table 3. Default DelimitedBlock substitutions</caption>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\"></th>\n<th class=\"tableblock halign-center valign-top\">Attributes</th>\n<th class=\"tableblock halign-center valign-top\">Callouts</th>\n<th class=\"tableblock halign-center valign-top\">Macros</th>\n<th class=\"tableblock halign-center valign-top\">Quotes</th>\n<th class=\"tableblock halign-center valign-top\">Replacements</th>\n<th class=\"tableblock halign-center valign-top\">Special chars</th>\n<th class=\"tableblock halign-center valign-top\">Special words</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>PassthroughBlock</em></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>ListingBlock</em></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>LiteralBlock</em></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>SidebarBlock</em></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>QuoteBlock</em></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>ExampleBlock</em></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>OpenBlock</em></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">No</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">Yes</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_listing_blocks\">16.2. Listing Blocks</h3>\n<div class=\"paragraph\">\n<p><em>ListingBlocks</em> are rendered verbatim in a monospaced font, they\nretain line and whitespace formatting and are often distinguished by a\nbackground or border. There is no text formatting or substitutions\nwithin Listing blocks apart from Special Characters and Callouts.\nListing blocks are often used for computer output and file listings.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here&#8217;s an example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>--------------------------------------\n#include &lt;stdio.h&gt;\n\nint main() {\n   printf(\"Hello World!\\n\");\n   exit(0);\n}\n--------------------------------------</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which will be rendered like:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>#include &lt;stdio.h&gt;\n\nint main() {\n    printf(\"Hello World!\\n\");\n    exit(0);\n}</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>By convention <a href=\"#X59\">filter blocks</a> use the listing block syntax and\nare implemented as distinct listing block styles.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X65\">16.3. Literal Blocks</h3>\n<div class=\"paragraph\">\n<p><em>LiteralBlocks</em> are rendered just like <a href=\"#X85\">literal paragraphs</a>.\nExample:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>...................................\nConsul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.\n...................................</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Consul *necessitatibus* per id,\nconsetetur, eu pro everti postulant\nhomero verear ea mea, qui.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If the <em>listing</em> style is applied to a LiteralBlock it will be\nrendered as a ListingBlock (this is handy if you have a listing\ncontaining a ListingBlock).</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_sidebar_blocks\">16.4. Sidebar Blocks</h3>\n<div class=\"paragraph\">\n<p>A sidebar is a short piece of text presented outside the narrative\nflow of the main text. The sidebar is normally presented inside a\nbordered box to set it apart from the main text.</p>\n</div>\n<div class=\"paragraph\">\n<p>The sidebar body is treated like a normal section body.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here&#8217;s an example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>.An Example Sidebar\n************************************************\nAny AsciiDoc SectionBody element (apart from\nSidebarBlocks) can be placed inside a sidebar.\n************************************************</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which will be rendered like:</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">An Example Sidebar</div>\n<div class=\"paragraph\">\n<p>Any AsciiDoc SectionBody element (apart from\nSidebarBlocks) can be placed inside a sidebar.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X26\">16.5. Comment Blocks</h3>\n<div class=\"paragraph\">\n<p>The contents of <em>CommentBlocks</em> are not processed; they are useful for\nannotations and for excluding new or outdated content that you don&#8217;t\nwant displayed. CommentBlocks are never written to output files.\nExample:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>//////////////////////////////////////////\nCommentBlock contents are not processed by\nasciidoc(1).\n//////////////////////////////////////////</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>See also <a href=\"#X25\">Comment Lines</a>.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nSystem macros are executed inside comment blocks.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X76\">16.6. Passthrough Blocks</h3>\n<div class=\"paragraph\">\n<p>By default the block contents is subject only to <em>attributes</em> and\n<em>macros</em> substitutions (use an explicit <em>subs</em> attribute to apply\ndifferent substitutions).  PassthroughBlock content will often be\nbackend specific. Here&#8217;s an example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[subs=\"quotes\"]\n++++++++++++++++++++++++++++++++++++++\n&lt;table border=\"1\"&gt;&lt;tr&gt;\n  &lt;td&gt;*Cell 1*&lt;/td&gt;\n  &lt;td&gt;*Cell 2*&lt;/td&gt;\n&lt;/tr&gt;&lt;/table&gt;\n++++++++++++++++++++++++++++++++++++++</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The following styles can be applied to passthrough blocks:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">pass</dt>\n<dd>\n<p>No substitutions are performed. This is equivalent to <code>subs=\"none\"</code>.</p>\n</dd>\n<dt class=\"hdlist1\">asciimath, latexmath</dt>\n<dd>\n<p>By default no substitutions are performed, the contents are rendered\nas <a href=\"#X78\">mathematical formulas</a>.</p>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_quote_blocks\">16.7. Quote Blocks</h3>\n<div class=\"paragraph\">\n<p><em>QuoteBlocks</em> are used for quoted passages of text. There are two\nstyles: <em>quote</em> and <em>verse</em>. The style behavior is identical to\n<a href=\"#X94\">quote and verse paragraphs</a> except that blocks can contain\nmultiple paragraphs and, in the case of the <em>quote</em> style, other\nsection elements.  The first positional attribute sets the style, if\nno attributes are specified the <em>quote</em> style is used.  The optional\n<em>attribution</em> and <em>citetitle</em> attributes (positional attributes 2 and\n3) specify the quote&#8217;s author and source. For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[quote, Sir Arthur Conan Doyle, The Adventures of Sherlock Holmes]\n____________________________________________________________________\nAs he spoke there was the sharp sound of horses' hoofs and\ngrating wheels against the curb, followed by a sharp pull at the\nbell. Holmes whistled.\n\n\"A pair, by the sound,\" said he. \"Yes,\" he continued, glancing\nout of the window. \"A nice little brougham and a pair of\nbeauties. A hundred and fifty guineas apiece. There's money in\nthis case, Watson, if there is nothing else.\"\n____________________________________________________________________</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which is rendered as:</p>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\n<div class=\"paragraph\">\n<p>As he spoke there was the sharp sound of horses' hoofs and\ngrating wheels against the curb, followed by a sharp pull at the\nbell. Holmes whistled.</p>\n</div>\n<div class=\"paragraph\">\n<p>\"A pair, by the sound,\" said he. \"Yes,\" he continued, glancing\nout of the window. \"A nice little brougham and a pair of\nbeauties. A hundred and fifty guineas apiece. There&#8217;s money in\nthis case, Watson, if there is nothing else.\"</p>\n</div>\n</blockquote>\n<div class=\"attribution\">\n&#8212; Sir Arthur Conan Doyle<br>\n<cite>The Adventures of Sherlock Holmes</cite>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X48\">16.8. Example Blocks</h3>\n<div class=\"paragraph\">\n<p><em>ExampleBlocks</em> encapsulate the DocBook Example element and are used\nfor, well, examples.  Example blocks can be titled by preceding them\nwith a <em>BlockTitle</em>.  DocBook toolchains will normally automatically\nnumber examples and generate a <em>List of Examples</em> backmatter section.</p>\n</div>\n<div class=\"paragraph\">\n<p>Example blocks are delimited by lines of equals characters and can\ncontain any block elements apart from Titles, BlockTitles and\nSidebars) inside an example block. For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>.An example\n=====================================================================\nQui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.\n=====================================================================</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. An example</div>\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>Qui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.</p>\n</div>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>A title prefix that can be inserted with the <code>caption</code> attribute\n(HTML backends). For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[caption=\"Example 1: \"]\n.An example with a custom caption\n=====================================================================\nQui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.\n=====================================================================</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X22\">16.9. Admonition Blocks</h3>\n<div class=\"paragraph\">\n<p>The <em>ExampleBlock</em> definition includes a set of admonition\n<a href=\"#X23\">styles</a> (<em>NOTE</em>, <em>TIP</em>, <em>IMPORTANT</em>, <em>WARNING</em>, <em>CAUTION</em>) for\ngenerating admonition blocks (admonitions containing more than a\n<a href=\"#X28\">single paragraph</a>).  Just precede the <em>ExampleBlock</em> with an\nattribute list specifying the admonition style name. For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[NOTE]\n.A NOTE admonition block\n=====================================================================\nQui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.\n\n. Fusce euismod commodo velit.\n. Vivamus fringilla mi eu lacus.\n  .. Fusce euismod commodo velit.\n  .. Vivamus fringilla mi eu lacus.\n. Donec eget arcu bibendum\n  nunc consequat lobortis.\n=====================================================================</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<div class=\"title\">A NOTE admonition block</div>\n<div class=\"paragraph\">\n<p>Qui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens.</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Fusce euismod commodo velit.</p>\n</li>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>Fusce euismod commodo velit.</p>\n</li>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Donec eget arcu bibendum\nnunc consequat lobortis.</p>\n</li>\n</ol>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>See also <a href=\"#X47\">Admonition Icons and Captions</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X29\">16.10. Open Blocks</h3>\n<div class=\"paragraph\">\n<p>Open blocks are special:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The open block delimiter is line containing two hyphen characters\n(instead of four or more repeated characters).</p>\n</li>\n<li>\n<p>They can be used to group block elements for <a href=\"#X15\">List item\ncontinuation</a>.</p>\n</li>\n<li>\n<p>Open blocks can be styled to behave like any other type of delimited\nblock.  The  following built-in styles can be applied to open\nblocks: <em>literal</em>, <em>verse</em>, <em>quote</em>, <em>listing</em>, <em>TIP</em>, <em>NOTE</em>,\n<em>IMPORTANT</em>, <em>WARNING</em>, <em>CAUTION</em>, <em>abstract</em>, <em>partintro</em>,\n<em>comment</em>, <em>example</em>, <em>sidebar</em>, <em>source</em>, <em>music</em>, <em>latex</em>,\n<em>graphviz</em>. For example, the following open block and listing block\nare functionally identical:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[listing]\n--\nLorum ipsum ...\n--</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>---------------\nLorum ipsum ...\n---------------</pre>\n</div>\n</div>\n</li>\n<li>\n<p>An unstyled open block groups section elements but otherwise does\nnothing.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Open blocks are used to generate document abstracts and book part\nintroductions:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Apply the <em>abstract</em> style to generate an abstract, for example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[abstract]\n--\nIn this paper we will ...\n--</pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Apply the <em>partintro</em> style to generate a book part introduction for\na multi-part book, for example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[partintro]\n.Optional part introduction title\n--\nOptional part introduction goes here.\n--</pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X64\">17. Lists</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<div class=\"title\">List types</div>\n<ul>\n<li>\n<p>Bulleted lists. Also known as itemized or unordered lists.</p>\n</li>\n<li>\n<p>Numbered lists. Also called ordered lists.</p>\n</li>\n<li>\n<p>Labeled lists. Sometimes called variable or definition lists.</p>\n</li>\n<li>\n<p>Callout lists (a list of callout annotations).</p>\n</li>\n</ul>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">List behavior</div>\n<ul>\n<li>\n<p>List item indentation is optional and does not determine nesting,\nindentation does however make the source more readable.</p>\n</li>\n<li>\n<p>Another list or a literal paragraph immediately following a list\nitem will be implicitly included in the list item; use <a href=\"#X15\">list\nitem continuation</a> to explicitly append other block elements to a\nlist item.</p>\n</li>\n<li>\n<p>A comment block or a comment line block macro element will terminate\na list&#8201;&#8212;&#8201;use inline comment lines to put comments inside lists.</p>\n</li>\n<li>\n<p>The <code>listindex</code> <a href=\"#X60\">intrinsic attribute</a> is the current list item\nindex (1..). If this attribute is used outside a list then it&#8217;s value\nis the number of items in the most recently closed list. Useful for\ndisplaying the number of items in a list.</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_bulleted_lists\">17.1. Bulleted Lists</h3>\n<div class=\"paragraph\">\n<p>Bulleted list items start with a single dash or one to five asterisks\nfollowed by some white space then some text. Bulleted list syntaxes\nare:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>- List item.\n* List item.\n** List item.\n*** List item.\n**** List item.\n***** List item.</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_numbered_lists\">17.2. Numbered Lists</h3>\n<div class=\"paragraph\">\n<p>List item numbers are explicit or implicit.</p>\n</div>\n<div class=\"paragraph\">\n<div class=\"title\">Explicit numbering</div>\n<p>List items begin with a number followed by some white space then the\nitem text. The numbers can be decimal (arabic), roman (upper or lower\ncase) or alpha (upper or lower case). Decimal and alpha numbers are\nterminated with a period, roman numbers are terminated with a closing\nparenthesis. The different terminators are necessary to ensure <em>i</em>,\n<em>v</em> and <em>x</em> roman numbers are are distinguishable from <em>x</em>, <em>v</em> and\n<em>x</em> alpha numbers. Examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>1.   Arabic (decimal) numbered list item.\na.   Lower case alpha (letter) numbered list item.\nF.   Upper case alpha (letter) numbered list item.\niii) Lower case roman numbered list item.\nIX)  Upper case roman numbered list item.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<div class=\"title\">Implicit numbering</div>\n<p>List items begin one to five period characters, followed by some white\nspace then the item text. Examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>. Arabic (decimal) numbered list item.\n.. Lower case alpha (letter) numbered list item.\n... Lower case roman numbered list item.\n.... Upper case alpha (letter) numbered list item.\n..... Upper case roman numbered list item.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You can use the <em>style</em> attribute (also the first positional\nattribute) to specify an alternative numbering style.  The numbered\nlist style can be one of the following values: <em>arabic</em>, <em>loweralpha</em>,\n<em>upperalpha</em>, <em>lowerroman</em>, <em>upperroman</em>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here are some examples of bulleted and numbered lists:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>- Praesent eget purus quis magna eleifend eleifend.\n  1. Fusce euismod commodo velit.\n    a. Fusce euismod commodo velit.\n    b. Vivamus fringilla mi eu lacus.\n    c. Donec eget arcu bibendum nunc consequat lobortis.\n  2. Vivamus fringilla mi eu lacus.\n    i)  Fusce euismod commodo velit.\n    ii) Vivamus fringilla mi eu lacus.\n  3. Donec eget arcu bibendum nunc consequat lobortis.\n  4. Nam fermentum mattis ante.\n- Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n  * Fusce euismod commodo velit.\n  ** Qui in magna commodo, est labitur dolorum an. Est ne magna primis\n     adolescens. Sit munere ponderum dignissim et. Minim luptatum et\n     vel.\n  ** Vivamus fringilla mi eu lacus.\n  * Donec eget arcu bibendum nunc consequat lobortis.\n- Nulla porttitor vulputate libero.\n  . Fusce euismod commodo velit.\n  . Vivamus fringilla mi eu lacus.\n[upperroman]\n    .. Fusce euismod commodo velit.\n    .. Vivamus fringilla mi eu lacus.\n  . Donec eget arcu bibendum nunc consequat lobortis.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which render as:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Praesent eget purus quis magna eleifend eleifend.</p>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Fusce euismod commodo velit.</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>Fusce euismod commodo velit.</p>\n</li>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n</li>\n<li>\n<p>Donec eget arcu bibendum nunc consequat lobortis.</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n<div class=\"olist lowerroman\">\n<ol class=\"lowerroman\" type=\"i\">\n<li>\n<p>Fusce euismod commodo velit.</p>\n</li>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Donec eget arcu bibendum nunc consequat lobortis.</p>\n</li>\n<li>\n<p>Nam fermentum mattis ante.</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Fusce euismod commodo velit.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Qui in magna commodo, est labitur dolorum an. Est ne magna primis\nadolescens. Sit munere ponderum dignissim et. Minim luptatum et\nvel.</p>\n</li>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Donec eget arcu bibendum nunc consequat lobortis.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Nulla porttitor vulputate libero.</p>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Fusce euismod commodo velit.</p>\n</li>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n<div class=\"olist upperroman\">\n<ol class=\"upperroman\" type=\"I\">\n<li>\n<p>Fusce euismod commodo velit.</p>\n</li>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Donec eget arcu bibendum nunc consequat lobortis.</p>\n</li>\n</ol>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>A predefined <em>compact</em> option is available to bulleted and numbered\nlists&#8201;&#8212;&#8201;this translates to the DocBook <em>spacing=\"compact\"</em> lists\nattribute which may or may not be processed by the DocBook toolchain.\nExample:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[options=\"compact\"]\n- Compact list item.\n- Another compact list item.</pre>\n</div>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nTo apply the <em>compact</em> option globally define a document-wide\n<em>compact-option</em> attribute, e.g. using the <code>-a compact-option</code>\ncommand-line option.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>You can set the list start number using the <em>start</em> attribute (works\nfor HTML outputs and DocBook outputs processed by DocBook XSL\nStylesheets). Example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[start=7]\n. List item 7.\n. List item 8.</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_labeled_lists\">17.3. Labeled Lists</h3>\n<div class=\"paragraph\">\n<p>Labeled list items consist of one or more text labels followed by the\ntext of the list item.</p>\n</div>\n<div class=\"paragraph\">\n<p>An item label begins a line with an alphanumeric character hard\nagainst the left margin and ends with two, three or four colons or two\nsemi-colons. A list item can have multiple labels, one per line.</p>\n</div>\n<div class=\"paragraph\">\n<p>The list item text consists of one or more lines of text starting\nafter the last label (either on the same line or a new line) and can\nbe followed by nested List or ListParagraph elements. Item text can be\noptionally indented.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here are some examples:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>In::\nLorem::\n  Fusce euismod commodo velit.\n\n  Fusce euismod commodo velit.\n\nIpsum:: Vivamus fringilla mi eu lacus.\n  * Vivamus fringilla mi eu lacus.\n  * Donec eget arcu bibendum nunc consequat lobortis.\nDolor::\n  Donec eget arcu bibendum nunc consequat lobortis.\n  Suspendisse;;\n    A massa id sem aliquam auctor.\n  Morbi;;\n    Pretium nulla vel lorem.\n  In;;\n    Dictum mauris in urna.\n    Vivamus::: Fringilla mi eu lacus.\n    Donec:::   Eget arcu bibendum nunc consequat lobortis.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which render as:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">In</dt>\n<dt class=\"hdlist1\">Lorem</dt>\n<dd>\n<p>Fusce euismod commodo velit.</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Fusce euismod commodo velit.</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">Ipsum</dt>\n<dd>\n<p>Vivamus fringilla mi eu lacus.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n</li>\n<li>\n<p>Donec eget arcu bibendum nunc consequat lobortis.</p>\n</li>\n</ul>\n</div>\n</dd>\n<dt class=\"hdlist1\">Dolor</dt>\n<dd>\n<p>Donec eget arcu bibendum nunc consequat lobortis.</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Suspendisse</dt>\n<dd>\n<p>A massa id sem aliquam auctor.</p>\n</dd>\n<dt class=\"hdlist1\">Morbi</dt>\n<dd>\n<p>Pretium nulla vel lorem.</p>\n</dd>\n<dt class=\"hdlist1\">In</dt>\n<dd>\n<p>Dictum mauris in urna.</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Vivamus</dt>\n<dd>\n<p>Fringilla mi eu lacus.</p>\n</dd>\n<dt class=\"hdlist1\">Donec</dt>\n<dd>\n<p>Eget arcu bibendum nunc consequat lobortis.</p>\n</dd>\n</dl>\n</div>\n</dd>\n</dl>\n</div>\n</dd>\n</dl>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_horizontal_labeled_list_style\">17.3.1. Horizontal labeled list style</h4>\n<div class=\"paragraph\">\n<p>The <em>horizontal</em> labeled list style (also the first positional\nattribute) places the list text side-by-side with the label instead of\nunder the label. Here is an example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[horizontal]\n*Lorem*:: Fusce euismod commodo velit.  Qui in magna commodo, est\nlabitur dolorum an. Est ne magna primis adolescens.\n\n  Fusce euismod commodo velit.\n\n*Ipsum*:: Vivamus fringilla mi eu lacus.\n- Vivamus fringilla mi eu lacus.\n- Donec eget arcu bibendum nunc consequat lobortis.\n\n*Dolor*::\n  - Vivamus fringilla mi eu lacus.\n  - Donec eget arcu bibendum nunc consequat lobortis.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which render as:</p>\n</div>\n<div class=\"hdlist\">\n<table>\n<tr>\n<td class=\"hdlist1\">\n<strong>Lorem</strong>\n</td>\n<td class=\"hdlist2\">\n<p>Fusce euismod commodo velit.  Qui in magna commodo, est\nlabitur dolorum an. Est ne magna primis adolescens.</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Fusce euismod commodo velit.</pre>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\n<strong>Ipsum</strong>\n</td>\n<td class=\"hdlist2\">\n<p>Vivamus fringilla mi eu lacus.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n</li>\n<li>\n<p>Donec eget arcu bibendum nunc consequat lobortis.</p>\n</li>\n</ul>\n</div>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\n<strong>Dolor</strong>\n</td>\n<td class=\"hdlist2\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Vivamus fringilla mi eu lacus.</p>\n</li>\n<li>\n<p>Donec eget arcu bibendum nunc consequat lobortis.</p>\n</li>\n</ul>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Current PDF toolchains do not make a good job of determining\nthe relative column widths for horizontal labeled lists.</p>\n</li>\n<li>\n<p>Nested horizontal labeled lists will generate DocBook validation\nerrors because the <em>DocBook XML V4.2</em> DTD does not permit nested\ninformal tables (although <a href=\"#X13\">DocBook XSL Stylesheets</a> and\n<a href=\"#X31\">dblatex</a> process them correctly).</p>\n</li>\n<li>\n<p>The label width can be set as a percentage of the total width by\nsetting the <em>width</em> attribute e.g. <code>width=\"10%\"</code></p>\n</li>\n</ul>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_question_and_answer_lists\">17.4. Question and Answer Lists</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc comes pre-configured with a <em>qanda</em> style labeled list for generating\nDocBook question and answer (Q&amp;A) lists. Example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[qanda]\nQuestion one::\n        Answer one.\nQuestion two::\n        Answer two.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"qlist qanda\">\n<ol>\n<li>\n<p><em>Question one</em></p>\n<p>Answer one.</p>\n</li>\n<li>\n<p><em>Question two</em></p>\n<p>Answer two.</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_glossary_lists\">17.5. Glossary Lists</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc comes pre-configured with a <em>glossary</em> style labeled list for\ngenerating DocBook glossary lists. Example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[glossary]\nA glossary term::\n    The corresponding definition.\nA second glossary term::\n    The corresponding definition.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>For working examples see the <code>article.txt</code> and <code>book.txt</code> documents in\nthe AsciiDoc <code>./doc</code> distribution directory.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nTo generate valid DocBook output glossary lists must be located\nin a section that uses the <em>glossary</em> <a href=\"#X93\">section markup template</a>.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_bibliography_lists\">17.6. Bibliography Lists</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc comes with a predefined <em>bibliography</em> bulleted list style\ngenerating DocBook bibliography entries. Example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[bibliography]\n.Optional list title\n- [[[taoup]]] Eric Steven Raymond. 'The Art of UNIX\n  Programming'. Addison-Wesley. ISBN 0-13-142901-9.\n- [[[walsh-muellner]]] Norman Walsh &amp; Leonard Muellner.\n  'DocBook - The Definitive Guide'. O'Reilly &amp; Associates. 1999.\n  ISBN 1-56592-580-7.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <code>[[[&lt;reference&gt;]]]</code> syntax is a bibliography entry anchor, it\ngenerates an anchor named <code>&lt;reference&gt;</code> and additionally displays\n<code>[&lt;reference&gt;]</code> at the anchor position. For example <code>[[[taoup]]]</code>\ngenerates an anchor named <code>taoup</code> that displays <code>[taoup]</code> at the\nanchor position. Cite the reference from elsewhere your document using\n<code>&lt;&lt;taoup&gt;&gt;</code>, this displays a hyperlink (<code>[taoup]</code>) to the\ncorresponding bibliography entry anchor.</p>\n</div>\n<div class=\"paragraph\">\n<p>For working examples see the <code>article.txt</code> and <code>book.txt</code> documents in\nthe AsciiDoc <code>./doc</code> distribution directory.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nTo generate valid DocBook output bibliography lists must be\nlocated in a <a href=\"#X93\">bibliography section</a>.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X15\">17.7. List Item Continuation</h3>\n<div class=\"paragraph\">\n<p>Another list or a literal paragraph immediately following a list item\nis implicitly appended to the list item; to append other block\nelements to a list item you need to explicitly join them to the list\nitem with a <em>list continuation</em> (a separator line containing a single\nplus character). Multiple block elements can be appended to a list\nitem using list continuations (provided they are legal list item\nchildren in the backend markup).</p>\n</div>\n<div class=\"paragraph\">\n<p>Here are some examples of list item continuations: list item one\ncontains multiple continuations; list item two is continued with an\n<a href=\"#X29\">OpenBlock</a> containing multiple elements:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>1. List item one.\n+\nList item one continued with a second paragraph followed by an\nIndented block.\n+\n.................\n$ ls *.sh\n$ mv *.sh ~/tmp\n.................\n+\nList item continued with a third paragraph.\n\n2. List item two continued with an open block.\n+\n--\nThis paragraph is part of the preceding list item.\n\na. This list is nested and does not require explicit item continuation.\n+\nThis paragraph is part of the preceding list item.\n\nb. List item b.\n\nThis paragraph belongs to item two of the outer list.\n--</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>List item one.</p>\n<div class=\"paragraph\">\n<p>List item one continued with a second paragraph followed by an\nIndented block.</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ ls *.sh\n$ mv *.sh ~/tmp</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>List item continued with a third paragraph.</p>\n</div>\n</li>\n<li>\n<p>List item two continued with an open block.</p>\n<div class=\"openblock\">\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>This paragraph is part of the preceding list item.</p>\n</div>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>This list is nested and does not require explicit item continuation.</p>\n<div class=\"paragraph\">\n<p>This paragraph is part of the preceding list item.</p>\n</div>\n</li>\n<li>\n<p>List item b.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>This paragraph belongs to item two of the outer list.</p>\n</div>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X92\">18. Footnotes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The shipped AsciiDoc configuration includes three footnote inline\nmacros:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><code>footnote:[&lt;text&gt;]</code></dt>\n<dd>\n<p>Generates a footnote with text <code>&lt;text&gt;</code>.</p>\n</dd>\n<dt class=\"hdlist1\"><code>footnoteref:[&lt;id&gt;,&lt;text&gt;]</code></dt>\n<dd>\n<p>Generates a footnote with a reference ID <code>&lt;id&gt;</code> and text <code>&lt;text&gt;</code>.</p>\n</dd>\n<dt class=\"hdlist1\"><code>footnoteref:[&lt;id&gt;]</code></dt>\n<dd>\n<p>Generates a reference to the footnote with ID <code>&lt;id&gt;</code>.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>The footnote text can span multiple lines.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <em>xhtml11</em> and <em>html5</em> backends render footnotes dynamically using\nJavaScript; <em>html4</em> outputs do not use JavaScript and leave the\nfootnotes inline; <em>docbook</em> footnotes are processed by the downstream\nDocBook toolchain.</p>\n</div>\n<div class=\"paragraph\">\n<p>Example footnotes:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>A footnote footnote:[An example footnote.];\na second footnote with a reference ID footnoteref:[note2,Second footnote.];\nfinally a reference to the second footnote footnoteref:[note2].</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Renders:</p>\n</div>\n<div class=\"paragraph\">\n<p>A footnote <sup class=\"footnote\">[<a id=\"_footnoteref_2\" class=\"footnote\" href=\"#_footnotedef_2\" title=\"View footnote.\">2</a>]</sup>;\na second footnote with a reference ID <sup class=\"footnote\" id=\"_footnote_note2\">[<a id=\"_footnoteref_3\" class=\"footnote\" href=\"#_footnotedef_3\" title=\"View footnote.\">3</a>]</sup>;\nfinally a reference to the second footnote <sup class=\"footnoteref\">[<a class=\"footnote\" href=\"#_footnotedef_3\" title=\"View footnote.\">3</a>]</sup>.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_indexes\">19. Indexes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The shipped AsciiDoc configuration includes the inline macros for\ngenerating DocBook index entries.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><code>indexterm:[&lt;primary&gt;,&lt;secondary&gt;,&lt;tertiary&gt;]</code></dt>\n<dt class=\"hdlist1\"><code>(((&lt;primary&gt;,&lt;secondary&gt;,&lt;tertiary&gt;)))</code></dt>\n<dd>\n<p>This inline macro generates an index term (the <code>&lt;secondary&gt;</code> and\n<code>&lt;tertiary&gt;</code> positional attributes are optional). Example:\n<code>indexterm:[Tigers,Big cats]</code> (or, using the alternative syntax\n<code>(((Tigers,Big cats)))</code>.  Index terms that have secondary and\ntertiary entries also generate separate index terms for the\nsecondary and tertiary entries. The index terms appear in the\nindex, not the primary text flow.</p>\n</dd>\n<dt class=\"hdlist1\"><code>indexterm2:[&lt;primary&gt;]</code></dt>\n<dt class=\"hdlist1\"><code>((&lt;primary&gt;))</code></dt>\n<dd>\n<p>This inline macro generates an index term that appears in both the\nindex and the primary text flow.  The <code>&lt;primary&gt;</code> should not be\npadded to the left or right with white space characters.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>For working examples see the <code>article.txt</code> and <code>book.txt</code> documents in\nthe AsciiDoc <code>./doc</code> distribution directory.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nIndex entries only really make sense if you are generating\nDocBook markup&#8201;&#8212;&#8201;DocBook conversion programs automatically generate\nan index at the point an <em>Index</em> section appears in source document.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X105\">20. Callouts</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Callouts are a mechanism for annotating verbatim text (for example:\nsource code, computer output and user input). Callout markers are\nplaced inside the annotated text while the actual annotations are\npresented in a callout list after the annotated text. Here&#8217;s an\nexample:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre> .MS-DOS directory listing\n -----------------------------------------------------\n 10/17/97   9:04         &lt;DIR&gt;    bin\n 10/16/97  14:11         &lt;DIR&gt;    DOS            &lt;1&gt;\n 10/16/97  14:40         &lt;DIR&gt;    Program Files\n 10/16/97  14:46         &lt;DIR&gt;    TEMP\n 10/17/97   9:04         &lt;DIR&gt;    tmp\n 10/16/97  14:37         &lt;DIR&gt;    WINNT\n 10/16/97  14:25             119  AUTOEXEC.BAT   &lt;2&gt;\n  2/13/94   6:21          54,619  COMMAND.COM    &lt;2&gt;\n 10/16/97  14:25             115  CONFIG.SYS     &lt;2&gt;\n 11/16/97  17:17      61,865,984  pagefile.sys\n  2/13/94   6:21           9,349  WINA20.386     &lt;3&gt;\n -----------------------------------------------------\n\n \\&lt;1&gt; This directory holds MS-DOS.\n \\&lt;2&gt; System startup code for DOS.\n \\&lt;3&gt; Some sort of Windows 3.1 hack.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which renders:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">MS-DOS directory listing</div>\n<div class=\"content\">\n<pre>10/17/97   9:04         &lt;DIR&gt;    bin\n10/16/97  14:11         &lt;DIR&gt;    DOS            <b class=\"conum\">(1)</b>\n10/16/97  14:40         &lt;DIR&gt;    Program Files\n10/16/97  14:46         &lt;DIR&gt;    TEMP\n10/17/97   9:04         &lt;DIR&gt;    tmp\n10/16/97  14:37         &lt;DIR&gt;    WINNT\n10/16/97  14:25             119  AUTOEXEC.BAT   <b class=\"conum\">(2)</b>\n 2/13/94   6:21          54,619  COMMAND.COM    <b class=\"conum\">(2)</b>\n10/16/97  14:25             115  CONFIG.SYS     <b class=\"conum\">(2)</b>\n11/16/97  17:17      61,865,984  pagefile.sys\n 2/13/94   6:21           9,349  WINA20.386     <b class=\"conum\">(3)</b></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>This directory holds MS-DOS.</p>\n</li>\n<li>\n<p>System startup code for DOS.</p>\n</li>\n<li>\n<p>Some sort of Windows 3.1 hack.</p>\n</li>\n</ol>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Explanation</div>\n<ul>\n<li>\n<p>The callout marks are whole numbers enclosed in angle brackets&#8201;&#8212;&#8201;they refer to the correspondingly numbered item in the following\ncallout list.</p>\n</li>\n<li>\n<p>By default callout marks are confined to <em>LiteralParagraphs</em>,\n<em>LiteralBlocks</em> and <em>ListingBlocks</em> (although this is a\nconfiguration file option and can be changed).</p>\n</li>\n<li>\n<p>Callout list item numbering is fairly relaxed&#8201;&#8212;&#8201;list items can\nstart with <code>&lt;n&gt;</code>, <code>n&gt;</code> or <code>&gt;</code> where <code>n</code> is the optional list item\nnumber (in the latter case list items starting with a single <code>&gt;</code>\ncharacter are implicitly numbered starting at one).</p>\n</li>\n<li>\n<p>Callout lists should not be nested.</p>\n</li>\n<li>\n<p>Callout lists cannot be used within tables.</p>\n</li>\n<li>\n<p>Callout lists start list items hard against the left margin.</p>\n</li>\n<li>\n<p>If you want to present a number inside angle brackets you&#8217;ll need to\nescape it with a backslash to prevent it being interpreted as a\ncallout mark.</p>\n</li>\n</ul>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nDefine the AsciiDoc <em>icons</em> attribute (for example using the <code>-a\nicons</code> command-line option) to display callout icons.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_implementation_notes\">20.1. Implementation Notes</h3>\n<div class=\"paragraph\">\n<p>Callout marks are generated by the <em>callout</em> inline macro while\ncallout lists are generated using the <em>callout</em> list definition. The\n<em>callout</em> macro and <em>callout</em> list are special in that they work\ntogether. The <em>callout</em> inline macro is not enabled by the normal\n<em>macros</em> substitutions option, instead it has its own <em>callouts</em>\nsubstitution option.</p>\n</div>\n<div class=\"paragraph\">\n<p>The following attributes are available during inline callout macro\nsubstitution:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><code>{index}</code></dt>\n<dd>\n<p>The callout list item index inside the angle brackets.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{coid}</code></dt>\n<dd>\n<p>An identifier formatted like <code>CO&lt;listnumber&gt;-&lt;index&gt;</code> that\nuniquely identifies the callout mark. For example <code>CO2-4</code>\nidentifies the fourth callout mark in the second set of callout\nmarks.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>The <code>{coids}</code> attribute can be used during callout list item\nsubstitution&#8201;&#8212;&#8201;it is a space delimited list of callout IDs that refer\nto the explanatory list item.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_including_callouts_in_included_code\">20.2. Including callouts in included code</h3>\n<div class=\"paragraph\">\n<p>You can annotate working code examples with callouts&#8201;&#8212;&#8201;just remember\nto put the callouts inside source code comments. This example displays\nthe <code>test.py</code> source file (containing a single callout) using the\n<em>source</em> (code highlighter) filter:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">AsciiDoc source</div>\n<div class=\"content\">\n<pre> [source,python]\n -------------------------------------------\n \\include::test.py[]\n -------------------------------------------\n\n \\&lt;1&gt; Print statement.</pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Included <code>test.py</code> source</div>\n<div class=\"content\">\n<pre>print 'Hello World!'   # &lt;1&gt;</pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_macros\">21. Macros</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Macros are a mechanism for substituting parametrized text into output\ndocuments.</p>\n</div>\n<div class=\"paragraph\">\n<p>Macros have a <em>name</em>, a single <em>target</em> argument and an <em>attribute\nlist</em>.  The usual syntax is <code>&lt;name&gt;:&lt;target&gt;[&lt;attrlist&gt;]</code> (for\ninline macros) and <code>&lt;name&gt;::&lt;target&gt;[&lt;attrlist&gt;]</code> (for block\nmacros).  Here are some examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>https://docbook.org/[DocBook.org]\ninclude::chapt1.txt[tabsize=2]\nmailto:srackham@gmail.com[]</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Macro behavior</div>\n<ul>\n<li>\n<p><code>&lt;name&gt;</code> is the macro name. It can only contain letters, digits or\ndash characters and cannot start with a dash.</p>\n</li>\n<li>\n<p>The optional <code>&lt;target&gt;</code> cannot contain white space characters.</p>\n</li>\n<li>\n<p><code>&lt;attrlist&gt;</code> is a <a href=\"#X21\">list of attributes</a> enclosed in square\nbrackets.</p>\n</li>\n<li>\n<p><code>]</code> characters inside attribute lists must be escaped with a\nbackslash.</p>\n</li>\n<li>\n<p>Expansion of macro references can normally be escaped by prefixing a\nbackslash character (see the AsciiDoc <em>FAQ</em> for examples of\nexceptions to this rule).</p>\n</li>\n<li>\n<p>Attribute references in block macros are expanded.</p>\n</li>\n<li>\n<p>The substitutions performed prior to Inline macro macro expansion\nare determined by the inline context.</p>\n</li>\n<li>\n<p>Macros are processed in the order they appear in the configuration\nfile(s).</p>\n</li>\n<li>\n<p>Calls to inline macros can be nested inside different inline macros\n(an inline macro call cannot contain a nested call to itself).</p>\n</li>\n<li>\n<p>In addition to <code>&lt;name&gt;</code>, <code>&lt;target&gt;</code> and <code>&lt;attrlist&gt;</code> the\n<code>&lt;passtext&gt;</code> and <code>&lt;subslist&gt;</code> named groups are available to\n<a href=\"#X77\">passthrough macros</a>. A macro is a passthrough macro if the\ndefinition includes a <code>&lt;passtext&gt;</code> named group.</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_inline_macros\">21.1. Inline Macros</h3>\n<div class=\"paragraph\">\n<p>Inline Macros occur in an inline element context. Predefined Inline\nmacros include <em>URLs</em>, <em>image</em> and <em>link</em> macros.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_urls\">21.1.1. URLs</h4>\n<div class=\"paragraph\">\n<p><em>http</em>, <em>https</em>, <em>ftp</em>, <em>file</em>, <em>mailto</em> and <em>callto</em> URLs are\nrendered using predefined inline macros.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>If you don&#8217;t need a custom link caption you can enter the <em>http</em>,\n<em>https</em>, <em>ftp</em>, <em>file</em> URLs and email addresses without any special\nmacro syntax.</p>\n</li>\n<li>\n<p>If the <code>&lt;attrlist&gt;</code> is empty the URL is displayed.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Here are some examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>https://docbook.org/[DocBook.org]\nhttps://docbook.org/\nmailto:joe.bloggs@foobar.com[email Joe Bloggs]\njoe.bloggs@foobar.com</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which are rendered:</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://docbook.org/\">DocBook.org</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://docbook.org/\" class=\"bare\">https://docbook.org/</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"mailto:joe.bloggs@foobar.com\">email Joe Bloggs</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"mailto:joe.bloggs@foobar.com\">joe.bloggs@foobar.com</a></p>\n</div>\n<div class=\"paragraph\">\n<p>If the <code>&lt;target&gt;</code> necessitates space characters use <code>%20</code>, for example\n<code>large%20image.png</code>.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_internal_cross_references\">21.1.2. Internal Cross References</h4>\n<div class=\"paragraph\">\n<p>Two AsciiDoc inline macros are provided for creating hypertext links\nwithin an AsciiDoc document. You can use either the standard macro\nsyntax or the (preferred) alternative.</p>\n</div>\n<div class=\"sect4\">\n<h5 id=\"X30\">anchor</h5>\n<div class=\"paragraph\">\n<p>Used to specify hypertext link targets:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[[&lt;id&gt;,&lt;xreflabel&gt;]]\nanchor:&lt;id&gt;[&lt;xreflabel&gt;]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <code>&lt;id&gt;</code> is a unique string that conforms to the output markup&#8217;s\nanchor syntax. The optional <code>&lt;xreflabel&gt;</code> is the text to be displayed\nby captionless <em>xref</em> macros that refer to this anchor. The optional\n<code>&lt;xreflabel&gt;</code> is only really useful when generating DocBook output.\nExample anchor:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[[X1]]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You may have noticed that the syntax of this inline element is the\nsame as that of the <a href=\"#X41\">BlockId block element</a>, this is no\ncoincidence since they are functionally equivalent.</p>\n</div>\n</div>\n<div class=\"sect4\">\n<h5 id=\"_xref\">xref</h5>\n<div class=\"paragraph\">\n<p>Creates a hypertext link to a document anchor.</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>&lt;&lt;&lt;id&gt;,&lt;caption&gt;&gt;&gt;\nxref:&lt;id&gt;[&lt;caption&gt;]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <code>&lt;id&gt;</code> refers to an anchor ID. The optional <code>&lt;caption&gt;</code> is the\nlink&#8217;s displayed text. Example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>&lt;&lt;X21,attribute lists&gt;&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If <code>&lt;caption&gt;</code> is not specified then the displayed text is\nauto-generated:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The AsciiDoc <em>xhtml11</em> and <em>html5</em> backends display the <code>&lt;id&gt;</code>\nenclosed in square brackets.</p>\n</li>\n<li>\n<p>If DocBook is produced the DocBook toolchain is responsible for the\ndisplayed text which will normally be the referenced figure, table\nor section title number followed by the element&#8217;s title text.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Here is an example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[[tiger_image]]\n.Tyger tyger\nimage::tiger.png[]\n\nThis can be seen in &lt;&lt;tiger_image&gt;&gt;.</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_linking_to_local_documents\">21.1.3. Linking to Local Documents</h4>\n<div class=\"paragraph\">\n<p>Hypertext links to files on the local file system are specified using\nthe <em>link</em> inline macro.</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>link:&lt;target&gt;[&lt;caption&gt;]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <em>link</em> macro generates relative URLs. The link macro <code>&lt;target&gt;</code> is\nthe target file name (relative to the file system location of the\nreferring document). The optional <code>&lt;caption&gt;</code> is the link&#8217;s displayed\ntext. If <code>&lt;caption&gt;</code> is not specified then <code>&lt;target&gt;</code> is displayed.\nExample:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>link:downloads/foo.zip[download foo.zip]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You can use the <code>&lt;filename&gt;#&lt;id&gt;</code> syntax to refer to an anchor within\na target document but this usually only makes sense when targeting\nHTML documents.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X9\">21.1.4. Images</h4>\n<div class=\"paragraph\">\n<p>Inline images are inserted into the output document using the <em>image</em>\nmacro. The inline syntax is:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>image:&lt;target&gt;[&lt;attributes&gt;]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The contents of the image file <code>&lt;target&gt;</code> is displayed. To display the\nimage its file format must be supported by the target backend\napplication. HTML and DocBook applications normally support PNG or JPG\nfiles.</p>\n</div>\n<div class=\"paragraph\">\n<p><code>&lt;target&gt;</code> file name paths are relative to the location of the\nreferring document.</p>\n</div>\n<div id=\"X55\" class=\"ulist\">\n<div class=\"title\">Image macro attributes</div>\n<ul>\n<li>\n<p>The optional <em>alt</em> attribute is also the first positional attribute,\nit specifies alternative text which is displayed if the output\napplication is unable to display the image file (see also\n<a href=\"https://htmlhelp.com/feature/art3.htm\">Use of ALT texts in IMGs</a>). For\nexample:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>image:logo.png[Company Logo]</pre>\n</div>\n</div>\n</li>\n<li>\n<p>The optional <em>title</em> attribute provides a title for the image. The\n<a href=\"#X49\">block image macro</a> renders the title alongside the image.\nThe inline image macro displays the title as a popup &#8220;tooltip&#8221; in\nvisual browsers (AsciiDoc HTML outputs only).</p>\n</li>\n<li>\n<p>The optional <code>width</code> and <code>height</code> attributes scale the image size\nand can be used in any combination. The units are pixels.  The\nfollowing example scales the previous example to a height of 32\npixels:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>image:logo.png[\"Company Logo\",height=32]</pre>\n</div>\n</div>\n</li>\n<li>\n<p>The optional <code>link</code> attribute is used to link the image to an\nexternal document. The following example links a screenshot\nthumbnail to a full size version:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>image:screen-thumbnail.png[height=32,link=\"screen.png\"]</pre>\n</div>\n</div>\n</li>\n<li>\n<p>The optional <code>scaledwidth</code> attribute is only used in DocBook block\nimages (specifically for PDF documents). The following example\nscales the images to 75% of the available print width:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>image::logo.png[scaledwidth=\"75%\",alt=\"Company Logo\"]</pre>\n</div>\n</div>\n</li>\n<li>\n<p>The image <code>scale</code> attribute sets the DocBook <code>imagedata</code> element\n<code>scale</code> attribute.</p>\n</li>\n<li>\n<p>The optional <code>align</code> attribute aligns block macro images\nhorizontally.  Allowed values are <code>center</code>, <code>left</code> and <code>right</code>. For\nexample:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>image::tiger.png[\"Tiger image\",align=\"left\"]</pre>\n</div>\n</div>\n</li>\n<li>\n<p>The optional <code>float</code> attribute floats the image <code>left</code> or <code>right</code> on\nthe page (works with HTML outputs only, has no effect on DocBook\noutputs). <code>float</code> and <code>align</code> attributes are mutually exclusive.\nUse the <code>unfloat::[]</code> block macro to stop floating.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_comment_lines\">21.1.5. Comment Lines</h4>\n<div class=\"paragraph\">\n<p>See <a href=\"#X25\">comment block macro</a>.</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_block_macros\">21.2. Block Macros</h3>\n<div class=\"paragraph\">\n<p>A Block macro reference must be contained in a single line separated\neither side by a blank line or a block delimiter.</p>\n</div>\n<div class=\"paragraph\">\n<p>Block macros behave just like Inline macros, with the following\ndifferences:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>They occur in a block context.</p>\n</li>\n<li>\n<p>The default syntax is <code>&lt;name&gt;::&lt;target&gt;[&lt;attrlist&gt;]</code> (two\ncolons, not one).</p>\n</li>\n<li>\n<p>Markup template section names end in <code>-blockmacro</code> instead of\n<code>-inlinemacro</code>.</p>\n</li>\n</ul>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_block_identifier\">21.2.1. Block Identifier</h4>\n<div class=\"paragraph\">\n<p>The Block Identifier macro sets the <code>id</code> attribute and has the same\nsyntax as the <a href=\"#X30\">anchor inline macro</a> since it performs\nessentially the same function&#8201;&#8212;&#8201;block templates use the <code>id</code>\nattribute as a block element ID. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[[X30]]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This is equivalent to the <code>[id=\"X30\"]</code> <a href=\"#X79\">AttributeList element</a>).</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X49\">21.2.2. Images</h4>\n<div class=\"paragraph\">\n<p>The <em>image</em> block macro is used to display images in a block context.\nThe syntax is:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>image::&lt;target&gt;[&lt;attributes&gt;]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The block <code>image</code> macro has the same <a href=\"#X55\">macro attributes</a> as it&#8217;s\n<a href=\"#X9\">inline image macro</a> counterpart.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nUnlike the inline <code>image</code> macro, the entire block <code>image</code> macro\nmust be on a single line.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Block images can be titled by preceding the <em>image</em> macro with a\n<em>BlockTitle</em>.  DocBook toolchains normally number titled block images\nand optionally list them in an automatically generated <em>List of\nFigures</em> backmatter section.</p>\n</div>\n<div class=\"paragraph\">\n<p>This example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>.Main circuit board\nimage::layout.png[J14P main circuit board]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>is equivalent to:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>image::layout.png[\"J14P main circuit board\", title=\"Main circuit board\"]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>A title prefix that can be inserted with the <code>caption</code> attribute\n(HTML backends). For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>.Main circuit board\n[caption=\"Figure 2: \"]\nimage::layout.png[J14P main circuit board]</pre>\n</div>\n</div>\n<div id=\"X66\" class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Embedding images in XHTML documents</div>\n<div class=\"paragraph\">\n<p>If you define the <code>data-uri</code> attribute then images will be embedded in\nXHTML outputs using the\n<a href=\"https://en.wikipedia.org/wiki/Data_URI_scheme\">data URI scheme</a>.  You\ncan use the <em>data-uri</em> attribute with the <em>xhtml11</em> and <em>html5</em>\nbackends to produce single-file XHTML documents with embedded images\nand CSS, for example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a data-uri mydocument.txt</pre>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>All current popular browsers support data URIs, although versions\nof Internet Explorer prior to version 8 do not.</p>\n</li>\n<li>\n<p>Some browsers limit the size of data URIs.</p>\n</li>\n</ul>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X25\">21.2.3. Comment Lines</h4>\n<div class=\"paragraph\">\n<p>Single lines starting with two forward slashes hard up against the\nleft margin are treated as comments. Comment lines do not appear in\nthe output unless the <em>showcomments</em> attribute is defined.  Comment\nlines have been implemented as both block and inline macros so a\ncomment line can appear as a stand-alone block or within block elements\nthat support inline macro expansion. Example comment line:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>// This is a comment.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If the <em>showcomments</em> attribute is defined comment lines are written\nto the output:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>In DocBook the comment lines are enclosed by the <em>remark</em> element\n(which may or may not be rendered by your toolchain).</p>\n</li>\n<li>\n<p>The <em>showcomments</em> attribute does not expose <a href=\"#X26\">Comment Blocks</a>.\nComment Blocks are never passed to the output.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_system_macros\">21.3. System Macros</h3>\n<div class=\"paragraph\">\n<p>System macros are block macros that perform a predefined task and are\nhardwired into the asciidoc(1) program.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>You can escape system macros with a leading backslash character\n(as you can with other macros).</p>\n</li>\n<li>\n<p>The syntax and tasks performed by system macros is built into\nasciidoc(1) so they don&#8217;t appear in configuration files.  You can\nhowever customize the syntax by adding entries to a configuration\nfile <code>[macros]</code> section.</p>\n</li>\n</ul>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X63\">21.3.1. Include Macros</h4>\n<div class=\"paragraph\">\n<p>The <code>include</code> and <code>include1</code>  system macros to include the contents of\na named file into the source document.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <code>include</code> macro includes a file as if it were part of the parent\ndocument&#8201;&#8212;&#8201;tabs are expanded and system macros processed. The\ncontents of <code>include1</code> files are not subject to tab expansion or\nsystem macro processing nor are attribute or lower priority\nsubstitutions performed. The <code>include1</code> macro&#8217;s intended use is to\ninclude verbatim embedded CSS or scripts into configuration file\nheaders.  Example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>include::chapter1.txt[tabsize=4]</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Include macro behavior</div>\n<ul>\n<li>\n<p>If the included file name is specified with a relative path then the\npath is relative to the location of the referring document.</p>\n</li>\n<li>\n<p>Include macros can appear inside configuration files.</p>\n</li>\n<li>\n<p>Files included from within <em>DelimitedBlocks</em> are read to completion\nto avoid false end-of-block underline termination.</p>\n</li>\n<li>\n<p>Attribute references are expanded inside the include <em>target</em>; if an\nattribute is undefined then the included file is silently skipped.</p>\n</li>\n<li>\n<p>The <em>tabsize</em> macro attribute sets the number of space characters to\nbe used for tab expansion in the included file (not applicable to\n<code>include1</code> macro).</p>\n</li>\n<li>\n<p>The <em>depth</em> macro attribute sets the maximum permitted number of\nsubsequent nested includes (not applicable to <code>include1</code> macro which\ndoes not process nested includes). Setting <em>depth</em> to <em>1</em> disables\nnesting inside the included file. By default, nesting is limited to\na depth of ten.</p>\n</li>\n<li>\n<p>The <code>lines</code> macro attribute can be used to include specific lines of\nthe file. You can specify a range of pages by using <code>..</code> between\nthe two numbers, for example <code>1..10</code> would include the first 10\nlines. You can include multiple ranges or invdividual pages by using\na comma or semi-colon, for example <code>1..10,45,50..60</code>.</p>\n</li>\n<li>\n<p>If the <em>warnings</em> attribute is set to <em>False</em> (or any other\nPython literal that evaluates to boolean false) then no warning\nmessage is printed if the included file does not exist. By default\n<em>warnings</em> are enabled.</p>\n</li>\n<li>\n<p>Internally the <code>include1</code> macro is translated to the <code>include1</code>\nsystem attribute which means it must be evaluated in a region where\nattribute substitution is enabled. To inhibit nested substitution in\nincluded files it is preferable to use the <code>include</code> macro and set\nthe attribute <code>depth=1</code>.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_conditional_inclusion_macros\">21.3.2. Conditional Inclusion Macros</h4>\n<div class=\"paragraph\">\n<p>Lines of text in the source document can be selectively included or\nexcluded from processing based on the existence (or not) of a document\nattribute.</p>\n</div>\n<div class=\"paragraph\">\n<p>Document text between the <code>ifdef</code> and <code>endif</code> macros is included if a\ndocument attribute is defined:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>ifdef::&lt;attribute&gt;[]\n:\nendif::&lt;attribute&gt;[]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Document text between the <code>ifndef</code> and <code>endif</code> macros is not included\nif a document attribute is defined:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>ifndef::&lt;attribute&gt;[]\n:\nendif::&lt;attribute&gt;[]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><code>&lt;attribute&gt;</code> is an attribute name which is optional in the trailing\n<code>endif</code> macro.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you only want to process a single line of text then the text can be\nput inside the square brackets and the <code>endif</code> macro omitted, for\nexample:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>ifdef::revnumber[Version number 42]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Is equivalent to:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>ifdef::revnumber[]\nVersion number 42\nendif::revnumber[]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><em>ifdef</em> and <em>ifndef</em> macros also accept multiple attribute names:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Multiple <em>,</em> separated attribute names evaluate to defined if one\nor more of the attributes is defined, otherwise it&#8217;s value is\nundefined.</p>\n</li>\n<li>\n<p>Multiple <em>+</em> separated attribute names evaluate to defined if all\nof the attributes is defined, otherwise it&#8217;s value is undefined.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Document text between the <code>ifeval</code> and <code>endif</code> macros is included if\nthe Python expression inside the square brackets is true. Example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>ifeval::[{rs458}==2]\n:\nendif::[]</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Document attribute references are expanded before the expression is\nevaluated.</p>\n</li>\n<li>\n<p>If an attribute reference is undefined then the expression is\nconsidered false.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Take a look at the <code>*.conf</code> configuration files in the AsciiDoc\ndistribution for examples of conditional inclusion macro usage.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_executable_system_macros\">21.3.3. Executable system macros</h4>\n<div class=\"paragraph\">\n<p>The <em>eval</em>, <em>sys</em> and <em>sys2</em> block macros exhibit the same behavior as\ntheir same named <a href=\"#X24\">system attribute references</a>. The difference\nis that system macros occur in a block macro context whereas system\nattributes are confined to inline contexts where attribute\nsubstitution is enabled.</p>\n</div>\n<div class=\"paragraph\">\n<p>The following example displays a long directory listing inside a\nliteral block:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>------------------\nsys::[ls -l *.txt]\n------------------</pre>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nThere are no block macro versions of the <em>eval3</em> and <em>sys3</em>\nsystem attributes.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_template_system_macro\">21.3.4. Template System Macro</h4>\n<div class=\"paragraph\">\n<p>The <code>template</code> block macro allows the inclusion of one configuration\nfile template section within another.  The following example includes\nthe <code>[admonitionblock]</code> section in the <code>[admonitionparagraph]</code>\nsection:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[admonitionparagraph]\ntemplate::[admonitionblock]</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Template macro behavior</div>\n<ul>\n<li>\n<p>The <code>template::[]</code> macro is useful for factoring configuration file\nmarkup.</p>\n</li>\n<li>\n<p><code>template::[]</code> macros cannot be nested.</p>\n</li>\n<li>\n<p><code>template::[]</code> macro expansion is applied after all configuration\nfiles have been read.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X77\">21.4. Passthrough macros</h3>\n<div class=\"paragraph\">\n<p>Passthrough macros are analogous to <a href=\"#X76\">passthrough blocks</a> and are\nused to pass text directly to the output. The substitution performed\non the text is determined by the macro definition but can be overridden\nby the <code>&lt;subslist&gt;</code>.  The usual syntax is\n<code>&lt;name&gt;:&lt;subslist&gt;[&lt;passtext&gt;]</code> (for inline macros) and\n<code>&lt;name&gt;::&lt;subslist&gt;[&lt;passtext&gt;]</code> (for block macros). Passthroughs, by\ndefinition, take precedence over all other text substitutions.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">pass</dt>\n<dd>\n<p>Inline and block. Passes text unmodified (apart from explicitly\nspecified substitutions). Examples:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>pass:[&lt;q&gt;To be or not to be&lt;/q&gt;]\npass:attributes,quotes[&lt;u&gt;the '{author}'&lt;/u&gt;]</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">asciimath, latexmath</dt>\n<dd>\n<p>Inline and block. Passes text unmodified.  Used for\n<a href=\"#X78\">mathematical formulas</a>.</p>\n</dd>\n<dt class=\"hdlist1\">+++</dt>\n<dd>\n<p>Inline and block. The triple-plus passthrough is functionally\nidentical to the <em>pass</em> macro but you don&#8217;t have to escape <code>]</code>\ncharacters and you can prefix with quoted attributes in the inline\nversion. Example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Red [red]+++`sum_(i=1)\\^n i=(n(n+1))/2`$+++ AsciiMath formula</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">$$</dt>\n<dd>\n<p>Inline and block. The double-dollar passthrough is functionally\nidentical to the triple-plus passthrough with one exception: special\ncharacters are escaped. Example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$$`[[a,b],[c,d]]((n),(k))`$$</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\"><a id=\"X80\"></a>`</dt>\n<dd>\n<p>Text quoted with single backtick characters constitutes an <em>inline\nliteral</em> passthrough. The enclosed text is rendered in a monospaced\nfont and is only subject to special character substitution.  This\nmakes sense since monospace text is usually intended to be rendered\nliterally and often contains characters that would otherwise have to\nbe escaped. If you need monospaced text containing inline\nsubstitutions use a <a href=\"#X81\">plus character instead of a backtick</a>.</p>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_macro_definitions\">21.5. Macro Definitions</h3>\n<div class=\"paragraph\">\n<p>Each entry in the configuration <code>[macros]</code> section is a macro\ndefinition which can take one of the following forms:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><code>&lt;pattern&gt;=&lt;name&gt;[&lt;subslist]</code></dt>\n<dd>\n<p>Inline macro definition.</p>\n</dd>\n<dt class=\"hdlist1\"><code>&lt;pattern&gt;=#&lt;name&gt;[&lt;subslist]</code></dt>\n<dd>\n<p>Block macro definition.</p>\n</dd>\n<dt class=\"hdlist1\"><code>&lt;pattern&gt;=+&lt;name&gt;[&lt;subslist]</code></dt>\n<dd>\n<p>System macro definition.</p>\n</dd>\n<dt class=\"hdlist1\"><code>&lt;pattern&gt;</code></dt>\n<dd>\n<p>Delete the existing macro with this <code>&lt;pattern&gt;</code>.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p><code>&lt;pattern&gt;</code> is a Python regular expression and <code>&lt;name&gt;</code> is the name of\na markup template. If <code>&lt;name&gt;</code> is omitted then it is the value of the\nregular expression match group named <em>name</em>.  The optional\n<code>[&lt;subslist]</code> is a comma-separated list of substitution names enclosed\nin <code>[]</code> brackets, it sets the default substitutions for passthrough\ntext, if omitted then no passthrough substitutions are performed.</p>\n</div>\n<div class=\"paragraph\">\n<div class=\"title\">Pattern named groups</div>\n<p>The following named groups can be used in macro <code>&lt;pattern&gt;</code> regular\nexpressions and are available as markup template attributes:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">name</dt>\n<dd>\n<p>The macro name.</p>\n</dd>\n<dt class=\"hdlist1\">target</dt>\n<dd>\n<p>The macro target.</p>\n</dd>\n<dt class=\"hdlist1\">attrlist</dt>\n<dd>\n<p>The macro attribute list.</p>\n</dd>\n<dt class=\"hdlist1\">passtext</dt>\n<dd>\n<p>Contents of this group are passed unmodified to the output subject\nonly to <em>subslist</em> substitutions.</p>\n</dd>\n<dt class=\"hdlist1\">subslist</dt>\n<dd>\n<p>Processed as a comma-separated list of substitution names for\n<em>passtext</em> substitution, overrides the the macro definition\n<em>subslist</em>.</p>\n</dd>\n</dl>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Here&#8217;s what happens during macro substitution</div>\n<ul>\n<li>\n<p>Each contextually relevant macro <em>pattern</em> from the <code>[macros]</code>\nsection is matched against the input source line.</p>\n</li>\n<li>\n<p>If a match is found the text to be substituted is loaded from a\nconfiguration markup template section named like\n<code>&lt;name&gt;-inlinemacro</code> or <code>&lt;name&gt;-blockmacro</code> (depending on the macro\ntype).</p>\n</li>\n<li>\n<p>Global and macro attribute list attributes are substituted in the\nmacro&#8217;s markup template.</p>\n</li>\n<li>\n<p>The substituted template replaces the macro reference in the output\ndocument.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X98\">22. HTML 5 audio and video block macros</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The <em>html5</em> backend <em>audio</em> and <em>video</em> block macros generate the HTML\n5 <em>audio</em> and <em>video</em> elements respectively.  They follow the usual\nAsciiDoc block macro syntax <code>&lt;name&gt;::&lt;target&gt;[&lt;attrlist&gt;]</code> where:</p>\n</div>\n<div class=\"hdlist\">\n<table>\n<tr>\n<td class=\"hdlist1\">\n<code>&lt;name&gt;</code>\n</td>\n<td class=\"hdlist2\">\n<p><em>audio</em> or <em>video</em>.</p>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\n<code>&lt;target&gt;</code>\n</td>\n<td class=\"hdlist2\">\n<p>The URL or file name of the video or audio file.</p>\n</td>\n</tr>\n<tr>\n<td class=\"hdlist1\">\n<code>&lt;attrlist&gt;</code>\n</td>\n<td class=\"hdlist2\">\n<p>A list of named attributes (see below).</p>\n</td>\n</tr>\n</table>\n</div>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<caption class=\"title\">Table 4. Audio macro attributes</caption>\n<colgroup>\n<col style=\"width: 16.6666%;\">\n<col style=\"width: 83.3334%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Name</th>\n<th class=\"tableblock halign-left valign-top\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">options</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">A comma separated list of one or more of the following items:\n<em>autoplay</em>, <em>loop</em> which correspond to the same-named HTML 5 <em>audio</em>\nelement boolean attributes.  By default the player <em>controls</em> are\nenabled, include the <em>nocontrols</em> option value to hide them.</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<caption class=\"title\">Table 5. Video macro attributes</caption>\n<colgroup>\n<col style=\"width: 16.6666%;\">\n<col style=\"width: 83.3334%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Name</th>\n<th class=\"tableblock halign-left valign-top\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">height</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The height of the player in pixels.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">width</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The width of the player in pixels.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">poster</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The URL or file name of an image representing the video.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">options</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">A comma separated list of one or more of the following items:\n<em>autoplay</em>, <em>loop</em> and <em>nocontrols</em>. The <em>autoplay</em> and <em>loop</em> options\ncorrespond to the same-named HTML 5 <em>video</em> element boolean\nattributes.  By default the player <em>controls</em> are enabled, include the\n<em>nocontrols</em> option value to hide them.</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"paragraph\">\n<p>Examples:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>audio::example.ogg[]\n\nvideo::gizmo.ogv[width=200,options=\"nocontrols,autoplay\"]\n\n.Example video\nvideo::gizmo.ogv[]\n\nvideo::http://www.808.dk/pics/video/gizmo.ogv[]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If your needs are more complex put raw HTML 5 in a markup block, for\nexample (from <a href=\"http://www.808.dk/?code-html-5-video\" class=\"bare\">http://www.808.dk/?code-html-5-video</a>):</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>++++\n&lt;video poster=\"pics/video/gizmo.jpg\" id=\"video\" style=\"cursor: pointer;\" &gt;\n  &lt;source src=\"pics/video/gizmo.mp4\" /&gt;\n  &lt;source src=\"pics/video/gizmo.webm\" type=\"video/webm\" /&gt;\n  &lt;source src=\"pics/video/gizmo.ogv\" type=\"video/ogg\" /&gt;\n  Video not playing? &lt;a href=\"pics/video/gizmo.mp4\"&gt;Download file&lt;/a&gt; instead.\n&lt;/video&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n  var video = document.getElementById('video');\n  video.addEventListener('click',function(){\n    video.play();\n  },false);\n&lt;/script&gt;\n++++</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_tables\">23. Tables</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The AsciiDoc table syntax looks and behaves like other delimited block\ntypes and supports standard <a href=\"#X73\">block configuration entries</a>.\nFormatting is easy to read and, just as importantly, easy to enter.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Cells and columns can be formatted using built-in customizable styles.</p>\n</li>\n<li>\n<p>Horizontal and vertical cell alignment can be set on columns and\ncell.</p>\n</li>\n<li>\n<p>Horizontal and vertical cell spanning is supported.</p>\n</li>\n</ul>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Use tables sparingly</div>\n<div class=\"paragraph\">\n<p>When technical users first start creating documents, tables (complete\nwith column spanning and table nesting) are often considered very\nimportant. The reality is that tables are seldom used, even in\ntechnical documentation.</p>\n</div>\n<div class=\"paragraph\">\n<p>Try this exercise: thumb through your library of technical books,\nyou&#8217;ll be surprised just how seldom tables are actually used, even\nless seldom are tables containing block elements (such as paragraphs\nor lists) or spanned cells. This is no accident, like figures, tables\nare outside the normal document flow&#8201;&#8212;&#8201;tables are for consulting not\nfor reading.</p>\n</div>\n<div class=\"paragraph\">\n<p>Tables are designed for, and should normally only be used for,\ndisplaying column oriented tabular data.</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_example_tables\">23.1. Example tables</h3>\n<table class=\"tableblock frame-all grid-all\" style=\"width: 15%;\">\n<caption class=\"title\">Table 6. Simple table</caption>\n<colgroup>\n<col style=\"width: 33.3333%;\">\n<col style=\"width: 33.3333%;\">\n<col style=\"width: 33.3334%;\">\n</colgroup>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">1</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">A</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">3</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">4</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">B</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">5</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">6</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">C</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"listingblock\">\n<div class=\"title\">AsciiDoc source</div>\n<div class=\"content\">\n<pre>[width=\"15%\"]\n|=======\n|1 |2 |A\n|3 |4 |B\n|5 |6 |C\n|=======</pre>\n</div>\n</div>\n<table class=\"tableblock frame-ends grid-all\" style=\"width: 50%;\">\n<caption class=\"title\">Table 7. Columns formatted with strong, monospaced and emphasis styles</caption>\n<colgroup>\n<col style=\"width: 33.3333%;\">\n<col style=\"width: 33.3333%;\">\n<col style=\"width: 33.3334%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-right valign-top\"></th>\n<th class=\"tableblock halign-center valign-top\" colspan=\"2\">Columns 2 and 3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-right valign-top\"><p class=\"tableblock\"><strong>1</strong></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>Item 1</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>Item 1</em></p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-right valign-top\"><p class=\"tableblock\"><strong>2</strong></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>Item 2</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>Item 2</em></p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-right valign-top\"><p class=\"tableblock\"><strong>3</strong></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>Item 3</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>Item 3</em></p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-right valign-top\"><p class=\"tableblock\"><strong>4</strong></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>Item 4</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>Item 4</em></p></td>\n</tr>\n</tbody>\n<tfoot>\n<tr>\n<td class=\"tableblock halign-right valign-top\"><p class=\"tableblock\"><strong>footer 1</strong></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><code>footer 2</code></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>footer 3</em></p></td>\n</tr>\n</tfoot>\n</table>\n<div class=\"listingblock\">\n<div class=\"title\">AsciiDoc source</div>\n<div class=\"content\">\n<pre>.An example table\n[width=\"50%\",cols=\"&gt;s,^m,e\",frame=\"topbot\",options=\"header,footer\"]\n|==========================\n|      2+|Columns 2 and 3\n|1       |Item 1  |Item 1\n|2       |Item 2  |Item 2\n|3       |Item 3  |Item 3\n|4       |Item 4  |Item 4\n|footer 1|footer 2|footer 3\n|==========================</pre>\n</div>\n</div>\n<table class=\"tableblock frame-all grid-all\" style=\"width: 80%;\">\n<caption class=\"title\">Table 8. Horizontal and vertical source data</caption>\n<colgroup>\n<col style=\"width: 17.647%;\">\n<col style=\"width: 11.7647%;\">\n<col style=\"width: 11.7647%;\">\n<col style=\"width: 58.8236%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Date</th>\n<th class=\"tableblock halign-center valign-top\">Duration</th>\n<th class=\"tableblock halign-center valign-top\">Avg HR</th>\n<th class=\"tableblock halign-left valign-top\">Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">22-Aug-08</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">10:24</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">157</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Worked out MSHR (max sustainable heart rate) by going hard\nfor this interval.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">22-Aug-08</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">23:03</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">152</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Back-to-back with previous interval.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">24-Aug-08</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">40:00</p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">145</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Moderately hard interspersed with 3x 3min intervals (2min\nhard + 1min really hard taking the HR up to 160).</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"paragraph\">\n<p>Short cells can be entered horizontally, longer cells vertically.  The\ndefault behavior is to strip leading and trailing blank lines within a\ncell. These characteristics aid readability and data entry.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">AsciiDoc source</div>\n<div class=\"content\">\n<pre>.Windtrainer workouts\n[width=\"80%\",cols=\"3,^2,^2,10\",options=\"header\"]\n|=========================================================\n|Date |Duration |Avg HR |Notes\n\n|22-Aug-08 |10:24 | 157 |\nWorked out MSHR (max sustainable heart rate) by going hard\nfor this interval.\n\n|22-Aug-08 |23:03 | 152 |\nBack-to-back with previous interval.\n\n|24-Aug-08 |40:00 | 145 |\nModerately hard interspersed with 3x 3min intervals (2min\nhard + 1min really hard taking the HR up to 160).\n\n|=========================================================</pre>\n</div>\n</div>\n<table class=\"tableblock frame-all grid-all stretch\">\n<caption class=\"title\">Table 9. A table with externally sourced CSV data</caption>\n<colgroup>\n<col style=\"width: 11.1111%;\">\n<col style=\"width: 22.2222%;\">\n<col style=\"width: 22.2222%;\">\n<col style=\"width: 22.2222%;\">\n<col style=\"width: 22.2223%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-center valign-top\">ID</th>\n<th class=\"tableblock halign-left valign-top\">Customer Name</th>\n<th class=\"tableblock halign-left valign-top\">Contact Name</th>\n<th class=\"tableblock halign-left valign-top\">Customer Address</th>\n<th class=\"tableblock halign-left valign-top\">Phone</th>\n</tr>\n</thead>\n</table>\n<div class=\"listingblock\">\n<div class=\"title\">AsciiDoc source</div>\n<div class=\"content\">\n<pre>[format=\"csv\",cols=\"^1,4*2\",options=\"header\"]\n|===================================================\nID,Customer Name,Contact Name,Customer Address,Phone\ninclude::customers.csv[]\n|===================================================</pre>\n</div>\n</div>\n<table class=\"tableblock frame-all grid-all\" style=\"width: 25%;\">\n<caption class=\"title\">Table 10. Cell spans, alignments and styles</caption>\n<colgroup>\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n</colgroup>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>1</em></p></td>\n<td class=\"tableblock halign-right valign-top\"><p class=\"tableblock\"><strong>2</strong></p></td>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\">3</p></td>\n<td class=\"tableblock halign-right valign-top\"><p class=\"tableblock\"><strong>4</strong></p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><em>5</em></p></td>\n<td class=\"tableblock halign-center valign-middle\" colspan=\"2\" rowspan=\"2\"><p class=\"tableblock\"><code>6</code></p></td>\n<td class=\"tableblock halign-left valign-bottom\" rowspan=\"3\"><p class=\"tableblock\"><code>7</code></p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-center valign-top\"><p class=\"tableblock\"><em>8</em></p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>9</em></p></td>\n<td class=\"tableblock halign-right valign-top\" colspan=\"2\"><p class=\"tableblock\"><code>10</code></p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"listingblock\">\n<div class=\"title\">AsciiDoc source</div>\n<div class=\"content\">\n<pre>[cols=\"e,m,^,&gt;s\",width=\"25%\"]\n|============================\n|1 &gt;s|2 |3 |4\n^|5 2.2+^.^|6 .3+&lt;.&gt;m|7\n^|8\n|9 2+&gt;|10\n|============================</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X68\">23.2. Table input data formats</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc table data can be <em>psv</em>, <em>dsv</em> or <em>csv</em> formatted.  The\ndefault table format is <em>psv</em>.</p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc <em>psv</em> (<em>Prefix Separated Values</em>) and <em>dsv</em> (<em>Delimiter\nSeparated Values</em>) formats are cell oriented&#8201;&#8212;&#8201;the table is treated\nas a sequence of cells&#8201;&#8212;&#8201;there are no explicit row separators.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><em>psv</em> prefixes each cell with a separator whereas <em>dsv</em> delimits\ncells with a separator.</p>\n</li>\n<li>\n<p><em>psv</em> and <em>dsv</em> separators are Python regular expressions.</p>\n</li>\n<li>\n<p>The default <em>psv</em> separator contains <a href=\"#X84\">cell specifier</a> related\nnamed regular expression groups.</p>\n</li>\n<li>\n<p>The default <em>dsv</em> separator is <code>:|\\n</code> (a colon or a new line\ncharacter).</p>\n</li>\n<li>\n<p><em>psv</em> and <em>dsv</em> cell separators can be escaped by preceding them\nwith a backslash character.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Here are four <em>psv</em> cells (the second item spans two columns; the\nlast contains an escaped separator):</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>|One 2+|Two and three |A \\| separator character</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><em>csv</em>  is the quasi-standard row oriented <em>Comma Separated Values\n(CSV)</em> format commonly used to import and export spreadsheet and\ndatabase data.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X69\">23.3. Table attributes</h3>\n<div class=\"paragraph\">\n<p>Tables can be customized by the following attributes:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">format</dt>\n<dd>\n<p><em>psv</em> (default), <em>dsv</em> or <em>csv</em> (See <a href=\"#X68\">Table Data Formats</a>).</p>\n</dd>\n<dt class=\"hdlist1\">separator</dt>\n<dd>\n<p>The cell separator. A Python regular expression (<em>psv</em> and <em>dsv</em>\nformats) or a single character (<em>csv</em> format).</p>\n</dd>\n<dt class=\"hdlist1\">frame</dt>\n<dd>\n<p>Defines the table border and can take the following values: <em>topbot</em>\n(top and bottom), <em>all</em> (all sides), <em>none</em> and <em>sides</em> (left and\nright sides). The default value is <em>all</em>.</p>\n</dd>\n<dt class=\"hdlist1\">grid</dt>\n<dd>\n<p>Defines which ruler lines are drawn between table rows and columns.\nThe <em>grid</em> attribute value can be any of the following values: <em>none</em>,\n<em>cols</em>, <em>rows</em> and <em>all</em>. The default value is <em>all</em>.</p>\n</dd>\n<dt class=\"hdlist1\">align</dt>\n<dd>\n<p>Use the <em>align</em> attribute to horizontally align the table on the\npage (works with HTML outputs only, has no effect on DocBook outputs).\nThe following values are valid: <em>left</em>, <em>right</em>, and <em>center</em>.</p>\n</dd>\n<dt class=\"hdlist1\">float</dt>\n<dd>\n<p>Use the <em>float</em> attribute to float the table <em>left</em> or <em>right</em> on the\npage (works with HTML outputs only, has no effect on DocBook outputs).\nFloating only makes sense in conjunction with a table <em>width</em>\nattribute value of less than 100% (otherwise the table will take up\nall the available space).  <em>float</em> and <em>align</em> attributes are mutually\nexclusive.  Use the <code>unfloat::[]</code> block macro to stop floating.</p>\n</dd>\n<dt class=\"hdlist1\">halign</dt>\n<dd>\n<p>Use the <em>halign</em> attribute to horizontally align all cells in a table.\nThe following values are valid: <em>left</em>, <em>right</em>, and <em>center</em>\n(defaults to <em>left</em>). Overridden by <a href=\"#X70\">Column specifiers</a>  and\n<a href=\"#X84\">Cell specifiers</a>.</p>\n</dd>\n<dt class=\"hdlist1\">valign</dt>\n<dd>\n<p>Use the <em>valign</em> attribute to vertically align all cells in a table.\nThe following values are valid: <em>top</em>, <em>bottom</em>, and <em>middle</em>\n(defaults to <em>top</em>). Overridden by <a href=\"#X70\">Column specifiers</a>  and\n<a href=\"#X84\">Cell specifiers</a>.</p>\n</dd>\n<dt class=\"hdlist1\">options</dt>\n<dd>\n<p>The <em>options</em> attribute can contain comma separated values, for\nexample: <em>header</em>, <em>footer</em>. By default header and footer rows are\nomitted.  See <a href=\"#X74\">attribute options</a> for a complete list of\navailable table options.</p>\n</dd>\n<dt class=\"hdlist1\">cols</dt>\n<dd>\n<p>The <em>cols</em> attribute is a comma separated list of <a href=\"#X70\">column\nspecifiers</a>. For example <code>cols=\"2&lt;p,2*,4p,&gt;\"</code>.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>If <em>cols</em> is present it must specify all columns.</p>\n</li>\n<li>\n<p>If the <em>cols</em> attribute is not specified the number of columns is\ncalculated as the number of data items in the <strong>first line</strong> of the\ntable.</p>\n</li>\n<li>\n<p>The degenerate form for the <em>cols</em> attribute is an integer\nspecifying the number of columns e.g. <code>cols=4</code>.</p>\n</li>\n</ul>\n</div>\n</dd>\n<dt class=\"hdlist1\">width</dt>\n<dd>\n<p>The <em>width</em> attribute is expressed as a percentage value\n(<em>\"1%\"</em>&#8230;&#8203;<em>\"99%\"</em>). The width specifies the table width relative to\nthe available width. HTML backends use this value to set the table\nwidth attribute. It&#8217;s a bit more complicated with DocBook, see the\n<a href=\"#X89\">DocBook table widths</a> sidebar.</p>\n</dd>\n<dt class=\"hdlist1\">filter</dt>\n<dd>\n<p>The <em>filter</em> attribute defines an external shell command that is\ninvoked for each cell. The built-in <em>asciidoc</em> table style is\nimplemented using a filter.</p>\n</dd>\n</dl>\n</div>\n<div id=\"X89\" class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">DocBook table widths</div>\n<div class=\"paragraph\">\n<p>The AsciiDoc docbook backend generates CALS tables. CALS tables do not\nsupport a table width attribute&#8201;&#8212;&#8201;table width can only be controlled\nby specifying absolute column widths.</p>\n</div>\n<div class=\"paragraph\">\n<p>Specifying absolute column widths is not media independent because\ndifferent presentation media have different physical dimensions. To\nget round this limitation both\n<a href=\"http://www.sagehill.net/docbookxsl/Tables.html#TableWidth\">DocBook XSL\nStylesheets</a> and\n<a href=\"http://dblatex.sourceforge.net/doc/manual/ch03s05.html#sec-table-width\">dblatex</a>\nhave implemented table width processing instructions for setting the\ntable width as a percentage of the available width. AsciiDoc emits\nthese processing instructions if the <em>width</em> attribute is set along\nwith proportional column widths (the AsciiDoc docbook backend\n<em>pageunits</em> attribute defaults to <em>*</em>).</p>\n</div>\n<div class=\"paragraph\">\n<p>To generate DocBook tables with absolute column widths set the\n<em>pageunits</em> attribute to a CALS absolute unit such as <em>pt</em> and set the\n<em>pagewidth</em> attribute to match the width of the presentation media.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X70\">23.4. Column Specifiers</h3>\n<div class=\"paragraph\">\n<p>Column specifiers define how columns are rendered and appear in the\ntable <a href=\"#X69\">cols attribute</a>.  A column specifier consists of an\noptional column multiplier followed by optional alignment, width and\nstyle values and is formatted like:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[&lt;multiplier&gt;*][&lt;align&gt;][&lt;width&gt;][&lt;style&gt;]</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>All components are optional. The multiplier must be first and the\nstyle last. The order of <code>&lt;align&gt;</code> or <code>&lt;width&gt;</code> is not important.</p>\n</li>\n<li>\n<p>Column <code>&lt;width&gt;</code> can be either an integer proportional value (1&#8230;&#8203;)\nor a percentage (1%&#8230;&#8203;100%). The default value is 1. To ensure\nportability across different backends, there is no provision for\nabsolute column widths (not to be confused with output column width\n<a href=\"#X72\">markup attributes</a> which are available in both percentage and\nabsolute units).</p>\n</li>\n<li>\n<p>The <em>&lt;align&gt;</em> column alignment specifier is formatted like:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[&lt;horizontal&gt;][.&lt;vertical&gt;]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Where <code>&lt;horizontal&gt;</code> and <code>&lt;vertical&gt;</code> are one of the following\ncharacters: <code>&lt;</code>, <code>^</code> or <code>&gt;</code> which represent <em>left</em>, <em>center</em> and\n<em>right</em> horizontal alignment or <em>top</em>, <em>middle</em> and <em>bottom</em> vertical\nalignment respectively.</p>\n</div>\n</li>\n<li>\n<p>A <code>&lt;multiplier&gt;</code> can be used to specify repeated columns e.g.\n<code>cols=\"4*&lt;\"</code> specifies four left-justified columns. The default\nmultiplier value is 1.</p>\n</li>\n<li>\n<p>The <code>&lt;style&gt;</code> name specifies a <a href=\"#X71\">table style</a> to used to markup\ncolumn cells (you can use the full style names if you wish but the\nfirst letter is normally sufficient).</p>\n</li>\n<li>\n<p>Column specific styles are not applied to header rows.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X84\">23.5. Cell Specifiers</h3>\n<div class=\"paragraph\">\n<p>Cell specifiers allow individual cells in <em>psv</em> formatted tables to be\nspanned, multiplied, aligned and styled.  Cell specifiers prefix <em>psv</em>\n<code>|</code> delimiters and are formatted like:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[&lt;span&gt;*|+][&lt;align&gt;][&lt;style&gt;]</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><em>&lt;span&gt;</em> specifies horizontal and vertical cell spans (<em>+</em> operator) or\nthe number of times the cell is replicated (<em>*</em> operator). <em>&lt;span&gt;</em>\nis formatted like:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[&lt;colspan&gt;][.&lt;rowspan&gt;]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Where <code>&lt;colspan&gt;</code> and <code>&lt;rowspan&gt;</code> are integers specifying the number of\ncolumns and rows to span.</p>\n</div>\n</li>\n<li>\n<p><code>&lt;align&gt;</code> specifies horizontal and vertical cell alignment an is the\nsame as in <a href=\"#X70\">column specifiers</a>.</p>\n</li>\n<li>\n<p>A <code>&lt;style&gt;</code> value is the first letter of <a href=\"#X71\">table style</a> name.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>For example, the following <em>psv</em> formatted cell will span two columns\nand the text will be centered and emphasized:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>`2+^e| Cell text`</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X71\">23.6. Table styles</h3>\n<div class=\"paragraph\">\n<p>Table styles can be applied to the entire table (by setting the\n<em>style</em> attribute in the table&#8217;s attribute list) or on a per column\nbasis (by specifying the style in the table&#8217;s <a href=\"#X69\">cols attribute</a>).\nTable data can be formatted using the following predefined styles:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">default</dt>\n<dd>\n<p>The default style: AsciiDoc inline text formatting; blank lines are\ntreated as paragraph breaks.</p>\n</dd>\n<dt class=\"hdlist1\">emphasis</dt>\n<dd>\n<p>Like default but all text is emphasised.</p>\n</dd>\n<dt class=\"hdlist1\">monospaced</dt>\n<dd>\n<p>Like default but all text is in a monospaced font.</p>\n</dd>\n<dt class=\"hdlist1\">strong</dt>\n<dd>\n<p>Like default but all text is bold.</p>\n</dd>\n<dt class=\"hdlist1\">header</dt>\n<dd>\n<p>Apply the same style as the table header. Normally used to create a\nvertical header in the first column.</p>\n</dd>\n<dt class=\"hdlist1\">asciidoc</dt>\n<dd>\n<p>With this style table cells can contain any of the AsciiDoc elements\nthat are allowed inside document sections. This style runs asciidoc(1)\nas a filter to process cell contents. See also <a href=\"#X83\">Docbook table\nlimitations</a>.</p>\n</dd>\n<dt class=\"hdlist1\">literal</dt>\n<dd>\n<p>No text formatting; monospaced font; all line breaks are retained\n(the same as the AsciiDoc <a href=\"#X65\">LiteralBlock</a> element).</p>\n</dd>\n<dt class=\"hdlist1\">verse</dt>\n<dd>\n<p>All line breaks are retained (just like the AsciiDoc <a href=\"#X94\">verse\nparagraph style</a>).</p>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X72\">23.7. Markup attributes</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc makes a number of attributes available to table markup\ntemplates and tags. Column specific attributes are available when\nsubstituting the <em>colspec</em> cell data tags.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">pageunits</dt>\n<dd>\n<p>DocBook backend only. Specifies table column absolute width units.\nDefaults to <em>*</em>.</p>\n</dd>\n<dt class=\"hdlist1\">pagewidth</dt>\n<dd>\n<p>DocBook backend only. The nominal output page width in <em>pageunit</em>\nunits. Used to calculate CALS tables absolute column and table\nwidths. Defaults to <em>425</em>.</p>\n</dd>\n<dt class=\"hdlist1\">tableabswidth</dt>\n<dd>\n<p>Integer value calculated from <em>width</em> and <em>pagewidth</em> attributes.\nIn <em>pageunit</em> units.</p>\n</dd>\n<dt class=\"hdlist1\">tablepcwidth</dt>\n<dd>\n<p>Table width expressed as a percentage of the available width. Integer\nvalue (0..100).</p>\n</dd>\n<dt class=\"hdlist1\">colabswidth</dt>\n<dd>\n<p>Integer value calculated from <em>cols</em> column width, <em>width</em> and\n<em>pagewidth</em> attributes.  In <em>pageunit</em> units.</p>\n</dd>\n<dt class=\"hdlist1\">colpcwidth</dt>\n<dd>\n<p>Column width expressed as a percentage of the table width. Integer\nvalue (0..100).</p>\n</dd>\n<dt class=\"hdlist1\">colcount</dt>\n<dd>\n<p>Total number of table columns.</p>\n</dd>\n<dt class=\"hdlist1\">rowcount</dt>\n<dd>\n<p>Total number of table rows.</p>\n</dd>\n<dt class=\"hdlist1\">halign</dt>\n<dd>\n<p>Horizontal cell content alignment: <em>left</em>, <em>right</em> or <em>center</em>.</p>\n</dd>\n<dt class=\"hdlist1\">valign</dt>\n<dd>\n<p>Vertical cell content alignment: <em>top</em>, <em>bottom</em> or <em>middle</em>.</p>\n</dd>\n<dt class=\"hdlist1\">colnumber, colstart</dt>\n<dd>\n<p>The number of the leftmost column occupied by the cell (1&#8230;&#8203;).</p>\n</dd>\n<dt class=\"hdlist1\">colend</dt>\n<dd>\n<p>The number of the rightmost column occupied by the cell (1&#8230;&#8203;).</p>\n</dd>\n<dt class=\"hdlist1\">colspan</dt>\n<dd>\n<p>Number of columns the cell should span.</p>\n</dd>\n<dt class=\"hdlist1\">rowspan</dt>\n<dd>\n<p>Number of rows the cell should span (1&#8230;&#8203;).</p>\n</dd>\n<dt class=\"hdlist1\">morerows</dt>\n<dd>\n<p>Number of additional rows the cell should span (0&#8230;&#8203;).</p>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_nested_tables\">23.8. Nested tables</h3>\n<div class=\"paragraph\">\n<p>An alternative <em>psv</em> separator character <em>!</em> can be used (instead of\n<em>|</em>) in nested tables. This allows a single level of table nesting.\nColumns containing nested tables must use the <em>asciidoc</em> style. An\nexample can be found in <code>./examples/website/newtables.txt</code>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X83\">23.9. DocBook table limitations</h3>\n<div class=\"paragraph\">\n<p>Fully implementing tables is not trivial, some DocBook toolchains do\nbetter than others.  AsciiDoc HTML table outputs are rendered\ncorrectly in all the popular browsers&#8201;&#8212;&#8201;if your DocBook generated\ntables don&#8217;t look right compare them with the output generated by the\nAsciiDoc <em>xhtml11</em> backend or try a different DocBook toolchain.  Here\nis a list of things to be aware of:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Although nested tables are not legal in DocBook 4 the FOP and\ndblatex toolchains will process them correctly.  If you use <code>a2x(1)</code>\nyou will need to include the <code>--no-xmllint</code> option to suppress\nDocBook validation errors.</p>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nIn theory you can nest DocBook 4 tables one level using the\n<em>entrytbl</em> element, but not all toolchains process <em>entrytbl</em>.\n</td>\n</tr>\n</table>\n</div>\n</li>\n<li>\n<p>DocBook only allows a subset of block elements inside table cells so\nnot all AsciiDoc elements produce valid DocBook inside table cells.\nIf you get validation errors running <code>a2x(1)</code> try the <code>--no-xmllint</code>\noption, toolchains will often process nested block elements such as\nsidebar blocks and floating titles correctly even though, strictly\nspeaking, they are not legal.</p>\n</li>\n<li>\n<p>Text formatting in cells using the <em>monospaced</em> table style will\nraise validation errors because the DocBook <em>literal</em> element was\nnot designed to support formatted text (using the <em>literal</em> element\nis a kludge on the part of AsciiDoc as there is no easy way to set\nthe font style in DocBook.</p>\n</li>\n<li>\n<p>Cell alignments are ignored for <em>verse</em>, <em>literal</em> or <em>asciidoc</em>\ntable styles.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X1\">24. Manpage Documents</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Sooner or later, if you program in a UNIX environment, you&#8217;re going\nto have to write a man page.</p>\n</div>\n<div class=\"paragraph\">\n<p>By observing a couple of additional conventions (detailed below) you\ncan write AsciiDoc files that will generate HTML and PDF man pages\nplus the native manpage roff format.  The easiest way to generate roff\nmanpages from AsciiDoc source is to use the a2x(1) command. The\nfollowing example generates a roff formatted manpage file called\n<code>asciidoc.1</code> (a2x(1) uses asciidoc(1) to convert <code>asciidoc.1.txt</code> to\nDocBook which it then converts to roff using DocBook XSL Stylesheets):</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>a2x --doctype manpage --format manpage asciidoc.1.txt</pre>\n</div>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Viewing and printing manpage files</div>\n<div class=\"paragraph\">\n<p>Use the <code>man(1)</code> command to view the manpage file:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ man -l asciidoc.1</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>To print a high quality man page to a postscript printer:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ man -l -Tps asciidoc.1 | lpr</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You could also create a PDF version of the man page by converting\nPostScript to PDF using <code>ps2pdf(1)</code>:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ man -l -Tps asciidoc.1 | ps2pdf - asciidoc.1.pdf</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <code>ps2pdf(1)</code> command is included in the Ghostscript distribution.</p>\n</div>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>To find out more about man pages view the <code>man(7)</code> manpage\n(<code>man 7 man</code> and <code>man man-pages</code> commands).</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_document_header\">24.1. Document Header</h3>\n<div class=\"paragraph\">\n<p>A manpage document Header is mandatory. The title line contains the\nman page name followed immediately by the manual section number in\nbrackets, for example <em>ASCIIDOC(1)</em>. The title name should not contain\nwhite space and the manual section number is a single digit optionally\nfollowed by a single character.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_the_name_section\">24.2. The NAME Section</h3>\n<div class=\"paragraph\">\n<p>The first manpage section is mandatory, must be titled <em>NAME</em> and must\ncontain a single paragraph (usually a single line) consisting of a\nlist of one or more comma separated command name(s) separated from the\ncommand purpose by a dash character. The dash must have at least one\nwhite space character on either side. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>printf, fprintf, sprintf - print formatted output</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_the_synopsis_section\">24.3. The SYNOPSIS Section</h3>\n<div class=\"paragraph\">\n<p>The second manpage section is mandatory and must be titled <em>SYNOPSIS</em>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_refmiscinfo_attributes\">24.4. refmiscinfo attributes</h3>\n<div class=\"paragraph\">\n<p>In addition to the automatically created man page <a href=\"#X60\">intrinsic\nattributes</a> you can assign DocBook\n<a href=\"https://tdg.docbook.org/tdg/4.5/refmiscinfo.html\">refmiscinfo</a>\nelement <em>source</em>, <em>version</em> and <em>manual</em> values using AsciiDoc\n<code>{mansource}</code>, <code>{manversion}</code> and <code>{manmanual}</code> attributes\nrespectively. This example is from the AsciiDoc header of a man page\nsource file:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:man source:   AsciiDoc\n:man version:  {revnumber}\n:man manual:   AsciiDoc Manual</pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X78\">25. Mathematical Formulas</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The <em>asciimath</em> and <em>latexmath</em> <a href=\"#X76\">passthrough blocks</a> along with\nthe <em>asciimath</em> and <em>latexmath</em> <a href=\"#X77\">passthrough macros</a> provide a\n(backend dependent) mechanism for rendering mathematical formulas. You\ncan use the following math markups:</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_latex_math\">25.1. LaTeX Math</h3>\n<div class=\"paragraph\">\n<p><a href=\"ftp://ftp.ams.org/pub/tex/doc/amsmath/short-math-guide.pdf\">LaTeX\nmath</a> can be included in documents that are processed by\n<a href=\"#X31\">dblatex(1)</a>.  Example inline formula:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>latexmath:[$C = \\alpha + \\beta Y^{\\gamma} + \\epsilon$]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>For more examples see the <a href=\"https://asciidoc.org/\">AsciiDoc website</a> or the\ndistributed <code>doc/latexmath.txt</code> file.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_mathjax\">25.2. MathJax</h3>\n<div class=\"paragraph\">\n<p><a href=\"https://www.mathjax.org/\">MathJax</a> allows LaTeX Math style formulas to be included\nin XHTML documents generated via the AsciiDoc <em>xhtml11</em> and <em>html5</em> backends.\nThis route overcomes several restrictions of the MathML-based approaches,\nnotably, restricted support of MathML by many mainstream browsers. To enable\n<em>MathJax</em> support you must define the <em>mathjax</em> attribute, for example using the\n<code>-a mathjax</code> command-line option. Equations are specified as explained above\nusing the <em>latexmath</em> passthrough blocks. By default, rendering of equations\nwith <em>MathJax</em> requires a working internet connection and will thus not work if\nyou are offline (but it can be configured differently).</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_latexmathml\">25.3. LaTeXMathML</h3>\n<div class=\"paragraph\">\n<p><em>LaTeXMathML</em> allows LaTeX Math style formulas to be included in XHTML\ndocuments generated using the AsciiDoc <em>xhtml11</em> and <em>html5</em> backends.\nAsciiDoc uses the\n<a href=\"https://www.maths.nottingham.ac.uk/plp/pmadw/lm.html\">original\nLaTeXMathML</a> by Douglas Woodall.  <em>LaTeXMathML</em> is derived from\nASCIIMath and is for users who are more familiar with or prefer\nusing LaTeX math formulas (it recognizes a subset of LaTeX Math, the\ndifferences are documented on the <em>LaTeXMathML</em> web page).  To enable\nLaTeXMathML support you must define the <em>latexmath</em> attribute, for\nexample using the <code>-a latexmath</code> command-line option.  Example inline\nformula:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>latexmath:[$\\sum_{n=1}^\\infty \\frac{1}{2^n}$]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>For more examples see the <a href=\"https://asciidoc.org/\">AsciiDoc website</a> or the\ndistributed <code>doc/latexmathml.txt</code> file.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nThe <em>latexmath</em> macro used to include <em>LaTeX Math</em> in DocBook\noutputs is not the same as the <em>latexmath</em> macro used to include\n<em>LaTeX MathML</em> in XHTML outputs.  <em>LaTeX Math</em> applies to DocBook\noutputs that are processed by <a href=\"#X31\">dblatex</a> and is normally used to\ngenerate PDF files.  <em>LaTeXMathML</em> is very much a subset of <em>LaTeX\nMath</em> and applies to XHTML documents. This remark does not\napply to <em>MathJax</em> which does not use any of the <em>latexmath</em> macros\n(but only requires the <em>latexmath</em> passthrough blocks for identification\nof the equations).\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>ASCIIMath\n<sub>~</sub><sub>~</sub><sub>~</sub>~~</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"http://asciimath.org/\">ASCIIMath</a> formulas can be included in XHTML\ndocuments generated using the <em>xhtml11</em> and <em>html5</em> backends. To enable\nASCIIMath support you must define the <em>asciimath</em> attribute, for\nexample using the <code>-a asciimath</code> command-line option.  Example inline\nformula:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>asciimath:[`x/x={(1,if x!=0),(text{undefined},if x=0):}`]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>For more examples see the <a href=\"https://asciidoc.org/\">AsciiDoc website</a> or the\ndistributed <code>doc/asciimath.txt</code> file.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_mathml\">25.4. MathML</h3>\n<div class=\"paragraph\">\n<p><a href=\"https://www.w3.org/Math/\">MathML</a> is a low level XML markup for\nmathematics. AsciiDoc has no macros for MathML but users familiar with\nthis markup could use passthrough macros and passthrough blocks to\ninclude MathML in output documents.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X7\">26. Configuration Files</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc source file syntax and output file markup is largely\ncontrolled by a set of cascading, text based, configuration files.  At\nruntime The AsciiDoc default configuration files are combined with\noptional user and document specific configuration files.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_configuration_file_format\">26.1. Configuration File Format</h3>\n<div class=\"paragraph\">\n<p>Configuration files contain named sections. Each section begins with a\nsection name in square brackets []. The section body consists of the\nlines of text between adjacent section headings.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Section names consist of one or more alphanumeric, underscore or\ndash characters and cannot begin or end with a dash.</p>\n</li>\n<li>\n<p>Lines starting with a <em>#</em> character are treated as comments and\nignored.</p>\n</li>\n<li>\n<p>If the section name is prefixed with a <em>+</em> character then the\nsection contents is appended to the contents of an already existing\nsame-named section.</p>\n</li>\n<li>\n<p>Otherwise same-named sections and section entries override\npreviously loaded sections and section entries (this is sometimes\nreferred to as <em>cascading</em>).  Consequently, downstream configuration\nfiles need only contain those sections and section entries that need\nto be overridden.</p>\n</li>\n</ul>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nWhen creating custom configuration files you only need to include\nthe sections and entries that differ from the default configuration.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nThe best way to learn about configuration files is to read the\ndefault configuration files in the AsciiDoc distribution in\nconjunction with asciidoc(1) output files. You can view configuration\nfile load sequence by turning on the asciidoc(1) <code>-v</code> (<code>--verbose</code>)\ncommand-line option.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc reserves the following section names for specific purposes:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">miscellaneous</dt>\n<dd>\n<p>Configuration options that don&#8217;t belong anywhere else.</p>\n</dd>\n<dt class=\"hdlist1\">attributes</dt>\n<dd>\n<p>Attribute name/value entries.</p>\n</dd>\n<dt class=\"hdlist1\">specialcharacters</dt>\n<dd>\n<p>Special characters reserved by the backend markup.</p>\n</dd>\n<dt class=\"hdlist1\">tags</dt>\n<dd>\n<p>Backend markup tags.</p>\n</dd>\n<dt class=\"hdlist1\">quotes</dt>\n<dd>\n<p>Definitions for quoted inline character formatting.</p>\n</dd>\n<dt class=\"hdlist1\">specialwords</dt>\n<dd>\n<p>Lists of words and phrases singled out for special markup.</p>\n</dd>\n<dt class=\"hdlist1\">replacements, replacements2, replacements3</dt>\n<dd>\n<p>Find and replace substitution definitions.</p>\n</dd>\n<dt class=\"hdlist1\">specialsections</dt>\n<dd>\n<p>Used to single out special section names for specific markup.</p>\n</dd>\n<dt class=\"hdlist1\">macros</dt>\n<dd>\n<p>Macro syntax definitions.</p>\n</dd>\n<dt class=\"hdlist1\">titles</dt>\n<dd>\n<p>Heading, section and block title definitions.</p>\n</dd>\n<dt class=\"hdlist1\">paradef-*</dt>\n<dd>\n<p>Paragraph element definitions.</p>\n</dd>\n<dt class=\"hdlist1\">blockdef-*</dt>\n<dd>\n<p>DelimitedBlock element definitions.</p>\n</dd>\n<dt class=\"hdlist1\">listdef-*</dt>\n<dd>\n<p>List element definitions.</p>\n</dd>\n<dt class=\"hdlist1\">listtags-*</dt>\n<dd>\n<p>List element tag definitions.</p>\n</dd>\n<dt class=\"hdlist1\">tabledef-*</dt>\n<dd>\n<p>Table element definitions.</p>\n</dd>\n<dt class=\"hdlist1\">tabletags-*</dt>\n<dd>\n<p>Table element tag definitions.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>Each line of text in these sections is a <em>section entry</em>. Section\nentries share the following syntax:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">name=value</dt>\n<dd>\n<p>The entry value is set to value.</p>\n</dd>\n<dt class=\"hdlist1\">name=</dt>\n<dd>\n<p>The entry value is set to a zero length string.</p>\n</dd>\n<dt class=\"hdlist1\">name!</dt>\n<dd>\n<p>The entry is undefined (deleted from the configuration). This\nsyntax only applies to <em>attributes</em> and <em>miscellaneous</em>\nsections.</p>\n</dd>\n</dl>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Section entry behavior</div>\n<ul>\n<li>\n<p>All equals characters inside the <code>name</code> must be escaped with a\nbackslash character.</p>\n</li>\n<li>\n<p><code>name</code> and <code>value</code> are stripped of leading and trailing white space.</p>\n</li>\n<li>\n<p>Attribute names, tag entry names and markup template section names\nconsist of one or more alphanumeric, underscore or dash characters.\nNames should not begin or end with a dash.</p>\n</li>\n<li>\n<p>A blank configuration file section (one without any entries) deletes\nany preceding section with the same name (applies to non-markup\ntemplate sections).</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_miscellaneous_section\">26.2. Miscellaneous section</h3>\n<div class=\"paragraph\">\n<p>The optional <code>[miscellaneous]</code> section specifies the following\n<code>name=value</code> options:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">newline</dt>\n<dd>\n<p>Output file line termination characters. Can include any\nvalid Python string escape sequences. The default value is\n<code>\\r\\n</code> (carriage return, line feed). Should not be quoted or\ncontain explicit spaces (use <code>\\x20</code> instead). For example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a 'newline=\\n' -b docbook mydoc.txt</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">outfilesuffix</dt>\n<dd>\n<p>The default extension for the output file, for example\n<code>outfilesuffix=.html</code>. Defaults to backend name.</p>\n</dd>\n<dt class=\"hdlist1\">tabsize</dt>\n<dd>\n<p>The number of spaces to expand tab characters, for example\n<code>tabsize=4</code>. Defaults to 8. A <em>tabsize</em> of zero suppresses tab\nexpansion (useful when piping included files through block\nfilters). Included files can override this option using the\n<em>tabsize</em> attribute.</p>\n</dd>\n<dt class=\"hdlist1\">pagewidth, pageunits</dt>\n<dd>\n<p>These global table related options are documented in the\n<a href=\"#X4\">Table Configuration File Definitions</a> sub-section.</p>\n</dd>\n</dl>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<code>[miscellaneous]</code> configuration file entries can be set using\nthe asciidoc(1) <code>-a</code> (<code>--attribute</code>) command-line option.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_titles_section\">26.3. Titles section</h3>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">sectiontitle</dt>\n<dd>\n<p>Two line section title pattern. The entry value is a Python\nregular expression containing the named group <em>title</em>.</p>\n</dd>\n<dt class=\"hdlist1\">underlines</dt>\n<dd>\n<p>A comma separated list of document and section title underline\ncharacter pairs starting with the section level 0 and ending\nwith section level 4 underline. The default setting is:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>underlines=\"==\",\"--\",\"~~\",\"^^\",\"++\"</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">sect0&#8230;&#8203;sect4</dt>\n<dd>\n<p>One line section title patterns. The entry value is a Python\nregular expression containing the named group <em>title</em>.</p>\n</dd>\n<dt class=\"hdlist1\">blocktitle</dt>\n<dd>\n<p><a href=\"#X42\">BlockTitle element</a> pattern.  The entry value is a\nPython regular expression containing the named group <em>title</em>.</p>\n</dd>\n<dt class=\"hdlist1\">subs</dt>\n<dd>\n<p>A comma separated list of substitutions that are performed on\nthe document header and section titles. Defaults to <em>normal</em>\nsubstitution.</p>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_tags_section\">26.4. Tags section</h3>\n<div class=\"paragraph\">\n<p>The <code>[tags]</code> section contains backend tag definitions (one per\nline). Tags are used to translate AsciiDoc elements to backend\nmarkup.</p>\n</div>\n<div class=\"paragraph\">\n<p>An AsciiDoc tag definition is formatted like\n<code>&lt;tagname&gt;=&lt;starttag&gt;|&lt;endtag&gt;</code>. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>emphasis=&lt;em&gt;|&lt;/em&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>In this example asciidoc(1) replaces the | character with the\nemphasized text from the AsciiDoc input file and writes the result to\nthe output file.</p>\n</div>\n<div class=\"paragraph\">\n<p>Use the <code>{brvbar}</code> attribute reference if you need to include a | pipe\ncharacter inside tag text.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_attributes_section\">26.5. Attributes section</h3>\n<div class=\"paragraph\">\n<p>The optional <code>[attributes]</code> section contains predefined attributes.</p>\n</div>\n<div class=\"paragraph\">\n<p>If the attribute value requires leading or trailing spaces then the\ntext text should be enclosed in quotation mark (\") characters.</p>\n</div>\n<div class=\"paragraph\">\n<p>To delete a attribute insert a <code>name!</code> entry in a downstream\nconfiguration file or use the asciidoc(1) <code>--attribute name!</code>\ncommand-line option (an attribute name suffixed with a <code>!</code> character\ndeletes the attribute)</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_special_characters_section\">26.6. Special Characters section</h3>\n<div class=\"paragraph\">\n<p>The <code>[specialcharacters]</code> section specifies how to escape characters\nreserved by the backend markup. Each translation is specified on a\nsingle line formatted like:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>&lt;special_character&gt;=&lt;translated_characters&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Special characters are normally confined to those that resolve\nmarkup ambiguity (in the case of HTML and XML markups the ampersand,\nless than and greater than characters).  The following example causes\nall occurrences of the <code>&lt;</code> character to be replaced by <code>&amp;lt;</code>.</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>&lt;=&amp;lt;</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_quoted_text_section\">26.7. Quoted Text section</h3>\n<div class=\"paragraph\">\n<p>Quoting is used primarily for text formatting.  The <code>[quotes]</code> section\ndefines AsciiDoc quoting characters and their corresponding backend\nmarkup tags.  Each section entry value is the name of a of a <code>[tags]</code>\nsection entry. The entry name is the character (or characters) that\nquote the text.  The following examples are taken from AsciiDoc\nconfiguration files:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[quotes]\n_=emphasis</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[tags]\nemphasis=&lt;em&gt;|&lt;/em&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You can specify the left and right quote strings separately by\nseparating them with a | character, for example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>``|''=quoted</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Omitting the tag will disable quoting, for example, if you don&#8217;t want\nsuperscripts or subscripts put the following in a custom configuration\nfile or edit the global <code>asciidoc.conf</code> configuration file:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[quotes]\n^=\n~=</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"#X52\">Unconstrained quotes</a> are differentiated from constrained\nquotes by prefixing the tag name with a hash character, for example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>__=#emphasis</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Quoted text behavior</div>\n<ul>\n<li>\n<p>Quote characters must be non-alphanumeric.</p>\n</li>\n<li>\n<p>To minimize quoting ambiguity try not to use the same quote\ncharacters in different quote types.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_special_words_section\">26.8. Special Words section</h3>\n<div class=\"paragraph\">\n<p>The <code>[specialwords]</code> section is used to single out words and phrases\nthat you want to consistently format in some way throughout your\ndocument without having to repeatedly specify the markup. The name of\neach entry corresponds to a markup template section and the entry\nvalue consists of a list of words and phrases to be marked up. For\nexample:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[specialwords]\nstrongwords=NOTE IMPORTANT</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[strongwords]\n&lt;strong&gt;{words}&lt;/strong&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The examples specifies that any occurrence of <code>NOTE</code> or <code>IMPORTANT</code>\nshould appear in a bold font.</p>\n</div>\n<div class=\"paragraph\">\n<p>Words and word phrases are treated as Python regular expressions: for\nexample, the word <code>^NOTE</code> would only match <code>NOTE</code> if appeared at\nthe start of a line.</p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc comes with three built-in Special Word types:\n<em>emphasizedwords</em>, <em>monospacedwords</em> and <em>strongwords</em>, each has a\ncorresponding (backend specific) markup template section. Edit the\nconfiguration files to customize existing Special Words and to add new\nones.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Special word behavior</div>\n<ul>\n<li>\n<p>Word list entries must be separated by space characters.</p>\n</li>\n<li>\n<p>Word list entries with embedded spaces should be enclosed in quotation (\")\ncharacters.</p>\n</li>\n<li>\n<p>A <code>[specialwords]</code> section entry of the form\n<code>name=word1&#160;[word2&#8230;&#8203;]</code> adds words to existing <code>name</code> entries.</p>\n</li>\n<li>\n<p>A <code>[specialwords]</code> section entry of the form <code>name</code> undefines\n(deletes) all existing <code>name</code> words.</p>\n</li>\n<li>\n<p>Since word list entries are processed as Python regular expressions\nyou need to be careful to escape regular expression special\ncharacters.</p>\n</li>\n<li>\n<p>By default Special Words are substituted before Inline Macros, this\nmay lead to undesirable consequences. For example the special word\n<code>foobar</code> would be expanded inside the macro call\n<code>http://www.foobar.com[]</code>.  A possible solution is to emphasize\nwhole words only by defining the word using regular expression\ncharacters, for example <code>\\bfoobar\\b</code>.</p>\n</li>\n<li>\n<p>If the first matched character of a special word is a backslash then\nthe remaining characters are output without markup i.e. the\nbackslash can be used to escape special word markup.  For example\nthe special word <code>\\\\?\\b[Tt]en\\b</code> will mark up the words <code>Ten</code> and\n<code>ten</code> only if they are not preceded by a backslash.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X10\">26.9. Replacements section</h3>\n<div class=\"paragraph\">\n<p><code>[replacements]</code>, <code>[replacements2]</code> and <code>[replacements3]</code>\nconfiguration file entries specify find and replace text and are\nformatted like:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>&lt;find_pattern&gt;=&lt;replacement_text&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The find text can be a Python regular expression; the replace text can\ncontain Python regular expression group references.</p>\n</div>\n<div class=\"paragraph\">\n<p>Use Replacement shortcuts for often used macro references, for\nexample (the second replacement allows us to backslash escape the\nmacro name):</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>NEW!=image:./smallnew.png[New!]\n\\\\NEW!=NEW!</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The only difference between the three replacement types is how they\nare applied. By default <em>replacements</em> and <em>replacements2</em> are applied\nin <a href=\"#X102\">normal</a> substitution contexts whereas <em>replacements3</em> needs\nto be configured explicitly and should only be used in backend\nconfiguration files.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Replacement behavior</div>\n<ul>\n<li>\n<p>The built-in replacements can be escaped with a backslash.</p>\n</li>\n<li>\n<p>If the find or replace text has leading or trailing spaces then the\ntext should be enclosed in quotation (\") characters.</p>\n</li>\n<li>\n<p>Since the find text is processed as a regular expression you need to\nbe careful to escape regular expression special characters.</p>\n</li>\n<li>\n<p>Replacements are performed in the same order they appear in the\nconfiguration file replacements section.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_markup_template_sections\">26.10. Markup Template Sections</h3>\n<div class=\"paragraph\">\n<p>Markup template sections supply backend markup for translating\nAsciiDoc elements.  Since the text is normally backend dependent\nyou&#8217;ll find these sections in the backend specific configuration\nfiles. Template sections differ from other sections in that they\ncontain a single block of text instead of per line <em>name=value</em>\nentries. A markup template section body can contain:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Attribute references</p>\n</li>\n<li>\n<p>System macro calls.</p>\n</li>\n<li>\n<p>A document content placeholder</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>The document content placeholder is a single | character and is\nreplaced by text from the source element.  Use the <code>{brvbar}</code>\nattribute reference if you need a literal | character in the template.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X27\">26.11. Configuration file names, precedence and locations</h3>\n<div class=\"paragraph\">\n<p>Configuration files have a <code>.conf</code> file name extension; they are\nloaded from the following locations:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>The directory containing the asciidoc executable.</p>\n</li>\n<li>\n<p>If there is no <code>asciidoc.conf</code> file in the directory containing the\nasciidoc executable then load from the global configuration\ndirectory (normally <code>/etc/asciidoc</code> or <code>/usr/local/etc/asciidoc</code>)\ni.e. the global configuration files directory is skipped if\nAsciiDoc configuration files are installed in the same directory as\nthe asciidoc executable. This allows both a system wide copy and\nmultiple local copies of AsciiDoc to coexist on the same host PC.</p>\n</li>\n<li>\n<p>The user&#8217;s <code>$HOME/.asciidoc</code> directory (if it exists).</p>\n</li>\n<li>\n<p>The directory containing the AsciiDoc source file.</p>\n</li>\n<li>\n<p>Explicit configuration files specified using:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The <code>conf-files</code> attribute (one or more file names separated by a\n<code>|</code> character). These files are loaded in the order they are\nspecified and prior to files specified using the <code>--conf-file</code>\ncommand-line option.</p>\n</li>\n<li>\n<p>The asciidoc(1) <code>--conf-file</code>) command-line option.  The\n<code>--conf-file</code> option can be specified multiple times, in which\ncase configuration files will be processed in the same order they\nappear on the command-line.</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><a href=\"#X100\">Backend plugin</a> configuration files are loaded from\nsubdirectories named like <code>backends/&lt;backend&gt;</code> in locations 1, 2\nand 3.</p>\n</li>\n<li>\n<p><a href=\"#X59\">Filter</a> configuration files are loaded from subdirectories\nnamed like <code>filters/&lt;filter&gt;</code> in locations 1, 2 and 3.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>Configuration files from the above locations are loaded in the\nfollowing order:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The <code>[attributes]</code> section only from:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>asciidoc.conf</code> in location 3</p>\n</li>\n<li>\n<p>Files from location 5.</p>\n<div class=\"paragraph\">\n<p>This first pass makes locally set attributes available in the global\n<code>asciidoc.conf</code> file.</p>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>asciidoc.conf</code> from locations 1, 2, 3.</p>\n</li>\n<li>\n<p><em>attributes</em>, <em>titles</em> and <em>specialcharacters</em> sections from the\n<code>asciidoc.conf</code> in location 4.</p>\n</li>\n<li>\n<p>The document header is parsed at this point and we can assume the\n<em>backend</em> and <em>doctype</em> have now been defined.</p>\n</li>\n<li>\n<p>Backend plugin <code>&lt;backend&gt;.conf</code> and <code>&lt;backend&gt;-&lt;doctype&gt;.conf</code> files\nfrom locations 6.  If a backend plugin is not found then try\nlocations 1, 2 and 3 for <code>&lt;backend&gt;.conf</code> and\n<code>&lt;backend&gt;-&lt;doctype&gt;.conf</code> backend configuration files.</p>\n</li>\n<li>\n<p>Filter conf files from locations 7.</p>\n</li>\n<li>\n<p><code>lang-&lt;lang&gt;.conf</code> from locations 1, 2, 3.</p>\n</li>\n<li>\n<p><code>asciidoc.conf</code> from location 4.</p>\n</li>\n<li>\n<p><code>&lt;backend&gt;.conf</code> and <code>&lt;backend&gt;-&lt;doctype&gt;.conf</code> from location 4.</p>\n</li>\n<li>\n<p>Filter conf files from location 4.</p>\n</li>\n<li>\n<p><code>&lt;docfile&gt;.conf</code> and <code>&lt;docfile&gt;-&lt;backend&gt;.conf</code> from location 4.</p>\n</li>\n<li>\n<p>Configuration files from location 5.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Where:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>&lt;backend&gt;</code> and <code>&lt;doctype&gt;</code> are values specified by the asciidoc(1)\n<code>-b</code> (<code>--backend</code>) and <code>-d</code> (<code>--doctype</code>) command-line options.</p>\n</li>\n<li>\n<p><code>&lt;infile&gt;</code> is the path name of the AsciiDoc input file without the\nfile name extension.</p>\n</li>\n<li>\n<p><code>&lt;lang&gt;</code> is a two letter country code set by the the AsciiDoc <em>lang</em>\nattribute.</p>\n</li>\n</ul>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>The backend and language global configuration files are loaded <strong>after</strong>\nthe header has been parsed.  This means that you can set most\nattributes in the document header. Here&#8217;s an example header:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Life's Mysteries\n================\n:author: Hu Nose\n:doctype: book\n:toc:\n:icons:\n:data-uri:\n:lang: en\n:encoding: iso-8859-1</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Attributes set in the document header take precedence over\nconfiguration file attributes.</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nUse the asciidoc(1) <code>-v</code> (<code>--verbose</code>) command-line option to see\nwhich configuration files are loaded and the order in which they are\nloaded.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_document_attributes\">27. Document Attributes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>A document attribute is comprised of a <em>name</em> and a textual <em>value</em>\nand is used for textual substitution in AsciiDoc documents and\nconfiguration files. An attribute reference (an attribute name\nenclosed in braces) is replaced by the corresponding attribute\nvalue. Attribute names are case insensitive and can only contain\nalphanumeric, dash and underscore characters.</p>\n</div>\n<div class=\"paragraph\">\n<p>There are four sources of document attributes (from highest to lowest\nprecedence):</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Command-line attributes.</p>\n</li>\n<li>\n<p>AttributeEntry, AttributeList, Macro and BlockId elements.</p>\n</li>\n<li>\n<p>Configuration file <code>[attributes]</code> sections.</p>\n</li>\n<li>\n<p>Intrinsic attributes.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Within each of these divisions the last processed entry takes\nprecedence.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nIf an attribute is not defined then the line containing the\nattribute reference is dropped. This property is used extensively in\nAsciiDoc configuration files to facilitate conditional markup\ngeneration.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X18\">28. Attribute Entries</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The <code>AttributeEntry</code> block element allows document attributes to be\nassigned within an AsciiDoc document. Attribute entries are added to\nthe global document attributes dictionary. The attribute name/value\nsyntax is a single line like:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:&lt;name&gt;: &lt;value&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:Author Initials: JB</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This will set an attribute reference <code>{authorinitials}</code> to the value\n<em>JB</em> in the current document.</p>\n</div>\n<div class=\"paragraph\">\n<p>To delete (undefine) an attribute use the following syntax:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:&lt;name&gt;!:</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">AttributeEntry behavior</div>\n<ul>\n<li>\n<p>The attribute entry line begins with colon&#8201;&#8212;&#8201;no white space allowed\nin left margin.</p>\n</li>\n<li>\n<p>AsciiDoc converts the <code>&lt;name&gt;</code> to a legal attribute name (lower\ncase, alphanumeric, dash and underscore characters only&#8201;&#8212;&#8201;all other\ncharacters deleted). This allows more human friendly text to be\nused.</p>\n</li>\n<li>\n<p>Leading and trailing white space is stripped from the <code>&lt;value&gt;</code>.</p>\n</li>\n<li>\n<p>Lines ending in a space followed by a plus character are continued\nto the next line, for example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:description: AsciiDoc is a text document format for writing notes, +\n              documentation, articles, books, slideshows, web pages +\n              and man pages.</pre>\n</div>\n</div>\n</li>\n<li>\n<p>If the <code>&lt;value&gt;</code> is blank then the corresponding attribute value is\nset to an empty string.</p>\n</li>\n<li>\n<p>Attribute references contained in the entry <code>&lt;value&gt;</code> will be\nexpanded.</p>\n</li>\n<li>\n<p>By default AttributeEntry values are substituted for\n<code>specialcharacters</code> and <code>attributes</code> (see above), if you want to\nchange or disable AttributeEntry substitution use the <a href=\"#X77\">pass:[]\ninline macro</a> syntax.</p>\n</li>\n<li>\n<p>Attribute entries in the document Header are available for header\nmarkup template substitution.</p>\n</li>\n<li>\n<p>Attribute elements override configuration file and intrinsic\nattributes but do not override command-line attributes.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Here are some more attribute entry examples:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>AsciiDoc User Manual\n====================\n:author:    Stuart Rackham\n:email:     srackham@gmail.com\n:revdate:   April 23, 2004\n:revnumber: 5.1.1</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Which creates these attributes:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>{author}, {firstname}, {lastname}, {authorinitials}, {email},\n{revdate}, {revnumber}</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The previous example is equivalent to this <a href=\"#X95\">document header</a>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>AsciiDoc User Manual\n====================\nStuart Rackham &lt;srackham@gmail.com&gt;\n5.1.1, April 23, 2004</pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_setting_configuration_entries\">28.1. Setting configuration entries</h3>\n<div class=\"paragraph\">\n<p>A variant of the Attribute Entry syntax allows configuration file\nsection entries and markup template sections to be set from within an\nAsciiDoc document:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:&lt;section_name&gt;.[&lt;entry_name&gt;]: &lt;entry_value&gt;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Where <code>&lt;section_name&gt;</code> is the configuration section name,\n<code>&lt;entry_name&gt;</code> is the name of the entry and <code>&lt;entry_value&gt;</code> is the\noptional entry value. This example sets the default labeled list\nstyle to <em>horizontal</em>:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:listdef-labeled.style: horizontal</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>It is exactly equivalent to a configuration file containing:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[listdef-labeled]\nstyle=horizontal</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>If the <code>&lt;entry_name&gt;</code> is omitted then the entire section is\nsubstituted with the <code>&lt;entry_value&gt;</code>. This feature should only be\nused to set markup template sections. The following example sets the\n<em>xref2</em> inline macro markup template:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:xref2-inlinemacro.: &lt;a href=\"#{1}\"&gt;{2?{2}}&lt;/a&gt;</pre>\n</div>\n</div>\n</li>\n<li>\n<p>No substitution is performed on configuration file attribute entries\nand they cannot be undefined.</p>\n</li>\n<li>\n<p>This feature can only be used in attribute entries&#8201;&#8212;&#8201;configuration\nattributes cannot be set using the asciidoc(1) command <code>--attribute</code>\noption.</p>\n</li>\n</ul>\n</div>\n<div id=\"X62\" class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">Attribute entries promote clarity and eliminate repetition</div>\n<div class=\"paragraph\">\n<p>URLs and file names in AsciiDoc macros are often quite long&#8201;&#8212;&#8201;they\nbreak paragraph flow and readability suffers.  The problem is\ncompounded by redundancy if the same name is used repeatedly.\nAttribute entries can be used to make your documents easier to read\nand write, here are some examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:1:         http://freshmeat.sourceforge.net/projects/asciidoc/\n:homepage:  https://asciidoc.org[AsciiDoc home page]\n:new:       image:./smallnew.png[]\n:footnote1: footnote:[A meaningless latin term]</pre>\n</div>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Using previously defined attributes: See the {1}[Freshmeat summary]\nor the {homepage} for something new {new}. Lorem ispum {footnote1}.</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Note</div>\n<ul>\n<li>\n<p>The attribute entry definition must precede it&#8217;s usage.</p>\n</li>\n<li>\n<p>You are not limited to URLs or file names, entire macro calls or\narbitrary lines of text can be abbreviated.</p>\n</li>\n<li>\n<p>Shared attributes entries could be grouped into a separate file and\n<a href=\"#X63\">included</a> in multiple documents.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X21\">29. Attribute Lists</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>An attribute list is a comma separated list of attribute values.</p>\n</li>\n<li>\n<p>The entire list is enclosed in square brackets.</p>\n</li>\n<li>\n<p>Attribute lists are used to pass parameters to macros, blocks (using\nthe <a href=\"#X79\">AttributeList element</a>) and inline quotes.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>The list consists of zero or more positional attribute values followed\nby zero or more named attribute values.  Here are three examples: a\nsingle unquoted positional attribute; three unquoted positional\nattribute values; one positional attribute followed by two named\nattributes; the unquoted attribute value in the final example contains\ncomma (<code>&amp;#44;</code>) and double-quote (<code>&amp;#34;</code>) character entities:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[Hello]\n[quote, Bertrand Russell, The World of Mathematics (1956)]\n[\"22 times\", backcolor=\"#0e0e0e\", options=\"noborders,wide\"]\n[A footnote&amp;#44; &amp;#34;with an image&amp;#34; image:smallnew.png[]]</pre>\n</div>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Attribute list behavior</div>\n<ul>\n<li>\n<p>If one or more attribute values contains a comma the all string\nvalues must be quoted (enclosed in double quotation mark\ncharacters).</p>\n</li>\n<li>\n<p>If the list contains any named or quoted attributes then all string\nattribute values must be quoted.</p>\n</li>\n<li>\n<p>To include a double quotation mark (\") character in a quoted\nattribute value the the quotation mark must be escaped with a\nbackslash.</p>\n</li>\n<li>\n<p>List attributes take precedence over existing attributes.</p>\n</li>\n<li>\n<p>List attributes can only be referenced in configuration file markup\ntemplates and tags, they are not available elsewhere in the\ndocument.</p>\n</li>\n<li>\n<p>Setting a named attribute to <code>None</code> undefines the attribute.</p>\n</li>\n<li>\n<p>Positional attributes are referred to as <code>{1}</code>,<code>{2}</code>,<code>{3}</code>,&#8230;&#8203;</p>\n</li>\n<li>\n<p>Attribute <code>{0}</code> refers to the entire list (excluding the enclosing\nsquare brackets).</p>\n</li>\n<li>\n<p>Named attribute names cannot contain dash characters.</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X75\">29.1. Options attribute</h3>\n<div class=\"paragraph\">\n<p>If the attribute list contains an attribute named <code>options</code> it is\nprocessed as a comma separated list of option names:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Each name generates an attribute named like <code>&lt;option&gt;-option</code> (where\n<code>&lt;option&gt;</code> is the option name) with an empty string value.  For\nexample <code>[options=\"opt1,opt2,opt3\"]</code> is equivalent to setting the\nfollowing three attributes\n<code>[opt1-option=\"\",opt2-option=\"\",opt2-option=\"\"]</code>.</p>\n</li>\n<li>\n<p>If you define a an option attribute globally (for example with an\n<a href=\"#X18\">attribute entry</a>) then it will apply to all elements in the\ndocument.</p>\n</li>\n<li>\n<p>AsciiDoc implements a number of predefined options which are listed\nin the <a href=\"#X74\">Attribute Options appendix</a>.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_macro_attribute_lists\">29.2. Macro Attribute lists</h3>\n<div class=\"paragraph\">\n<p>Macros calls are suffixed with an attribute list. The list may be\nempty but it cannot be omitted. List entries are used to pass\nattribute values to macro markup templates.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_attribute_references\">30. Attribute References</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>An attribute reference is an attribute name (possibly followed by an\nadditional parameters) enclosed in curly braces.  When an attribute\nreference is encountered it is evaluated and replaced by its\ncorresponding text value.  If the attribute is undefined the line\ncontaining the attribute is dropped.</p>\n</div>\n<div class=\"paragraph\">\n<p>There are three types of attribute reference: <em>Simple</em>, <em>Conditional</em>\nand <em>System</em>.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Attribute reference evaluation</div>\n<ul>\n<li>\n<p>You can suppress attribute reference expansion by placing a\nbackslash character immediately in front of the opening brace\ncharacter.</p>\n</li>\n<li>\n<p>By default attribute references are not expanded in\n<em>LiteralParagraphs</em>, <em>ListingBlocks</em> or <em>LiteralBlocks</em>.</p>\n</li>\n<li>\n<p>Attribute substitution proceeds line by line in reverse line order.</p>\n</li>\n<li>\n<p>Attribute reference evaluation is performed in the following order:\n<em>Simple</em> then <em>Conditional</em> and finally <em>System</em>.</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_simple_attributes_references\">30.1. Simple Attributes References</h3>\n<div class=\"paragraph\">\n<p>Simple attribute references take the form <code>{&lt;name&gt;}</code>. If the\nattribute name is defined its text value is substituted otherwise the\nline containing the reference is dropped from the output.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_conditional_attribute_references\">30.2. Conditional Attribute References</h3>\n<div class=\"paragraph\">\n<p>Additional parameters are used in conjunction with attribute names to\ncalculate a substitution value. Conditional attribute references take\nthe following forms:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;=&lt;value&gt;}</code></dt>\n<dd>\n<p><code>&lt;value&gt;</code> is substituted if the attribute <code>&lt;names&gt;</code> is\nundefined otherwise its value is substituted. <code>&lt;value&gt;</code> can\ncontain simple attribute references.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;?&lt;value&gt;}</code></dt>\n<dd>\n<p><code>&lt;value&gt;</code> is substituted if the attribute <code>&lt;names&gt;</code> is defined\notherwise an empty string is substituted.  <code>&lt;value&gt;</code> can\ncontain simple attribute references.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;!&lt;value&gt;}</code></dt>\n<dd>\n<p><code>&lt;value&gt;</code> is substituted if the attribute <code>&lt;names&gt;</code> is\nundefined otherwise an empty string is substituted.  <code>&lt;value&gt;</code>\ncan contain simple attribute references.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;#&lt;value&gt;}</code></dt>\n<dd>\n<p><code>&lt;value&gt;</code> is substituted if the attribute <code>&lt;names&gt;</code> is defined\notherwise the undefined attribute entry causes the containing\nline to be dropped.  <code>&lt;value&gt;</code> can contain simple attribute\nreferences.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;%&lt;value&gt;}</code></dt>\n<dd>\n<p><code>&lt;value&gt;</code> is substituted if the attribute <code>&lt;names&gt;</code> is not\ndefined otherwise the containing line is dropped.  <code>&lt;value&gt;</code>\ncan contain simple attribute references.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;@&lt;regexp&gt;:&lt;value1&gt;[:&lt;value2&gt;]}</code></dt>\n<dd>\n<p><code>&lt;value1&gt;</code> is substituted if the value of attribute <code>&lt;names&gt;</code>\nmatches the regular expression <code>&lt;regexp&gt;</code> otherwise <code>&lt;value2&gt;</code>\nis substituted. If attribute <code>&lt;names&gt;</code> is not defined the\ncontaining line is dropped. If <code>&lt;value2&gt;</code> is omitted an empty\nstring is assumed. The values and the regular expression can\ncontain simple attribute references.  To embed colons in the\nvalues or the regular expression escape them with backslashes.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;$&lt;regexp&gt;:&lt;value1&gt;[:&lt;value2&gt;]}</code></dt>\n<dd>\n<p>Same behavior as the previous ternary attribute except for\nthe following cases:</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;$&lt;regexp&gt;:&lt;value&gt;}</code></dt>\n<dd>\n<p>Substitutes <code>&lt;value&gt;</code> if <code>&lt;names&gt;</code> matches <code>&lt;regexp&gt;</code>\notherwise the result is undefined and the containing\nline is dropped.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{&lt;names&gt;$&lt;regexp&gt;::&lt;value&gt;}</code></dt>\n<dd>\n<p>Substitutes <code>&lt;value&gt;</code> if <code>&lt;names&gt;</code> does not match\n<code>&lt;regexp&gt;</code> otherwise the result is undefined and the\ncontaining line is dropped.</p>\n</dd>\n</dl>\n</div>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>The attribute <code>&lt;names&gt;</code> parameter normally consists of a single\nattribute name but it can be any one of the following:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>A single attribute name which evaluates to the attributes value.</p>\n</li>\n<li>\n<p>Multiple <em>,</em> separated attribute names which evaluates to an empty\nstring if one or more of the attributes is defined, otherwise it&#8217;s\nvalue is undefined.</p>\n</li>\n<li>\n<p>Multiple <em>+</em> separated attribute names which evaluates to an empty\nstring if all of the attributes are defined, otherwise it&#8217;s value is\nundefined.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Conditional attributes with single attribute names are evaluated first\nso they can be used inside the multi-attribute conditional <code>&lt;value&gt;</code>.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_conditional_attribute_examples\">30.2.1. Conditional attribute examples</h4>\n<div class=\"paragraph\">\n<p>Conditional attributes are mainly used in AsciiDoc configuration\nfiles&#8201;&#8212;&#8201;see the distribution <code>.conf</code> files for examples.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Attribute equality test</dt>\n<dd>\n<p>If <code>{backend}</code> is <em>docbook45</em> or <em>xhtml11</em> the example evaluates to\n&#8220;DocBook 4.5 or XHTML 1.1 backend&#8221; otherwise it evaluates to\n&#8220;some other backend&#8221;:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>{backend@docbook45|xhtml11:DocBook 4.5 or XHTML 1.1 backend:some other backend}</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">Attribute value map</dt>\n<dd>\n<p>This example maps the <code>frame</code> attribute values [<code>topbot</code>, <code>all</code>,\n<code>none</code>, <code>sides</code>] to [<code>hsides</code>, <code>border</code>, <code>void</code>, <code>vsides</code>]:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>{frame@topbot:hsides}{frame@all:border}{frame@none:void}{frame@sides:vsides}</pre>\n</div>\n</div>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X24\">30.3. System Attribute References</h3>\n<div class=\"paragraph\">\n<p>System attribute references generate the attribute text value by\nexecuting a predefined action that is parametrized by one or more\narguments. The syntax is <code>{&lt;action&gt;:&lt;arguments&gt;}</code>.</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><code>{counter:&lt;attrname&gt;[:&lt;seed&gt;]}</code></dt>\n<dd>\n<p>Increments the document attribute (if the attribute is\nundefined it is set to <code>1</code>). Returns the new attribute value.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Counters generate global (document wide) attributes.</p>\n</li>\n<li>\n<p>The optional <code>&lt;seed&gt;</code> specifies the counter&#8217;s initial value;\nit can be a number or a single letter; defaults to <em>1</em>.</p>\n</li>\n<li>\n<p><code>&lt;seed&gt;</code> can contain simple and conditional attribute\nreferences.</p>\n</li>\n<li>\n<p>The <em>counter</em> system attribute will not be executed if the\ncontaining line is dropped by the prior evaluation of an\nundefined attribute.</p>\n</li>\n</ul>\n</div>\n</dd>\n<dt class=\"hdlist1\"><code>{counter2:&lt;attrname&gt;[:&lt;seed&gt;]}</code></dt>\n<dd>\n<p>Same as <code>counter</code> except the it always returns a blank string.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{eval:&lt;expression&gt;}</code></dt>\n<dd>\n<p>Substitutes the result of the Python <code>&lt;expression&gt;</code>.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>If <code>&lt;expression&gt;</code> evaluates to <code>None</code> or <code>False</code> the\nreference is deemed undefined and the line containing the\nreference is dropped from the output.</p>\n</li>\n<li>\n<p>If the expression evaluates to <code>True</code> the attribute\nevaluates to an empty string.</p>\n</li>\n<li>\n<p><code>&lt;expression&gt;</code> can contain simple and conditional attribute\nreferences.</p>\n</li>\n<li>\n<p>The <em>eval</em> system attribute can be nested inside other\nsystem attributes.</p>\n</li>\n</ul>\n</div>\n</dd>\n<dt class=\"hdlist1\"><code>{eval3:&lt;command&gt;}</code></dt>\n<dd>\n<p>Passthrough version of <code>{eval:&lt;expression&gt;}</code>&#8201;&#8212;&#8201;the generated\noutput is written directly to the output without any further\nsubstitutions.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{include:&lt;filename&gt;}</code></dt>\n<dd>\n<p>Substitutes contents of the file named <code>&lt;filename&gt;</code>.</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The included file is read at the time of attribute\nsubstitution.</p>\n</li>\n<li>\n<p>If the file does not exist a warning is emitted and the line\ncontaining the reference is dropped from the output file.</p>\n</li>\n<li>\n<p>Tabs are expanded based on the current <em>tabsize</em> attribute\nvalue.</p>\n</li>\n</ul>\n</div>\n</dd>\n<dt class=\"hdlist1\"><code>{set:&lt;attrname&gt;[!][:&lt;value&gt;]}</code></dt>\n<dd>\n<p>Sets or unsets document attribute. Normally only used in\nconfiguration file markup templates (use\n<a href=\"#X18\">AttributeEntries</a> in AsciiDoc documents).</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>If the attribute name is followed by an exclamation mark\nthe attribute becomes undefined.</p>\n</li>\n<li>\n<p>If <code>&lt;value&gt;</code> is omitted the attribute is set to a blank\nstring.</p>\n</li>\n<li>\n<p><code>&lt;value&gt;</code> can contain simple and conditional attribute\nreferences.</p>\n</li>\n<li>\n<p>Returns a blank string unless the attribute is undefined in\nwhich case the return value is undefined and the enclosing\nline will be dropped.</p>\n</li>\n</ul>\n</div>\n</dd>\n<dt class=\"hdlist1\"><code>{set2:&lt;attrname&gt;[!][:&lt;value&gt;]}</code></dt>\n<dd>\n<p>Same as <code>set</code> except that the attribute scope is local to the\ntemplate.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{sys:&lt;command&gt;}</code></dt>\n<dd>\n<p>Substitutes the stdout generated by the execution of the shell\n<code>&lt;command&gt;</code>.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{sys2:&lt;command&gt;}</code></dt>\n<dd>\n<p>Substitutes the stdout and stderr generated by the execution\nof the shell <code>&lt;command&gt;</code>.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{sys3:&lt;command&gt;}</code></dt>\n<dd>\n<p>Passthrough version of <code>{sys:&lt;command&gt;}</code>&#8201;&#8212;&#8201;the generated\noutput is written directly to the output without any further\nsubstitutions.</p>\n</dd>\n<dt class=\"hdlist1\"><code>{template:&lt;template&gt;}</code></dt>\n<dd>\n<p>Substitutes the contents of the configuration file section\nnamed <code>&lt;template&gt;</code>. Attribute references contained in the\ntemplate are substituted.</p>\n</dd>\n</dl>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">System reference behavior</div>\n<ul>\n<li>\n<p>System attribute arguments can contain non-system attribute\nreferences.</p>\n</li>\n<li>\n<p>Closing brace characters inside system attribute arguments must be\nescaped with a backslash.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X60\">31. Intrinsic Attributes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Intrinsic attributes are simple attributes that are created\nautomatically from: AsciiDoc document header parameters; asciidoc(1)\ncommand-line arguments; attributes defined in the default\nconfiguration files; the execution context.  Here&#8217;s the list of\npredefined intrinsic attributes:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>{amp}                 ampersand (&amp;) character entity\n{asciidoc-args}       used to pass inherited arguments to asciidoc filters\n{asciidoc-confdir}    the asciidoc(1) global configuration directory\n{asciidoc-dir}        the asciidoc(1) application directory\n{asciidoc-file}       the full path name of the asciidoc(1) script\n{asciidoc-version}    the version of asciidoc(1)\n{author}              author's full name\n{authored}            empty string '' if {author} or {email} defined,\n{authorinitials}      author initials (from document header)\n{backend-&lt;backend&gt;}   empty string ''\n{&lt;backend&gt;-&lt;doctype&gt;} empty string ''\n{backend}             document backend specified by `-b` option\n{backend-confdir}     the directory containing the &lt;backend&gt;.conf file\n{backslash}           backslash character\n{basebackend-&lt;base&gt;}  empty string ''\n{basebackend}         html or docbook\n{blockname}           current block name (note 8).\n{brvbar}              broken vertical bar (|) character\n{docdate}             document last modified date (note 9)\n{docdir}              document input directory name  (note 5)\n{docfile}             document file name  (note 5)\n{docname}             document file name without extension (note 6)\n{doctime}             document last modified time (note 9)\n{doctitle}            document title (from document header)\n{doctype-&lt;doctype&gt;}   empty string ''\n{doctype}             document type specified by `-d` option\n{email}               author's email address (from document header)\n{empty}               empty string ''\n{encoding}            specifies input and output encoding\n{filetype-&lt;fileext&gt;}  empty string ''\n{filetype}            output file name file extension\n{firstname}           author first name (from document header)\n{gt}                  greater than (&gt;) character entity\n{id}                  running block id generated by BlockId elements\n{indir}               input file directory name (note 2,5)\n{infile}              input file name (note 2,5)\n{lastname}            author last name (from document header)\n{ldquo}               Left double quote character (note 7)\n{level}               title level 1..4 (in section titles)\n{listindex}           the list index (1..) of the most recent list item\n{localdate}           the current date (note 9)\n{localtime}           the current time (note 9)\n{lsquo}               Left single quote character (note 7)\n{lt}                  less than (&lt;) character entity\n{manname}             manpage name (defined in NAME section)\n{manpurpose}          manpage (defined in NAME section)\n{mantitle}            document title minus the manpage volume number\n{manvolnum}           manpage volume number (1..8) (from document header)\n{middlename}          author middle name (from document header)\n{nbsp}                non-breaking space character entity\n{notitle}             do not display the document title\n{outdir}              document output directory name (note 2)\n{outfile}             output file name (note 2)\n{plus}                plus character\n{python}              the full path name of the Python interpreter executable\n{rdquo}               right double quote character (note 7)\n{reftext}             running block xreflabel generated by BlockId elements\n{revdate}             document revision date (from document header)\n{revnumber}           document revision number (from document header)\n{rsquo}               right single quote character (note 7)\n{sectnum}             formatted section number (in section titles)\n{sp}                  space character\n{showcomments}        send comment lines to the output\n{title}               section title (in titled elements)\n{two-colons}          two colon characters\n{two-semicolons}      two semicolon characters\n{user-dir}            the ~/.asciidoc directory (if it exists)\n{verbose}             defined as '' if --verbose command option specified\n{wj}                  word-joiner\n{zwsp}                zero-width space character entity</pre>\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Intrinsic attributes are global so avoid defining custom attributes\nwith the same names.</p>\n</li>\n<li>\n<p><code>{outfile}</code>, <code>{outdir}</code>, <code>{infile}</code>, <code>{indir}</code> attributes are\neffectively read-only (you can set them but it won&#8217;t affect the\ninput or output file paths).</p>\n</li>\n<li>\n<p>See also the <a href=\"#X88\">Backend Attributes</a> section for attributes\nthat relate to AsciiDoc XHTML file generation.</p>\n</li>\n<li>\n<p>The entries that translate to blank strings are designed to be used\nfor conditional text inclusion. You can also use the <code>ifdef</code>,\n<code>ifndef</code> and <code>endif</code> System macros for conditional inclusion.\n<sup class=\"footnote\">[<a id=\"_footnoteref_4\" class=\"footnote\" href=\"#_footnotedef_4\" title=\"View footnote.\">4</a>]</sup></p>\n</li>\n<li>\n<p><code>{docfile}</code> and <code>{docdir}</code> refer to root document specified on the\nasciidoc(1) command-line; <code>{infile}</code> and <code>{indir}</code> refer to the\ncurrent input file which may be the root document or an included\nfile. When the input is being read from the standard input\n(<code>stdin</code>) these attributes are undefined.</p>\n</li>\n<li>\n<p>If the input file is the standard input and the output file is not\nthe standard output then <code>{docname}</code> is the output file name sans\nfile extension.</p>\n</li>\n<li>\n<p>See\n<a href=\"https://en.wikipedia.org/wiki/Quotation_mark#Summary_table\">non-English\nusage of quotation marks</a>.</p>\n</li>\n<li>\n<p>The <code>{blockname}</code> attribute identifies the style of the current\nblock. It applies to delimited blocks, lists and tables. Here is a\nlist of <code>{blockname}</code> values (does not include filters or custom\nblock and style names):</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">delimited blocks</dt>\n<dd>\n<p>comment, sidebar, open, pass, literal, verse,\nlisting, quote, example, note, tip, important, caution, warning,\nabstract, partintro</p>\n</dd>\n<dt class=\"hdlist1\">lists</dt>\n<dd>\n<p>arabic, loweralpha, upperalpha, lowerroman, upperroman,\nlabeled, labeled3, labeled4, qanda, horizontal, bibliography,\nglossary</p>\n</dd>\n<dt class=\"hdlist1\">tables</dt>\n<dd>\n<p>table</p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p>If the <code>SOURCE_DATE_EPOCH</code> environment variable is set to a UNIX\ntimestamp, then the <code>{docdate}</code>, <code>{doctime}</code>, <code>{localdate}</code>, and\n<code>{localtime}</code> attributes are computed in the UTC time zone, with any\ntimestamps newer than <code>SOURCE_DATE_EPOCH</code> replaced by\n<code>SOURCE_DATE_EPOCH</code>. (This helps software using AsciiDoc to build\nreproducibly.)</p>\n</li>\n</ol>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X73\">32. Block Element Definitions</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The syntax and behavior of Paragraph, DelimitedBlock, List and Table\nblock elements is determined by block definitions contained in\n<a href=\"#X7\">AsciiDoc configuration file</a> sections.</p>\n</div>\n<div class=\"paragraph\">\n<p>Each definition consists of a section title followed by one or more\nsection entries. Each entry defines a block parameter controlling some\naspect of the block&#8217;s behavior. Here&#8217;s an example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[blockdef-listing]\ndelimiter=^-{4,}$\ntemplate=listingblock\npresubs=specialcharacters,callouts</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Configuration file block definition sections are processed\nincrementally after each configuration file is loaded. Block\ndefinition section entries are merged into the block definition, this\nallows block parameters to be overridden and extended by later\n<a href=\"#X27\">loading configuration files</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc Paragraph, DelimitedBlock, List and Table block elements\nshare a common subset of configuration file parameters:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">delimiter</dt>\n<dd>\n<p>A Python regular expression that matches the first line of a block\nelement&#8201;&#8212;&#8201;in the case of DelimitedBlocks and Tables it also matches\nthe last line.</p>\n</dd>\n<dt class=\"hdlist1\">template</dt>\n<dd>\n<p>The name of the configuration file markup template section that will\nenvelope the block contents. The pipe (<em>|</em>) character is substituted\nfor the block contents. List elements use a set of (list specific)\ntag parameters instead of a single template. The template name can\ncontain attribute references allowing dynamic template selection a\nthe time of template substitution.</p>\n</dd>\n<dt class=\"hdlist1\">options</dt>\n<dd>\n<p>A comma delimited list of element specific option names. In addition\nto being used internally, options are available during markup tag\nand template substitution as attributes with an empty string value\nnamed like <code>&lt;option&gt;-option</code> (where <code>&lt;option&gt;</code> is the option name).\nSee <a href=\"#X74\">attribute options</a> for a complete list of available\noptions.</p>\n</dd>\n<dt class=\"hdlist1\">subs, presubs, postsubs</dt>\n<dd>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><em>presubs</em> and <em>postsubs</em> are lists of comma separated substitutions that are\nperformed on the block contents. <em>presubs</em> is applied first,\n<em>postsubs</em> (if specified) second.</p>\n</li>\n<li>\n<p><em>subs</em> is an alias for <em>presubs</em>.</p>\n</li>\n<li>\n<p>If a <em>filter</em> is allowed (Paragraphs, DelimitedBlocks and Tables)\nand has been specified then <em>presubs</em> and <em>postsubs</em> substitutions\nare performed before and after the filter is run respectively.</p>\n</li>\n<li>\n<p>Allowed values: <em>specialcharacters</em>, <em>quotes</em>, <em>specialwords</em>,\n<em>replacements</em>, <em>macros</em>, <em>attributes</em>, <em>callouts</em>.</p>\n</li>\n<li>\n<p><a id=\"X102\"></a>The following composite values are also allowed:</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><em>none</em></dt>\n<dd>\n<p>No substitutions.</p>\n</dd>\n<dt class=\"hdlist1\"><em>normal</em></dt>\n<dd>\n<p>The following substitutions in the following order:\n<em>specialcharacters</em>, <em>quotes</em>, <em>attributes</em>, <em>specialwords</em>,\n<em>replacements</em>, <em>macros</em>, <em>replacements2</em>.</p>\n</dd>\n<dt class=\"hdlist1\"><em>verbatim</em></dt>\n<dd>\n<p>The following substitutions in the following order:\n<em>specialcharacters</em> and <em>callouts</em>.</p>\n</dd>\n</dl>\n</div>\n</li>\n<li>\n<p><em>normal</em> and <em>verbatim</em> substitutions can be redefined by with\n<code>subsnormal</code> and <code>subsverbatim</code> entries in a configuration file\n<code>[miscellaneous]</code> section.</p>\n</li>\n<li>\n<p>The substitutions are processed in the order in which they are\nlisted and can appear more than once.</p>\n</li>\n</ul>\n</div>\n</dd>\n<dt class=\"hdlist1\">filter</dt>\n<dd>\n<p>This optional entry specifies an executable shell command for\nprocessing block content (Paragraphs, DelimitedBlocks and Tables).\nThe filter command can contain attribute references.</p>\n</dd>\n<dt class=\"hdlist1\">posattrs</dt>\n<dd>\n<p>Optional comma separated list of positional attribute names. This\nlist maps positional attributes (in the block&#8217;s <a href=\"#X21\">attribute\nlist</a>) to named block attributes. The following example, from the\nQuoteBlock definition, maps the first and section positional\nattributes:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>posattrs=attribution,citetitle</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">style</dt>\n<dd>\n<p>This optional parameter specifies the default style name.</p>\n</dd>\n<dt class=\"hdlist1\">&lt;stylename&gt;-style</dt>\n<dd>\n<p>Optional style definition (see <a href=\"#X23\">Styles</a> below).</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>The following block parameters behave like document attributes and can\nbe set in block attribute lists and style definitions: <em>template</em>,\n<em>options</em>, <em>subs</em>, <em>presubs</em>, <em>postsubs</em>, <em>filter</em>.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X23\">32.1. Styles</h3>\n<div class=\"paragraph\">\n<p>A style is a set of block parameter bundled as a single named\nparameter. The following example defines a style named <em>verbatim</em>:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>verbatim-style=template=\"literalblock\",subs=\"verbatim\"</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If a block&#8217;s <a href=\"#X21\">attribute list</a> contains a <em>style</em> attribute then\nthe corresponding style parameters are be merged into the default\nblock definition parameters.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>All style parameter names must be suffixed with <code>-style</code> and the\nstyle parameter value is in the form of a list of <a href=\"#X21\">named\nattributes</a>.</p>\n</li>\n<li>\n<p>The <em>template</em> style parameter is mandatory, other parameters can be\nomitted in which case they inherit their values from the default\nblock definition parameters.</p>\n</li>\n<li>\n<p>Multi-item style parameters (<em>subs</em>,<em>presubs</em>,<em>postsubs</em>,<em>posattrs</em>)\nmust be specified using Python tuple syntax (rather than a simple\nlist of values as they in separate entries) e.g.\n<code>postsubs=(\"callouts\",)</code> not <code>postsubs=\"callouts\"</code>.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_paragraphs_2\">32.2. Paragraphs</h3>\n<div class=\"paragraph\">\n<p>Paragraph translation is controlled by <code>[paradef-*]</code> configuration\nfile section entries. Users can define new types of paragraphs and\nmodify the behavior of existing types by editing AsciiDoc\nconfiguration files.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here is the shipped Default paragraph definition:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[paradef-default]\ndelimiter=(?P&lt;text&gt;\\S.*)\ntemplate=paragraph</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The normal paragraph definition has a couple of special properties:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>It must exist and be defined in a configuration file section named\n<code>[paradef-default]</code>.</p>\n</li>\n<li>\n<p>Irrespective of its position in the configuration files default\nparagraph document matches are attempted only after trying all\nother paragraph types.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>Paragraph specific block parameter notes:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">delimiter</dt>\n<dd>\n<p>This regular expression must contain the named group <em>text</em> which\nmatches the text on the first line.  Paragraphs are terminated by a\nblank line, the end of file, or the start of a DelimitedBlock.</p>\n</dd>\n<dt class=\"hdlist1\">options</dt>\n<dd>\n<p>The <em>listelement</em> option specifies that paragraphs of this type will\nautomatically be considered part of immediately preceding list\nitems.  The <em>skip</em> option causes the paragraph to be treated as a\ncomment (see <a href=\"#X26\">CommentBlocks</a>).</p>\n</dd>\n</dl>\n</div>\n<div class=\"olist arabic\">\n<div class=\"title\">Paragraph processing proceeds as follows:</div>\n<ol class=\"arabic\">\n<li>\n<p>The paragraph text is aligned to the left margin.</p>\n</li>\n<li>\n<p>Optional <em>presubs</em> inline substitutions are performed on the\nparagraph text.</p>\n</li>\n<li>\n<p>If a filter command is specified it is executed and the paragraph\ntext piped to its standard input; the filter output replaces the\nparagraph text.</p>\n</li>\n<li>\n<p>Optional <em>postsubs</em> inline substitutions are performed on the\nparagraph text.</p>\n</li>\n<li>\n<p>The paragraph text is enveloped by the paragraph&#8217;s markup template\nand written to the output file.</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_delimited_blocks\">32.3. Delimited Blocks</h3>\n<div class=\"paragraph\">\n<p>DelimitedBlock <em>options</em> values are:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">sectionbody</dt>\n<dd>\n<p>The block contents are processed as a SectionBody.</p>\n</dd>\n<dt class=\"hdlist1\">skip</dt>\n<dd>\n<p>The block is treated as a comment (see <a href=\"#X26\">CommentBlocks</a>).\nPreceding <a href=\"#X21\">attribute lists</a> and <a href=\"#X42\">block titles</a> are not\nconsumed.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p><em>presubs</em>, <em>postsubs</em> and <em>filter</em> entries are ignored when\n<em>sectionbody</em> or <em>skip</em> options are set.</p>\n</div>\n<div class=\"paragraph\">\n<p>DelimitedBlock processing proceeds as follows:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Optional <em>presubs</em> substitutions are performed on the block\ncontents.</p>\n</li>\n<li>\n<p>If a filter is specified it is executed and the block&#8217;s contents\npiped to its standard input. The filter output replaces the block\ncontents.</p>\n</li>\n<li>\n<p>Optional <em>postsubs</em> substitutions are performed on the block\ncontents.</p>\n</li>\n<li>\n<p>The block contents is enveloped by the block&#8217;s markup template and\nwritten to the output file.</p>\n</li>\n</ol>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nAttribute expansion is performed on the block filter command\nbefore it is executed, this is useful for passing arguments to the\nfilter.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_lists\">32.4. Lists</h3>\n<div class=\"paragraph\">\n<p>List behavior and syntax is determined by <code>[listdef-*]</code> configuration\nfile sections. The user can change existing list behavior and add new\nlist types by editing configuration files.</p>\n</div>\n<div class=\"paragraph\">\n<p>List specific block definition notes:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">type</dt>\n<dd>\n<p>This is either <em>bulleted</em>,<em>numbered</em>,<em>labeled</em> or <em>callout</em>.</p>\n</dd>\n<dt class=\"hdlist1\">delimiter</dt>\n<dd>\n<p>A Python regular expression that matches the first line of a\nlist element entry. This expression can contain the named groups\n<em>text</em> (bulleted groups), <em>index</em> and <em>text</em> (numbered lists),\n<em>label</em> and <em>text</em> (labeled lists).</p>\n</dd>\n<dt class=\"hdlist1\">tags</dt>\n<dd>\n<p>The <code>&lt;name&gt;</code> of the <code>[listtags-&lt;name&gt;]</code> configuration file section\ncontaining list markup tag definitions.  The tag entries (<em>list</em>,\n<em>entry</em>, <em>label</em>, <em>term</em>, <em>text</em>) map the AsciiDoc list structure to\nbackend markup; see the <em>listtags</em> sections in the AsciiDoc\ndistributed backend <code>.conf</code> configuration files for examples.</p>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_tables_2\">32.5. Tables</h3>\n<div class=\"paragraph\">\n<p>Table behavior and syntax is determined by <code>[tabledef-*]</code> and\n<code>[tabletags-*]</code> configuration file sections. The user can change\nexisting table behavior and add new table types by editing\nconfiguration files.  The following <code>[tabledef-*]</code> section entries\ngenerate table output markup elements:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">colspec</dt>\n<dd>\n<p>The table <em>colspec</em> tag definition.</p>\n</dd>\n<dt class=\"hdlist1\">headrow, footrow, bodyrow</dt>\n<dd>\n<p>Table header, footer and body row tag definitions. <em>headrow</em> and\n<em>footrow</em> table definition entries default to <em>bodyrow</em> if\nthey are undefined.</p>\n</dd>\n<dt class=\"hdlist1\">headdata, footdata, bodydata</dt>\n<dd>\n<p>Table header, footer and body data tag definitions. <em>headdata</em> and\n<em>footdata</em> table definition entries default to <em>bodydata</em> if they\nare undefined.</p>\n</dd>\n<dt class=\"hdlist1\">paragraph</dt>\n<dd>\n<p>If the <em>paragraph</em> tag is specified then blank lines in the cell\ndata are treated as paragraph delimiters and marked up using this\ntag.</p>\n</dd>\n</dl>\n</div>\n<div id=\"X4\" class=\"paragraph\">\n<p>Table behavior is also influenced by the following <code>[miscellaneous]</code>\nconfiguration file entries:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">pagewidth</dt>\n<dd>\n<p>This integer value is the printable width of the output media. See\n<a href=\"#X69\">table attributes</a>.</p>\n</dd>\n<dt class=\"hdlist1\">pageunits</dt>\n<dd>\n<p>The units of width in output markup width attribute values.</p>\n</dd>\n</dl>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Table definition behavior</div>\n<ul>\n<li>\n<p>The output markup generation is specifically designed to work with\nthe HTML and CALS (DocBook) table models, but should be adaptable to\nmost XML table schema.</p>\n</li>\n<li>\n<p>Table definitions can be &#8220;mixed in&#8221; from multiple cascading\nconfiguration files.</p>\n</li>\n<li>\n<p>New table definitions inherit the default table and table tags\ndefinitions (<code>[tabledef-default]</code> and <code>[tabletags-default]</code>) so you\nonly need to override those conf file entries that require\nmodification.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X59\">33. Filters</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc filters allow external commands to process AsciiDoc\n<em>Paragraphs</em>, <em>DelimitedBlocks</em> and <em>Table</em> content. Filters are\nprimarily an extension mechanism for generating specialized outputs.\nFilters are implemented using external commands which are specified in\nconfiguration file definitions.</p>\n</div>\n<div class=\"paragraph\">\n<p>There&#8217;s nothing special about the filters, they&#8217;re just standard UNIX\nfilters: they read text from the standard input, process it, and write\nto the standard output.</p>\n</div>\n<div class=\"paragraph\">\n<p>The asciidoc(1) command <code>--filter</code> option can be used to install and\nremove filters. The same option is used to unconditionally load a\nfilter.</p>\n</div>\n<div class=\"paragraph\">\n<p>Attribute substitution is performed on the filter command prior to\nexecution&#8201;&#8212;&#8201;attributes can be used to pass parameters from the\nAsciiDoc source document to the filter.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nFilters sometimes included executable code. Before installing\na filter you should verify that it is from a trusted source.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_filter_search_paths\">33.1. Filter Search Paths</h3>\n<div class=\"paragraph\">\n<p>If the filter command does not specify a directory path then\nasciidoc(1) recursively searches for the executable filter command:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>First it looks in the user&#8217;s <code>$HOME/.asciidoc/filters</code> directory.</p>\n</li>\n<li>\n<p>Next the global filters directory (usually <code>/etc/asciidoc/filters</code>\nor <code>/usr/local/etc/asciidoc</code>) directory is searched.</p>\n</li>\n<li>\n<p>Then it looks in the asciidoc(1) <code>./filters</code> directory.</p>\n</li>\n<li>\n<p>Finally it relies on the executing shell to search the environment\nsearch path (<code>$PATH</code>).</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Standard practice is to install each filter in it&#8217;s own sub-directory\nwith the same name as the filter&#8217;s style definition. For example the\nmusic filter&#8217;s style name is <em>music</em> so it&#8217;s configuration and filter\nfiles are stored in the <code>filters/music</code> directory.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_filter_configuration_files\">33.2. Filter Configuration Files</h3>\n<div class=\"paragraph\">\n<p>Filters are normally accompanied by a configuration file containing a\nParagraph or DelimitedBlock definition along with corresponding markup\ntemplates.</p>\n</div>\n<div class=\"paragraph\">\n<p>While it is possible to create new <em>Paragraph</em> or <em>DelimitedBlock</em>\ndefinitions the preferred way to implement a filter is to add a\n<a href=\"#X23\">style</a> to the existing Paragraph and ListingBlock definitions\n(all filters shipped with AsciiDoc use this technique). The filter is\napplied to the paragraph or delimited block by preceding it with an\nattribute list: the first positional attribute is the style name,\nremaining attributes are normally filter specific parameters.</p>\n</div>\n<div class=\"paragraph\">\n<p>asciidoc(1) auto-loads all <code>.conf</code> files found in the filter search\npaths unless the container directory also contains a file named\n<code>__noautoload__</code> (see previous section). The <code>__noautoload__</code> feature\nis used for filters that will be loaded manually using the <code>--filter</code>\noption.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X56\">33.3. Example Filter</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc comes with a toy filter for highlighting source code keywords\nand comments.  See also the <code>./filters/code/code-filter-readme.txt</code>\nfile.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nThe purpose of this toy filter is to demonstrate how to write a\nfilter&#8201;&#8212;&#8201;it&#8217;s much to simplistic to be passed off as a code syntax\nhighlighter.  If you want a full featured multi-language highlighter\nuse the <a href=\"https://asciidoc.org/source-highlight-filter.html\">source code highlighter\nfilter</a>.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_built_in_filters\">33.4. Built-in filters</h3>\n<div class=\"paragraph\">\n<p>The AsciiDoc distribution includes <em>source</em>, <em>music</em>, <em>latex</em> and\n<em>graphviz</em> filters, details are on the\n<a href=\"https://asciidoc.org/index.html#_filters\">AsciiDoc website</a>.</p>\n</div>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<caption class=\"title\">Table 11. Built-in filters list</caption>\n<colgroup>\n<col style=\"width: 16.6666%;\">\n<col style=\"width: 83.3334%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Filter name</th>\n<th class=\"tableblock halign-left valign-top\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>music</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">A <a href=\"https://asciidoc.org/music-filter.html\">music filter</a> is included in the\ndistribution <code>./filters/</code> directory. It translates music in\n<a href=\"https://lilypond.org/\">LilyPond</a> or <a href=\"https://abcnotation.com/\">ABC</a>\nnotation to standard classical notation.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>source</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">A <a href=\"https://asciidoc.org/source-highlight-filter.html\">source code highlight filter</a>\nis included in the distribution <code>./filters/</code> directory.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>latex</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The <a href=\"https://asciidoc.org/latex-filter.html\">AsciiDoc LaTeX filter</a> translates\nLaTeX source to an image that is automatically inserted into the\nAsciiDoc output documents.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>graphviz</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Gouichi Iisaka has written a <a href=\"https://www.graphviz.org/\">Graphviz</a>\nfilter for AsciiDoc.  Graphviz generates diagrams from a textual\nspecification. Gouichi Iisaka&#8217;s Graphviz filter is included in the\nAsciiDoc distribution. Here are some\n<a href=\"https://asciidoc.org/asciidoc-graphviz-sample.html\">AsciiDoc Graphviz examples</a>.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X58\">33.5. Filter plugins</h3>\n<div class=\"paragraph\">\n<p>Filter <a href=\"#X101\">plugins</a> are a mechanism for distributing AsciiDoc\nfilters.  A filter plugin is a Zip file containing the files that\nconstitute a filter.  The asciidoc(1) <code>--filter</code> option is used to\nload and manage filer <a href=\"#X101\">plugins</a>.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Filter plugins <a href=\"#X27\">take precedence</a> over built-in filters with\nthe same name.</p>\n</li>\n<li>\n<p>By default filter plugins are installed in\n<code>$HOME/.asciidoc/filters/&lt;filter&gt;</code> where <code>&lt;filter&gt;</code> is the filter\nname.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X101\">34. Plugins</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The AsciiDoc plugin architecture is an extension mechanism that allows\nadditional <a href=\"#X100\">backends</a>, <a href=\"#X58\">filters</a> and <a href=\"#X99\">themes</a> to be\nadded to AsciiDoc.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>A plugin is a Zip file containing an AsciiDoc backend, filter or\ntheme (configuration files, stylesheets, scripts, images).</p>\n</li>\n<li>\n<p>The asciidoc(1) <code>--backend</code>, <code>--filter</code> and <code>--theme</code> command-line\noptions are used to load and manage plugins. Each of these options\nresponds to the plugin management <em>install</em>, <em>list</em>, <em>remove</em> and\n<em>build</em> commands.</p>\n</li>\n<li>\n<p>The plugin management command names are reserved and cannot be used\nfor filter, backend or theme names.</p>\n</li>\n<li>\n<p>The plugin Zip file name always begins with the backend, filter or\ntheme name.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Plugin commands and conventions are documented in the asciidoc(1) man\npage.  You can find lists of plugins on the\n<a href=\"https://asciidoc.org/plugins.html\">AsciiDoc website</a>.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X36\">35. Help Commands</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The asciidoc(1) command has a <code>--help</code> option which prints help topics\nto stdout. The default topic summarizes asciidoc(1) usage:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc --help</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>To print a help topic specify the topic name as a command argument.\nHelp topic names can be shortened so long as they are not ambiguous.\nExamples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc --help manpage\n$ asciidoc -h m              # Short version of previous example.\n$ asciidoc --help syntax\n$ asciidoc -h s              # Short version of previous example.</pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_customizing_help\">35.1. Customizing Help</h3>\n<div class=\"paragraph\">\n<p>To change, delete or add your own help topics edit a help\nconfiguration file.  The help file name <code>help-&lt;lang&gt;.conf</code> is based on\nthe setting of the <code>lang</code> attribute, it defaults to <code>help.conf</code>\n(English).  The <a href=\"#X27\">help file location</a> will depend on whether you\nwant the topics to apply to all users or just the current user.</p>\n</div>\n<div class=\"paragraph\">\n<p>The help topic files have the same named section format as other\n<a href=\"#X7\">configuration files</a>. The <code>help.conf</code> files are stored in the\nsame locations and loaded in the same order as other configuration\nfiles.</p>\n</div>\n<div class=\"paragraph\">\n<p>When the <code>--help</code> command-line option is specified AsciiDoc loads the\nappropriate help files and then prints the contents of the section\nwhose name matches the help topic name.  If a topic name is not\nspecified <code>default</code> is used. You don&#8217;t need to specify the whole help\ntopic name on the command-line, just enough letters to ensure it&#8217;s not\nambiguous. If a matching help file section is not found a list of\navailable topics is printed.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_tips_and_tricks\">36. Tips and Tricks</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_know_your_editor\">36.1. Know Your Editor</h3>\n<div class=\"paragraph\">\n<p>Writing AsciiDoc documents will be a whole lot more pleasant if you\nknow your favorite text editor. Learn how to indent and reformat text\nblocks, paragraphs, lists and sentences. <a href=\"#X20\">Tips for <em>vim</em> users</a>\nfollow.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X20\">36.2. Vim Commands for Formatting AsciiDoc</h3>\n<div class=\"sect3\">\n<h4 id=\"_text_wrap_paragraphs\">36.2.1. Text Wrap Paragraphs</h4>\n<div class=\"paragraph\">\n<p>Use the vim <code>:gq</code> command to reformat paragraphs. Setting the\n<em>textwidth</em> sets the right text wrap margin; for example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:set textwidth=70</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>To reformat a paragraph:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Position the cursor at the start of the paragraph.</p>\n</li>\n<li>\n<p>Type <code>gq}</code>.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>Execute <code>:help gq</code> command to read about the vim gq command.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Assign the <code>gq}</code> command to the Q key with the <code>nnoremap Q gq}</code>\ncommand or put it in your <code>~/.vimrc</code> file to so it&#8217;s always\navailable (see the <a href=\"#X61\">Example <code>~/.vimrc</code> file</a>).</p>\n</li>\n<li>\n<p>Put <code>set</code> commands in your <code>~/.vimrc</code> file so you don&#8217;t have to\nenter them manually.</p>\n</li>\n<li>\n<p>The Vim website (<a href=\"https://www.vim.org/\" class=\"bare\">https://www.vim.org/</a>) has a wealth of resources,\nincluding scripts for automated spell checking and ASCII Art\ndrawing.</p>\n</li>\n</ul>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_format_lists\">36.2.2. Format Lists</h4>\n<div class=\"paragraph\">\n<p>The <code>gq</code> command can also be used to format bulleted, numbered and\ncallout lists. First you need to set the <code>comments</code>, <code>formatoptions</code>\nand <code>formatlistpat</code> (see the <a href=\"#X61\">Example <code>~/.vimrc</code> file</a>).</p>\n</div>\n<div class=\"paragraph\">\n<p>Now you can format simple lists that use dash, asterisk, period and\nplus bullets along with numbered ordered lists:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Position the cursor at the start of the list.</p>\n</li>\n<li>\n<p>Type <code>gq}</code>.</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_indent_paragraphs\">36.2.3. Indent Paragraphs</h4>\n<div class=\"paragraph\">\n<p>Indent whole paragraphs by indenting the fist line with the desired\nindent and then executing the <code>gq}</code> command.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"X61\">36.2.4. Example <code>~/.vimrc</code> File</h4>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>\" Use bold bright fonts.\nset background=dark\n\n\" Show tabs and trailing characters.\n\"set listchars=tab:»·,trail:·,eol:¬\nset listchars=tab:»·,trail:·\nset list\n\n\" Reformat paragraphs and list.\nnnoremap &lt;Leader&gt;r gq}\n\n\" Delete trailing white space and Dos-returns and to expand tabs to spaces.\nnnoremap &lt;Leader&gt;t :set et&lt;CR&gt;:retab!&lt;CR&gt;:%s/[\\r \\t]\\+$//&lt;CR&gt;\n\nautocmd BufRead,BufNewFile *.txt,*.asciidoc,README,TODO,CHANGELOG,NOTES,ABOUT\n        \\ setlocal autoindent expandtab tabstop=8 softtabstop=2 shiftwidth=2 filetype=asciidoc\n        \\ textwidth=70 wrap formatoptions=tcqn\n        \\ formatlistpat=^\\\\s*\\\\d\\\\+\\\\.\\\\s\\\\+\\\\\\\\|^\\\\s*&lt;\\\\d\\\\+&gt;\\\\s\\\\+\\\\\\\\|^\\\\s*[a-zA-Z.]\\\\.\\\\s\\\\+\\\\\\\\|^\\\\s*[ivxIVX]\\\\+\\\\.\\\\s\\\\+\n        \\ comments=s1:/*,ex:*/,://,b:#,:%,:XCOMM,fb:-,fb:*,fb:+,fb:.,fb:&gt;</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_troubleshooting\">36.3. Troubleshooting</h3>\n<div class=\"paragraph\">\n<p>AsciiDoc diagnostic features are detailed in the <a href=\"#X82\">Diagnostics\nappendix</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_gotchas\">36.4. Gotchas</h3>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Incorrect character encoding</dt>\n<dd>\n<p>If you get an error message like <code>'UTF-8' codec can't decode ...</code>\nthen you source file contains invalid UTF-8 characters&#8201;&#8212;&#8201;set the\nAsciiDoc <a href=\"#X54\">encoding attribute</a> for the correct character set\n(typically ISO-8859-1 (Latin-1) for European languages).</p>\n</dd>\n<dt class=\"hdlist1\">Invalid output</dt>\n<dd>\n<p>AsciiDoc attempts to validate the input AsciiDoc source but makes\nno attempt to validate the output markup, it leaves that to\nexternal tools such as <code>xmllint(1)</code> (integrated into <code>a2x(1)</code>).\nBackend validation cannot be hardcoded into AsciiDoc because\nbackends are dynamically configured. The following example\ngenerates valid HTML but invalid DocBook (the DocBook <code>literal</code>\nelement cannot contain an <code>emphasis</code> element):</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>+monospaced text with an _emphasized_ word+</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">Misinterpreted text formatting</dt>\n<dd>\n<p>You can suppress markup expansion by placing a backslash character\nimmediately in front of the element. The following example\nsuppresses inline monospaced formatting:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>\\+1 for C++.</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">Overlapping text formatting</dt>\n<dd>\n<p>Overlapping text formatting will generate illegal overlapping\nmarkup tags which will result in downstream XML parsing errors.\nHere&#8217;s an example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Some *strong markup _that overlaps* emphasized markup_.</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">Ambiguous underlines</dt>\n<dd>\n<p>A DelimitedBlock can immediately follow a paragraph without an\nintervening blank line, but be careful, a single line paragraph\nunderline may be misinterpreted as a section title underline\nresulting in a &#8220;closing block delimiter expected&#8221; error.</p>\n</dd>\n<dt class=\"hdlist1\">Ambiguous ordered list items</dt>\n<dd>\n<p>Lines beginning with numbers at the end of sentences will be\ninterpreted as ordered list items.  The following example\n(incorrectly) begins a new list with item number 1999:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>He was last sighted in\n1999. Since then things have moved on.</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <em>list item out of sequence</em> warning makes it unlikely that this\nproblem will go unnoticed.</p>\n</div>\n</dd>\n<dt class=\"hdlist1\">Special characters in attribute values</dt>\n<dd>\n<p>Special character substitution precedes attribute substitution so\nif attribute values contain special characters you may, depending\non the substitution context, need to escape the special characters\nyourself. For example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a 'orgname=Bill &amp;amp; Ben Inc.' mydoc.txt</pre>\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">Attribute lists</dt>\n<dd>\n<p>If any named attribute entries are present then all string\nattribute values must be quoted.  For example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>[\"Desktop screenshot\",width=32]</pre>\n</div>\n</div>\n</dd>\n</dl>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"X90\">36.5. Combining separate documents</h3>\n<div class=\"paragraph\">\n<p>You have a number of stand-alone AsciiDoc documents that you want to\nprocess as a single document. Simply processing them with a series of\n<code>include</code> macros won&#8217;t work because the documents contain (level 0)\ndocument titles.  The solution is to create a top level wrapper\ndocument and use the <code>leveloffset</code> attribute to push them all down one\nlevel. For example:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>Combined Document Title\n=======================\n\n// Push titles down one level.\n:leveloffset: 1\n\ninclude::document1.txt[]\n\n// Return to normal title levels.\n:leveloffset: 0\n\nA Top Level Section\n-------------------\nLorum ipsum.\n\n// Push titles down one level.\n:leveloffset: 1\n\ninclude::document2.txt[]\n\ninclude::document3.txt[]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The document titles in the included documents will now be processed as\nlevel 1 section titles, level 1 sections as level 2 sections and so\non.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Put a blank line between the <code>include</code> macro lines to ensure the\ntitle of the included document is not seen as part of the last\nparagraph of the previous document.</p>\n</li>\n<li>\n<p>You won&#8217;t want non-title document header lines (for example, Author\nand Revision lines) in the included files&#8201;&#8212;&#8201;conditionally exclude\nthem if they are necessary for stand-alone processing.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_processing_document_sections_separately\">36.6. Processing document sections separately</h3>\n<div class=\"paragraph\">\n<p>You have divided your AsciiDoc document into separate files (one per\ntop level section) which are combined and processed with the following\ntop level document:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>Combined Document Title\n=======================\nJoe Bloggs\nv1.0, 12-Aug-03\n\ninclude::section1.txt[]\n\ninclude::section2.txt[]\n\ninclude::section3.txt[]</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You also want to process the section files as separate documents.\nThis is easy because asciidoc(1) will quite happily process\n<code>section1.txt</code>, <code>section2.txt</code> and <code>section3.txt</code> separately&#8201;&#8212;&#8201;the\nresulting output documents contain the section but have no document\ntitle.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_processing_document_snippets\">36.7. Processing document snippets</h3>\n<div class=\"paragraph\">\n<p>Use the <code>-s</code> (<code>--no-header-footer</code>) command-line option to suppress\nheader and footer output, this is useful if the processed output is to\nbe included in another file. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -sb docbook section1.txt</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>asciidoc(1) can be used as a filter, so you can pipe chunks of text\nthrough it. For example:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ echo 'Hello *World!*' | asciidoc -s -\n&lt;div class=\"paragraph\"&gt;&lt;p&gt;Hello &lt;strong&gt;World!&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_badges_in_html_page_footers\">36.8. Badges in HTML page footers</h3>\n<div class=\"paragraph\">\n<p>See the <code>[footer]</code> section in the AsciiDoc distribution <code>xhtml11.conf</code>\nconfiguration file.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_pretty_printing_asciidoc_output\">36.9. Pretty printing AsciiDoc output</h3>\n<div class=\"paragraph\">\n<p>If the indentation and layout of the asciidoc(1) output is not to your\nliking you can:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Change the indentation and layout of configuration file markup\ntemplate sections. The <code>{empty}</code> attribute is useful for outputting\ntrailing blank lines in markup templates.</p>\n</li>\n<li>\n<p>Use <a href=\"https://www.html-tidy.org/\">HTML Tidy</a> program to tidy\nasciidoc(1) output. Example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -b docbook -o - mydoc.txt | tidy -indent -xml &gt;mydoc.xml</pre>\n</div>\n</div>\n</li>\n<li>\n<p>Use the <code>xmllint(1)</code> format option. Example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ xmllint --format mydoc.xml</pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_supporting_minor_docbook_dtd_variations\">36.10. Supporting minor DocBook DTD variations</h3>\n<div class=\"paragraph\">\n<p>The conditional inclusion of DocBook SGML markup at the end of the\ndistribution <code>docbook45.conf</code> file illustrates how to support minor\nDTD variations. The included sections override corresponding entries\nfrom preceding sections.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_creating_stand_alone_html_documents\">36.11. Creating stand-alone HTML documents</h3>\n<div class=\"paragraph\">\n<p>If you&#8217;ve ever tried to send someone an HTML document that includes\nstylesheets and images you&#8217;ll know that it&#8217;s not as straight-forward\nas exchanging a single file.  AsciiDoc has options to create\nstand-alone documents containing embedded images, stylesheets and\nscripts.  The following AsciiDoc command creates a single file\ncontaining <a href=\"#X66\">embedded images</a>, CSS stylesheets, and JavaScript\n(for table of contents and footnotes):</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a data-uri -a icons -a toc -a max-width=55em article.txt</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You can view the HTML file here: <a href=\"https://asciidoc.org/article-standalone.html\" class=\"bare\">https://asciidoc.org/article-standalone.html</a></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_shipping_stand_alone_asciidoc_source\">36.12. Shipping stand-alone AsciiDoc source</h3>\n<div class=\"paragraph\">\n<p>Reproducing presentation documents from someone else&#8217;s source has one\nmajor problem: unless your configuration files are the same as the\ncreator&#8217;s you won&#8217;t get the same output.</p>\n</div>\n<div class=\"paragraph\">\n<p>The solution is to create a single backend specific configuration file\nusing the asciidoc(1) <code>-c</code> (<code>--dump-conf</code>) command-line option. You\nthen ship this file along with the AsciiDoc source document plus the\n<code>asciidoc.py</code> script. The only end user requirement is that they have\nPython installed (and that they consider you a trusted source). This\nexample creates a composite HTML configuration file for <code>mydoc.txt</code>:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -cb xhtml11 mydoc.txt &gt; mydoc-xhtml11.conf</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Ship <code>mydoc.txt</code>, <code>mydoc-html.conf</code>, and <code>asciidoc.py</code>. With\nthese three files (and a Python interpreter) the recipient can\nregenerate the HMTL output:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ ./asciidoc.py -eb xhtml11 mydoc.txt</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <code>-e</code> (<code>--no-conf</code>) option excludes the use of implicit\nconfiguration files, ensuring that only entries from the\n<code>mydoc-html.conf</code> configuration are used.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_inserting_blank_space\">36.13. Inserting blank space</h3>\n<div class=\"paragraph\">\n<p>Adjust your style sheets to add the correct separation between block\nelements. Inserting blank paragraphs containing a single non-breaking\nspace character <code>{nbsp}</code> works but is an ad hoc solution compared\nto using style sheets.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_closing_open_sections\">36.14. Closing open sections</h3>\n<div class=\"paragraph\">\n<p>You can close off section tags up to level <code>N</code> by calling the\n<code>eval::[Section.setlevel(N)]</code> system macro. This is useful if you\nwant to include a section composed of raw markup. The following\nexample includes a DocBook glossary division at the top section level\n(level 0):</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>ifdef::basebackend-docbook[]\n\n\\eval::[Section.setlevel(0)]\n\n+++++++++++++++++++++++++++++++\n&lt;glossary&gt;\n  &lt;title&gt;Glossary&lt;/title&gt;\n  &lt;glossdiv&gt;\n  ...\n  &lt;/glossdiv&gt;\n&lt;/glossary&gt;\n+++++++++++++++++++++++++++++++\nendif::basebackend-docbook[]</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_validating_output_files\">36.15. Validating output files</h3>\n<div class=\"paragraph\">\n<p>Use <code>xmllint(1)</code> to check the AsciiDoc generated markup is both well\nformed and valid. Here are some examples:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ xmllint --nonet --noout --valid docbook-file.xml\n$ xmllint --nonet --noout --valid xhtml11-file.html\n$ xmllint --nonet --noout --valid --html html4-file.html</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The <code>--valid</code> option checks the file is valid against the document\ntype&#8217;s DTD, if the DTD is not installed in your system&#8217;s catalog then\nit will be fetched from its Internet location. If you omit the\n<code>--valid</code> option the document will only be checked that it is well\nformed.</p>\n</div>\n<div class=\"paragraph\">\n<p>The online <a href=\"https://validator.w3.org/#validate_by_uri+with_options\">W3C\nMarkup Validation Service</a> is the defacto standard when it comes to\nvalidating HTML (it validates all HTML standards including HTML5).</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_glossary\">Glossary</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist glossary\">\n<dl>\n<dt><a id=\"X8\"></a> Block element</dt>\n<dd>\n<p>An AsciiDoc block element is a document entity composed of one or\nmore whole lines of text.</p>\n</dd>\n<dt><a id=\"X34\"></a> Inline element</dt>\n<dd>\n<p>AsciiDoc inline elements occur within block element textual\ncontent, they perform formatting and substitution tasks.</p>\n</dd>\n<dt>Formal element</dt>\n<dd>\n<p>An AsciiDoc block element that has a BlockTitle. Formal elements\nare normally listed in front or back matter, for example lists of\ntables, examples and figures.</p>\n</dd>\n<dt>Verbatim element</dt>\n<dd>\n<p>The word verbatim indicates that white space and line breaks in\nthe source document are to be preserved in the output document.</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_migration_notes\">Appendix A: Migration Notes</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"X53\">Version 7 to version 8</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>A new set of quotes has been introduced which may match inline text\nin existing documents&#8201;&#8212;&#8201;if they do you&#8217;ll need to escape the\nmatched text with backslashes.</p>\n</li>\n<li>\n<p>The index entry inline macro syntax has changed&#8201;&#8212;&#8201;if your documents\ninclude indexes you may need to edit them.</p>\n</li>\n<li>\n<p>Replaced a2x(1) <code>--no-icons</code> and <code>--no-copy</code> options with their\nnegated equivalents: <code>--icons</code> and <code>--copy</code> respectively. The\ndefault behavior has also changed&#8201;&#8212;&#8201;the use of icons and copying of\nicon and CSS files must be specified explicitly with the <code>--icons</code>\nand <code>--copy</code> options.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>The rationale for the changes can be found in the AsciiDoc\n<code>CHANGELOG</code>.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nIf you want to disable unconstrained quotes, the new alternative\nconstrained quotes syntax and the new index entry syntax then you can\ndefine the attribute <code>asciidoc7compatible</code> (for example by using the\n<code>-a asciidoc7compatible</code> command-line option).\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X38\">Appendix B: Packager Notes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Read the <code>README</code> and <code>INSTALL</code> files (in the distribution root\ndirectory) for install prerequisites and procedures.  The distribution\n<code>Makefile.in</code> (used by <code>configure</code> to generate the <code>Makefile</code>) is the\ncanonical installation procedure.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X39\">Appendix C: AsciiDoc Safe Mode</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc <em>safe mode</em> skips potentially dangerous scripted sections in\nAsciiDoc source files by inhibiting the execution of arbitrary code or\nthe inclusion of arbitrary files.</p>\n</div>\n<div class=\"paragraph\">\n<p>The safe mode is disabled by default, it can be enabled with the\nasciidoc(1) <code>--safe</code> command-line option.</p>\n</div>\n<div class=\"ulist\">\n<div class=\"title\">Safe mode constraints</div>\n<ul>\n<li>\n<p><code>eval</code>, <code>sys</code> and <code>sys2</code> executable attributes and block macros are\nnot executed.</p>\n</li>\n<li>\n<p><code>include::&lt;filename&gt;[]</code> and <code>include1::&lt;filename&gt;[]</code> block macro\nfiles must reside inside the parent file&#8217;s directory.</p>\n</li>\n<li>\n<p><code>{include:&lt;filename&gt;}</code> executable attribute files must reside\ninside the source document directory.</p>\n</li>\n<li>\n<p>Passthrough Blocks are dropped.</p>\n</li>\n</ul>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>The safe mode is not designed to protect against unsafe AsciiDoc\nconfiguration files. Be especially careful when:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Implementing filters.</p>\n</li>\n<li>\n<p>Implementing elements that don&#8217;t escape special characters.</p>\n</li>\n<li>\n<p>Accepting configuration files from untrusted sources.</p>\n</li>\n</ol>\n</div>\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_using_asciidoc_with_non_english_languages\">Appendix D: Using AsciiDoc with non-English Languages</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc can process UTF-8 character sets but there are some things\nyou need to be aware of:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>If you are generating output documents using a DocBook toolchain\nthen you should set the AsciiDoc <code>lang</code> attribute to the appropriate\nlanguage (it defaults to <code>en</code> (English)). This will ensure things\nlike table of contents, figure and table captions and admonition\ncaptions are output in the specified language.  For example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ a2x -a lang=es doc/article.txt</pre>\n</div>\n</div>\n</li>\n<li>\n<p>If you are outputting HTML directly from asciidoc(1) you&#8217;ll\nneed to set the various <code>*_caption</code> attributes to match your target\nlanguage (see the list of captions and titles in the <code>[attributes]</code>\nsection of the distribution <code>lang-*.conf</code> files). The easiest way is\nto create a language <code>.conf</code> file (see the AsciiDoc&#8217;s <code>lang-en.conf</code>\nfile).</p>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nYou still use the <em>NOTE</em>, <em>CAUTION</em>, <em>TIP</em>, <em>WARNING</em>,\n<em>IMPORTANT</em> captions in the AsciiDoc source, they get translated in\nthe HTML output file.\n</td>\n</tr>\n</table>\n</div>\n</li>\n<li>\n<p>asciidoc(1) automatically loads configuration files named like\n<code>lang-&lt;lang&gt;.conf</code> where <code>&lt;lang&gt;</code> is a two letter language code that\nmatches the current AsciiDoc <code>lang</code> attribute. See also\n<a href=\"#X27\">Configuration File Names and Locations</a>.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_vim_syntax_highlighter\">Appendix E: Vim Syntax Highlighter</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Syntax highlighting is incredibly useful, in addition to making\nreading AsciiDoc documents much easier syntax highlighting also helps\nyou catch AsciiDoc syntax errors as you write your documents.</p>\n</div>\n<div class=\"paragraph\">\n<p>If you use the Vim editor, it comes with an\n<a href=\"https://github.com/vim/vim/blob/master/runtime/syntax/asciidoc.vim\">AsciiDoc\nsyntax highlighter pre-included</a>. By default, it will activate for\nfiles that use the .asciidoc or .adoc file extensions.</p>\n</div>\n<div class=\"paragraph\">\n<p>Alternatively, to enable syntax highlighting for the current document or\nother extensions:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Put a Vim <em>autocmd</em> in your Vim configuration file (see the\n<a href=\"#X61\">example vimrc file</a>).</p>\n</li>\n<li>\n<p>or execute the Vim command <code>:set syntax=asciidoc</code>.</p>\n</li>\n<li>\n<p>or add the following line to the end of you AsciiDoc source files:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>// vim: set syntax=asciidoc:</pre>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X74\">Appendix F: Attribute Options</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Here is the list of predefined <a href=\"#X75\">attribute list options</a>:</p>\n</div>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<colgroup>\n<col style=\"width: 18.1818%;\">\n<col style=\"width: 18.1818%;\">\n<col style=\"width: 18.1818%;\">\n<col style=\"width: 45.4546%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Option</th>\n<th class=\"tableblock halign-left valign-top\">Backends</th>\n<th class=\"tableblock halign-left valign-top\">AsciiDoc Elements</th>\n<th class=\"tableblock halign-left valign-top\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>autowidth</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">xhtml11, html5, html4</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">table</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The column widths are determined by the browser, not the AsciiDoc\n<em>cols</em> attribute. If there is no <em>width</em> attribute the table width is\nalso left up to the browser.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>unbreakable</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">xhtml11, html5</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">block elements</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>unbreakable</em> attempts to keep the block element together on a single\nprinted page c.f. the <em>breakable</em> and <em>unbreakable</em> docbook (XSL/FO)\noptions below.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>breakable, unbreakable</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook (XSL/FO)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">table, example, block image</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The <em>breakable</em> options allows block elements to break across page\nboundaries; <em>unbreakable</em> attempts to keep the block element together\non a single page. If neither option is specified the default XSL\nstylesheet behavior prevails.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>compact</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook, xhtml11, html5</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">bulleted list, numbered list</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Minimizes vertical space in the list</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>footer</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook, xhtml11, html5, html4</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">table</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The last row of the table is rendered as a footer.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>header</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook, xhtml11, html5, html4</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">table</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The first row of the table is rendered as a header.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>pgwide</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook (XSL/FO)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">table, block image, horizontal labeled list</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Specifies that the element should be rendered across the full text\nwidth of the page irrespective of the current indentation.</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>strong</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">xhtml11, html5, html4</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">labeled lists</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Emboldens label text.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X82\">Appendix G: Diagnostics</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The <code>asciidoc(1)</code> <code>--verbose</code> command-line option prints additional\ninformation to stderr: files processed, filters processed, warnings,\nsystem attribute evaluation.</p>\n</div>\n<div class=\"paragraph\">\n<p>A special attribute named <em>trace</em> enables the output of\nelement-by-element diagnostic messages detailing output markup\ngeneration to stderr.  The <em>trace</em> attribute can be set on the\ncommand-line or from within the document using <a href=\"#X18\">Attribute\nEntries</a> (the latter allows tracing to be confined to specific\nportions of the document).</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Trace messages print the source file name and line number and the\ntrace name followed by related markup.</p>\n</li>\n<li>\n<p><em>trace names</em> are normally the names of AsciiDoc elements (see the\nlist below).</p>\n</li>\n<li>\n<p>The trace message is only printed if the <em>trace</em> attribute value\nmatches the start of a <em>trace name</em>. The <em>trace</em> attribute value can\nbe any Python regular expression.  If a trace value is not specified\nall trace messages will be printed (this can result in large amounts\nof output if applied to the whole document).</p>\n</li>\n<li>\n<p>In the case of inline substitutions:</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The text before and after the substitution is printed; the before\ntext is preceded by a line containing <code>&lt;&lt;&lt;</code> and the after text by\na line containing <code>&gt;&gt;&gt;</code>.</p>\n</li>\n<li>\n<p>The <em>subs</em> trace value is an alias for all inline substitutions.</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"literalblock\">\n<div class=\"title\">Trace names</div>\n<div class=\"content\">\n<pre>&lt;blockname&gt; block close\n&lt;blockname&gt; block open\n&lt;subs&gt;\ndropped line (a line containing an undefined attribute reference).\nfloating title\nfooter\nheader\nlist close\nlist entry close\nlist entry open\nlist item close\nlist item open\nlist label close\nlist label open\nlist open\nmacro block (a block macro)\nname (man page NAME section)\nparagraph\npreamble close\npreamble open\npush blockname\npop blockname\nsection close\nsection open: level &lt;level&gt;\nsubs (all inline substitutions)\ntable</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Where:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>&lt;level&gt;</code> is section level number <em>0&#8230;&#8203;4</em>.</p>\n</li>\n<li>\n<p><code>&lt;blockname&gt;</code> is a delimited block name: <em>comment</em>, <em>sidebar</em>,\n<em>open</em>, <em>pass</em>, <em>listing</em>, <em>literal</em>, <em>quote</em>, <em>example</em>.</p>\n</li>\n<li>\n<p><code>&lt;subs&gt;</code> is an inline substitution type:\n<em>specialcharacters</em>,<em>quotes</em>,<em>specialwords</em>, <em>replacements</em>,\n<em>attributes</em>,<em>macros</em>,<em>callouts</em>, <em>replacements2</em>, <em>replacements3</em>.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Command-line examples:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Trace the entire document.</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a trace mydoc.txt</pre>\n</div>\n</div>\n</li>\n<li>\n<p>Trace messages whose names start with <code>quotes</code> or <code>macros</code>:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a 'trace=quotes|macros'  mydoc.txt</pre>\n</div>\n</div>\n</li>\n<li>\n<p>Print the first line of each trace message:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a trace mydoc.txt 2&gt;&amp;1 | grep ^TRACE:</pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>Attribute Entry examples:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Begin printing all trace messages:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:trace:</pre>\n</div>\n</div>\n</li>\n<li>\n<p>Print only matched trace messages:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:trace: quotes|macros</pre>\n</div>\n</div>\n</li>\n<li>\n<p>Turn trace messages off:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:trace!:</pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"X88\">Appendix H: Backend Attributes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This table contains a list of optional attributes that influence the\ngenerated outputs.</p>\n</div>\n<table class=\"tableblock frame-ends grid-all stretch\">\n<colgroup>\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 71.4286%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Name</th>\n<th class=\"tableblock halign-left valign-top\">Backends</th>\n<th class=\"tableblock halign-left valign-top\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>badges</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">xhtml11, html5</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Link badges (<em>XHTML 1.1</em> and <em>CSS</em>) in document footers. By default\nbadges are omitted (<em>badges</em> is undefined).</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nThe path names of images, icons and scripts are relative path\nnames to the output document not the source document.\n</td>\n</tr>\n</table>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>data-uri</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">xhtml11, html5</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Embed images using the <a href=\"#X66\">data: uri scheme</a>.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>css-signature</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Set a <em>CSS signature</em> for the document (sets the <em>id</em> attribute of the\nHTML <em>body</em> element). CSS signatures provide a mechanism that allows\nusers to personalize the document appearance. The term <em>CSS signature</em>\nwas <a href=\"https://juicystudio.com/article/css-selectors.php\">coined by\nEric Meyer</a>.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>disable-javascript</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">xhtml11, html5</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>If the <code>disable-javascript</code> attribute is defined the <code>asciidoc.js</code>\nJavaScript is not embedded or linked to the output document.  By\ndefault AsciiDoc automatically embeds or links the <code>asciidoc.js</code>\nJavaScript to the output document. The script dynamically generates\n<a href=\"#X91\">table of contents</a> and <a href=\"#X92\">footnotes</a>.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em><a id=\"X97\"></a> docinfo, docinfo1, docinfo2</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">All backends</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>These three attributes control which <a href=\"#X87\">document information\nfiles</a> will be included in the the header of the output file:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">docinfo</dt>\n<dd>\n<p>Include <code>&lt;filename&gt;-docinfo.&lt;ext&gt;</code></p>\n</dd>\n<dt class=\"hdlist1\">docinfo1</dt>\n<dd>\n<p>Include <code>docinfo.&lt;ext&gt;</code></p>\n</dd>\n<dt class=\"hdlist1\">docinfo2</dt>\n<dd>\n<p>Include <code>docinfo.&lt;ext&gt;</code> and <code>&lt;filename&gt;-docinfo.&lt;ext&gt;</code></p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>Where <code>&lt;filename&gt;</code> is the file name (sans extension) of the AsciiDoc\ninput file and <code>&lt;ext&gt;</code> is <code>.html</code> for HTML outputs or <code>.xml</code> for\nDocBook outputs. If the input file is the standard input then the\noutput file name is used. The following example will include the\n<code>mydoc-docinfo.xml</code> docinfo file in the DocBook <code>mydoc.xml</code> output\nfile:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a docinfo -b docbook mydoc.txt</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This next example will include <code>docinfo.html</code> and <code>mydoc-docinfo.html</code>\ndocinfo files in the HTML output file:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a docinfo2 -b html4 mydoc.txt</pre>\n</div>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em><a id=\"X54\"></a>encoding</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4, html5, xhtml11, docbook</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Set the input and output document character set encoding. For example\nthe <code>--attribute encoding=ISO-8859-1</code> command-line option will set the\ncharacter set encoding to <code>ISO-8859-1</code>.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The default encoding is UTF-8.</p>\n</li>\n<li>\n<p>This attribute specifies the character set in the output document.</p>\n</li>\n<li>\n<p>The encoding name must correspond to a Python codec name or alias.</p>\n</li>\n<li>\n<p>The <em>encoding</em> attribute can be set using an AttributeEntry inside\nthe document header. For example:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>:encoding: ISO-8859-1</pre>\n</div>\n</div>\n</li>\n</ul>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>hr</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Defines the <em>html4</em> inter-section horizontal ruler element. By default\n<em>html4</em> top level sections are separated by a horizontal ruler\nelement, undefine this attribute or set it to an empty string if you\ndo not want them. The default <em>html4</em> backend value for the <em>hr</em>\nattribute is <code>&lt;hr&gt;</code>.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em><a id=\"X45\"></a>icons</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">xhtml11, html5</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Link admonition paragraph and admonition block icon images and badge\nimages. By default <em>icons</em> is undefined and text is used in place of\nicon images.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em><a id=\"X44\"></a>iconsdir</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4, html5, xhtml11, docbook</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>The name of the directory containing linked admonition icons,\nnavigation icons and the <code>callouts</code> sub-directory (the <code>callouts</code>\nsub-directory contains <a href=\"#X105\">callout</a> number images). <em>iconsdir</em>\ndefaults to <code>./icons</code>.  If admonition icons are embedded using\nthe <a href=\"#X66\">data-uri</a> scheme then the <em>iconsdir</em> attribute defaults to\nthe location of the icons installed in the AsciiDoc configuration\ndirectory.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>imagesdir</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4, html5, xhtml11, docbook</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>If this attribute is defined it is prepended to the target image file\nname paths in inline and block image macros.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>keywords, description, title</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4, html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>The <em>keywords</em> and <em>description</em> attributes set the correspondingly\nnamed HTML meta tag contents; the <em>title</em> attribute sets the HTML\ntitle tag contents.  Their principle use is for SEO (Search Engine\nOptimisation).  All three are optional, but if they are used they must\nappear in the document header (or on the command-line). If <em>title</em> is\nnot specified the AsciiDoc document title is used.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>linkcss</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Link CSS stylesheets and JavaScripts. By default <em>linkcss</em> is\nundefined in which case stylesheets and scripts are automatically\nembedded in the output document.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em><a id=\"X103\"></a>max-width</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Set the document maximum display width (sets the <em>body</em> element CSS\n<em>max-width</em> property).</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>numbered</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4, html5, xhtml11, docbook (XSL Stylesheets)</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Adds section numbers to section titles. The <em>docbook</em> backend ignores\n<em>numbered</em> attribute entries after the document header.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>plaintext</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">All backends</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>If this global attribute is defined all inline substitutions are\nsuppressed and block indents are retained.  This option is useful when\ndealing with large amounts of imported plain text.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>quirks</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Include the <code>xhtml11-quirks.conf</code> configuration file and\n<code>xhtml11-quirks.css</code> <a href=\"#X35\">stylesheet</a> to work around IE6 browser\nincompatibilities. This feature is deprecated and its use is\ndiscouraged&#8201;&#8212;&#8201;documents are still viewable in IE6 without it.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>revremark</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>A short summary of changes in this document revision. Must be defined\nprior to the first document section. The document also needs to be\ndated to output this attribute.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>footer-style</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html4, html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Changes the \"Last updated\" field in the footer of the document or removes this\nfield and the revision number (in the footer only).<br>\nCan take 3 values:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>none : Don&#8217;t display the \"Last updated\" and \"Revision number\" fields in the\nfooter of the document</p>\n</li>\n<li>\n<p>revdate : The \"Last updated\" field&#8217;s date in the footer will be the revision\ndate specified in the document (<code>revdate</code> attribute)</p>\n</li>\n<li>\n<p>default (or any other value) : The \"Last updated\" field&#8217;s date in the footer\nwill be the date of the input file modification</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>This attribute can be set, for example, using <code>:footer-style: revdate</code> in the\nheader of the file or using the <code>--attribute footer-style=revdate</code> command-line\noption.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>scriptsdir</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>The name of the directory containing linked JavaScripts.\nSee <a href=\"#X35\">HTML stylesheets and JavaScript locations</a>.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>sgml</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">docbook45</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>The <code>--backend=docbook45</code> command-line option produces DocBook 4.5\nXML.  You can produce the older DocBook SGML format using the\n<code>--attribute sgml</code> command-line option.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>stylesdir</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>The name of the directory containing linked or embedded\n<a href=\"#X35\">stylesheets</a>.\nSee <a href=\"#X35\">HTML stylesheets and JavaScript locations</a>.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>stylesheet</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>The file name of an optional additional CSS <a href=\"#X35\">stylesheet</a>.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>theme</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Use alternative stylesheet (see <a href=\"#X35\">Stylesheets</a>).</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em><a id=\"X91\"></a>toc</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11, docbook (XSL Stylesheets)</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Adds a table of contents to the start of an article or book document.\nThe <code>toc</code> attribute can be specified using the <code>--attribute toc</code>\ncommand-line option or a <code>:toc:</code> attribute entry in the document\nheader. The <em>toc</em> attribute is defined by default when the <em>docbook</em>\nbackend is used. To disable table of contents generation undefine the\n<em>toc</em> attribute by putting a <code>:toc!:</code> attribute entry in the document\nheader or from the command-line with an <code>--attribute toc!</code> option.</p>\n</div>\n<div class=\"paragraph\">\n<p><strong>xhtml11 and html5 backends</strong></p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>JavaScript needs to be enabled in your browser.</p>\n</li>\n<li>\n<p>The following example generates a numbered table of contents using a\nJavaScript embedded in the <code>mydoc.html</code> output document:</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a toc -a numbered mydoc.txt</pre>\n</div>\n</div>\n</li>\n</ul>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>toc2</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Adds a scrollable table of contents in the left hand margin of an\narticle or book document. Use the <em>max-width</em> attribute to change the\ncontent width. In all other respects behaves the same as the <em>toc</em>\nattribute.</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>toc-placement</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>When set to <em>auto</em> (the default value) asciidoc(1) will place the\ntable of contents in the document header. When <em>toc-placement</em> is set\nto <em>manual</em> the TOC can be positioned anywhere in the document by\nplacing the <code>toc::[]</code> block macro at the point you want the TOC to\nappear.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nIf you use <em>toc-placement</em> then you also have to define the\n<a href=\"#X91\">toc</a> attribute.\n</td>\n</tr>\n</table>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>toc-title</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Sets the table of contents title (defaults to <em>Table of Contents</em>).</p>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\"><em>toclevels</em></p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">html5, xhtml11</p></td>\n<td class=\"tableblock halign-left valign-top\"><div class=\"content\"><div class=\"paragraph\">\n<p>Sets the number of title levels (1..4) reported in the table of\ncontents (see the <em>toc</em> attribute above). Defaults to 2 and must be\nused with the <em>toc</em> attribute. Example usage:</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>$ asciidoc -a toc -a toclevels=3 doc/asciidoc.txt</pre>\n</div>\n</div></div></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_license\">Appendix I: License</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc is free software; you can redistribute it and/or modify it\nunder the terms of the <em>GNU General Public License version 2</em> (GPLv2)\nas published by the Free Software Foundation.</p>\n</div>\n<div class=\"paragraph\">\n<p>AsciiDoc is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License version 2 for more details.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2002-2013 Stuart Rackham.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2013-2020 AsciiDoc Contributors.</p>\n</div>\n</div>\n</div>\n<div id=\"footnotes\">\n<hr>\n<div class=\"footnote\" id=\"_footnotedef_1\">\n<a href=\"#_footnoteref_1\">1</a>. This is a rough structural guide, not a rigorous syntax definition\n</div>\n<div class=\"footnote\" id=\"_footnotedef_2\">\n<a href=\"#_footnoteref_2\">2</a>. An example footnote.\n</div>\n<div class=\"footnote\" id=\"_footnotedef_3\">\n<a href=\"#_footnoteref_3\">3</a>. Second footnote.\n</div>\n<div class=\"footnote\" id=\"_footnotedef_4\">\n<a href=\"#_footnoteref_4\">4</a>. Conditional inclusion using <code>ifdef</code> and <code>ifndef</code> macros differs from attribute conditional inclusion in that the former occurs when the file is read while the latter occurs when the contents are written.\n</div>\n</div>","document":{"title":"AsciiDoc User Guide"},"fields":{"slug":"/pages/asciidoc/"}}}]}},"pageContext":{}},"staticQueryHashes":[]}