{"data":{"asciidoc":{"html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_introduction\">1. Introduction</a></li>\n<li><a href=\"#_preliminaries\">2. Preliminaries</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_goal\">2.1. Goal</a></li>\n<li><a href=\"#_platform\">2.2. Platform</a></li>\n<li><a href=\"#_dependencies\">2.3. Dependencies</a></li>\n</ul>\n</li>\n<li><a href=\"#_installation\">3. Installation</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_configuration\">3.1. Configuration</a></li>\n<li><a href=\"#_startup\">3.2. Startup</a></li>\n<li><a href=\"#_initial_opening\">3.3. Initial Opening</a></li>\n<li><a href=\"#_unseal\">3.4. Unseal</a></li>\n</ul>\n</li>\n<li><a href=\"#_backup_and_restore\">4. Backup and Restore</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_scripted\">4.1. Scripted</a></li>\n<li><a href=\"#_security\">4.2. Security</a></li>\n<li><a href=\"#_scheduled_and_automated\">4.3. Scheduled and Automated</a></li>\n</ul>\n</li>\n<li><a href=\"#_administration\">5. Administration</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_command_line\">5.1. Command-line</a></li>\n<li><a href=\"#_web_administration\">5.2. Web Administration</a></li>\n</ul>\n</li>\n<li><a href=\"#_cheatsheet\">Appendix A: Cheatsheet</a></li>\n<li><a href=\"#_acronyms\">Appendix B: Acronyms</a></li>\n<li><a href=\"#_glossary\">Appendix C: Glossary</a></li>\n<li><a href=\"#_license\">Appendix D: License</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://site.fortytwobinary.com/\">Site Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://apache.fortytwobinary.com/lab//welcome.html\">Lab Homepage</a></p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vy.png\" alt=\"Company Logo\" height=\"32\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>Welcome to the FortyTwoBinary service documentation for Hashicorp Vault\non Raspberry Pi 4 Model B. This document is subject to great change and will be maintained in a software repository <a href=\"https://github.com/fortytwobinary/labdocs\">here</a>.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nThis installation reference was drafted and is maintained as a DevOps reference to the work that occurs on the FortyTwoBinary network and infrastructure. The\npowerful command-line instructions found here, may or may not be accurate\nor timely. This warning is given to let the DevOp be aware that commands\nmay not be idempotent and before root-level (sudo) actions are taken, to\nthink twice before hitting the Enter key.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">This document</div>\n<div class=\"paragraph\">\n<p>This document was written using asciidoc markup and the HTML you see is\ngenerated by a tool driven using Python called asciidoctor. This\ninstallation reference is a powerful document that can be of great value in the event of data loss, machine crashes, backups, maintenance, installations, and troubleshooting.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_introduction\">1. Introduction</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The network and infrastructure playbook is a compilation of the notes,\nconfigurations, how-tos, general, and technical documentation that will\nfollow the evolution of the FortyTwoBinary network. This treatise will\noutline and describe the network, the configurations, the machines,\nand the software the operates over it.</p>\n</div>\n<div class=\"paragraph\">\n<p>The FortyTwoBinary network is an internal network behind a home ISP or\nInternet Service Provider and protected from the public internet via\na secure and highly configured network router.</p>\n</div>\n<div class=\"paragraph\">\n<p>FortyTwoBinary is a made up organization name for our home network and\nused in the event that other people join me in my learning and education.</p>\n</div>\n<div class=\"sidebarblock\">\n<div class=\"content\">\n<div class=\"title\">My Mission</div>\n<div class=\"paragraph\">\n<p>Kubernetes has emerged as powerful way to serve web content and move\ndata over the internet at grand scale. This is very expensive even for\nwell-paid consultants to learn on their own. Small computers and virtual\nmachines are inexpensive and convenient to own. My mission is to learn\nmore about containers, hosting, and clustering all on my own time and\ndo this economically of course.</p>\n</div>\n<div class=\"paragraph\">\n<p>Turing Pi is now making a cluster board for multiple Raspberry Pi boards\nand the cluster capability for up to 28 cores or 7 Raspberry Pi computers.\nCanonical Ubuntu is also producing a software product called MicroK8s or\nwhat they call a no-more, no-less version of Kubernetes that will run on\na single server host. The FortyTwoBinary network (my home network) is\nslowly becoming a laboratory for learning.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_preliminaries\">2. Preliminaries</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_goal\">2.1. Goal</h3>\n<div class=\"paragraph\">\n<p>The goal here is to install and maintain a single instance of a running\nHashicorp Vault in production mode on a Raspberry Pi 4 Model B.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_platform\">2.2. Platform</h3>\n<div class=\"paragraph\">\n<p>As stated in the Goal section above, the platform for installation and\nservice is the Raspberry Pi 4 Model B. We recently procured 3 Labist\nstarter kits with the new Raspberry Pi 4 Model B machines. These boards\nhave 8GB of fixed RAM and Raspbian (Debian 10 Buster) OS for arm64 (arm7l)\ncame on a 128GB Sansdisk microSD card. Exceptionally easy startup and our\n3 machines are now online, running, and accessible via static IPs.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_dependencies\">2.3. Dependencies</h3>\n<div class=\"paragraph\">\n<p>Dependencies can be software packages, configurations, or even tools that\nneed to be available during the process of installation. In this case,\neverything was available. An ssh connection to the Raspberry Pi allowed\nfor a smooth installation of the Vault binary for this platform. VIM was\ninstalled but VI was present at initial boot.</p>\n</div>\n<div class=\"paragraph\">\n<p>We want to note that the initial binary did not work correctly. We\nalso tried a Docker version prior to a strict server install. It seems\nthat a 64bit edition for the ARM processor is yet to be available. We will\nperiodically check for this and upgrade when available.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_installation\">3. Installation</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Installation of the Hashicorp Vault consists of placement of the vault\nbinary (executable) in a quiet location on the machine that is available\non the administrator&#8217;s <code>$PATH</code>. Currently, the binary is run as a background process and will ultimately be set up with a control script and probably called in <code>rc.local</code>.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nDownload the Vault binary for Raspberry Pi 4 Model B here: <a href=\"https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip\">https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_linux_arm.zip</a>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nDo NOT download the ARM64 edition for Linux. It will NOT run on the Raspberry Pi 4 Model B using Raspbian (Debian 10 Buster) as of February 27, 2021. This message is HIGHLY subject to CHANGE.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Unzip the download somewhere and we moved the file <code>vault</code> to <code>&lt;user-home&gt;/bin</code> Then we added the following to our <code>.bashrc</code> and sourced it instead of logging out and back in.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">export PATH=/home/pi/bin:$PATH</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Now our user (pi) can execute the vault program from anywhere. The only\ncaveat is that with the command, a configuration is needed. Let&#8217;s create\nthe configuration for Vault in the user&#8217;s home directory. We&#8217;ll then run\nthe executable and discuss optimum configuration in the\nsection below.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_configuration\">3.1. Configuration</h3>\n<div class=\"paragraph\">\n<p>Hashicorp Vault can be configured using JSON or <a href=\"#X900\">HCL</a>. We chose to use\nJSON only for familiarity. Create a file called <code>vault-config.json</code> in the\nuser&#8217;s home directory and add this content:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-json\" data-lang=\"json\">{\n  \"backend\": {\n    \"file\": {\n      \"path\": \"vault/data\"\n    }\n  },\n  \"listener\": {\n    \"tcp\":{\n      \"address\": \"0.0.0.0:8200\",\n      \"tls_disable\": 1\n    }\n  },\n  \"ui\": true\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Take note that the path <code>vault/data</code> will be relative to where the vault\nexecutable is run. We will issue the command from the user&#8217;s home directory\nand where this configuration file currently resides. Also the <code>0.0.0.0</code> in\nthe listener section is a placeholder that defines a non-routable IP address. It has been explained to mean \"all addresses\". Learn more here:\n<a href=\"https://en.wikipedia.org/wiki/0.0.0.0\">https://en.wikipedia.org/wiki/0.0.0.0</a>. The 8200 port is the Hashicorp Vault default.</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nPlease note that HTTPS is not being used. This is NOT good practice however, final software configuration may occur within the FortyTwoBinary\nnetwork (internal) or in the event all configuration is moved onto the\npublic Internet.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_startup\">3.2. Startup</h3>\n<div class=\"paragraph\">\n<p>Run the following command from your user&#8217;s home directory:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$  vault server -config=vault-config.json &amp;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You may need to hit enter after the server output on the screen. Obtain\nthe prompt by hitting the return key once. Then let&#8217;s do a process\nstatus and look for the running vault.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ ps -ef | grep vault</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You should see something like this:</p>\n</div>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/vault-process.png\" alt=\"vault-process\"></span></p>\n</div>\n<div class=\"paragraph\">\n<p>We&#8217;ll leave the <code>kill -9</code> business to you sys-Admin types and for later.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_initial_opening\">3.3. Initial Opening</h3>\n<div class=\"paragraph\">\n<p>Before the Hashicorp Vault can be opened, you must initialize Vault.\nEvery initialized vault starts in the sealed state. We&#8217;ll first initialize\nthe vault and then unseal it step by step.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault operator init</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This will initialize the system and create a series of unseal keys and an\nencrypted root token. You will use 3 of the 5 keys given (your choice) to\nunseal the vault and then the root token to login. The operator init\ncommand has options, but for now we&#8217;re do things the easy way. Again, do\nremember that this documentation is ALWAYS subject to change.</p>\n</div>\n<div class=\"paragraph\">\n<p>When vault is initialized you should see output similar to this:\n<span class=\"image\"><img src=\"/images/vault-init.png\" alt=\"vault-init\" height=\"100\"></span></p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nYou must capture the unseal keys and the root initial token. If you lose\nthis information you might as well start over.\n</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_unseal\">3.4. Unseal</h3>\n<div class=\"paragraph\">\n<p>Now we will unseal the vault using the keys provided. You will now call\nfor Vault to unseal 3 times using the following command.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault operator unseal</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Provide the keys one by one and you will see <code>vault status</code> output each\ntime. On the third time you will notice that the sealed attribute is false.\nThe unsealing operation was a success. Now login.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault login</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>This time you enter the root token. Remember not to lose the info from the\ninitialization. We generally do this:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">$ vault operator init &gt; keeper</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_backup_and_restore\">4. Backup and Restore</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_scripted\">4.1. Scripted</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_security\">4.2. Security</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_scheduled_and_automated\">4.3. Scheduled and Automated</h3>\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_administration\">5. Administration</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The full administration and use of Vault is yet to be discovered. For now\nwe&#8217;ll provide some cheatsheet commands and a few use cases.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_command_line\">5.1. Command-line</h3>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203; you are welcome lol &#8230;&#8203;</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_web_administration\">5.2. Web Administration</h3>\n<div class=\"paragraph\">\n<p>Later &#8230;&#8203;</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_cheatsheet\">Appendix A: Cheatsheet</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Text</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_acronyms\">Appendix B: Acronyms</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><a id=\"X900\"></a>HCL</dt>\n<dd>\n<p>Hashicorp Control Language. Read more here: <a href=\"https://github.com/hashicorp/hcl\">https://github.com/hashicorp/hcl</a></p>\n</dd>\n<dt class=\"hdlist1\">NAT</dt>\n<dd>\n<p>Network Address Translation</p>\n</dd>\n<dt class=\"hdlist1\">SBC</dt>\n<dd>\n<p>Small board computer</p>\n</dd>\n<dt class=\"hdlist1\">WAP</dt>\n<dd>\n<p>Wireless Access Point</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_glossary\">Appendix C: Glossary</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist glossary\">\n<dl>\n<dt><a id=\"X8\"></a> Block element</dt>\n<dd>\n<p>An AsciiDoc block element is a document entity composed of one or\nmore whole lines of text.</p>\n</dd>\n<dt><a id=\"X34\"></a> Inline element</dt>\n<dd>\n<p>AsciiDoc inline elements occur within block element textual\ncontent, they perform formatting and substitution tasks.</p>\n</dd>\n<dt>Formal element</dt>\n<dd>\n<p>An AsciiDoc block element that has a BlockTitle. Formal elements\nare normally listed in front or back matter, for example lists of\ntables, examples and figures.</p>\n</dd>\n<dt>Verbatim element</dt>\n<dd>\n<p>The word verbatim indicates that white space and line breaks in\nthe source document are to be preserved in the output document.</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_license\">Appendix D: License</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This document is licensed by the Apache License version 2.0. Currently,\nthe content in this document is being kept from the public however, in\nthe event the material contained here is willingly shared with\nothers, the license will remain unchanged and will convey with the\ntransference of the material.</p>\n</div>\n<div class=\"paragraph\">\n<p>Apache License\nVersion 2.0, January 2004\n<a href=\"http://www.apache.org/licenses/\" class=\"bare\">http://www.apache.org/licenses/</a></p>\n</div>\n<div class=\"paragraph\">\n<p>A copy has also been provided with this software repository.</p>\n</div>\n<div class=\"paragraph\">\n<p>Copyright &#169; 2021 David L Whitehurst.</p>\n</div>\n</div>\n</div>","document":{"title":"Hashicorp Vault","subtitle":"","main":"Hashicorp Vault"},"revision":null,"author":{"fullName":"David L. Whitehurst","firstName":"FortyTwoBinary","lastName":"Team","middleName":"","authorInitials":"FT","email":""}}},"pageContext":{"id":"57bf26e4-f65f-5abb-9eb9-9afdda5d06eb"}}